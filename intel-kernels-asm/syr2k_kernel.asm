Dump of assembler code for function syr2k_kernel:
=> 0x00007ffff7fca090 <+0>:	push   %rbp
   0x00007ffff7fca091 <+1>:	push   %r15
   0x00007ffff7fca093 <+3>:	push   %r14
   0x00007ffff7fca095 <+5>:	push   %r13
   0x00007ffff7fca097 <+7>:	push   %r12
   0x00007ffff7fca099 <+9>:	push   %rbx
   0x00007ffff7fca09a <+10>:	sub    $0x110,%rsp
   0x00007ffff7fca0a1 <+17>:	movslq 0x24(%rdi),%rbx
   0x00007ffff7fca0a5 <+21>:	mov    0x60(%rdi),%r8
   0x00007ffff7fca0a9 <+25>:	mov    0x68(%rdi),%rcx
   0x00007ffff7fca0ad <+29>:	mov    (%rsi),%rax
   0x00007ffff7fca0b0 <+32>:	imul   %r8,%rax
   0x00007ffff7fca0b4 <+36>:	add    0x30(%rdi),%rax
   0x00007ffff7fca0b8 <+40>:	mov    0x8(%rsi),%rsi
   0x00007ffff7fca0bc <+44>:	imul   %rcx,%rsi
   0x00007ffff7fca0c0 <+48>:	add    0x38(%rdi),%rsi
   0x00007ffff7fca0c4 <+52>:	add    %rsi,%rcx
   0x00007ffff7fca0c7 <+55>:	cmp    %rbx,%rcx
   0x00007ffff7fca0ca <+58>:	mov    %rbx,%rdx
   0x00007ffff7fca0cd <+61>:	cmovle %rcx,%rdx
   0x00007ffff7fca0d1 <+65>:	add    %rax,%r8
   0x00007ffff7fca0d4 <+68>:	cmp    %rbx,%r8
   0x00007ffff7fca0d7 <+71>:	mov    %rbx,%rbp
   0x00007ffff7fca0da <+74>:	cmovle %r8,%rbp
   0x00007ffff7fca0de <+78>:	mov    %rbx,0x50(%rsp)
   0x00007ffff7fca0e3 <+83>:	test   %rbx,%rbx
   0x00007ffff7fca0e6 <+86>:	cmovs  %rcx,%rdx
   0x00007ffff7fca0ea <+90>:	cmovs  %r8,%rbp
   0x00007ffff7fca0ee <+94>:	mov    %rax,0x40(%rsp)
   0x00007ffff7fca0f3 <+99>:	sub    %rax,%rbp
   0x00007ffff7fca0f6 <+102>:	mov    %rbp,%rax
   0x00007ffff7fca0f9 <+105>:	test   %rbp,%rbp
   0x00007ffff7fca0fc <+108>:	jle    0x7ffff7fcb045 <syr2k_kernel+4021>
   0x00007ffff7fca102 <+114>:	sub    %rsi,%rdx
   0x00007ffff7fca105 <+117>:	mov    %rdx,0x48(%rsp)
   0x00007ffff7fca10a <+122>:	test   %rdx,%rdx
   0x00007ffff7fca10d <+125>:	jle    0x7ffff7fcb045 <syr2k_kernel+4021>
   0x00007ffff7fca113 <+131>:	mov    %rsi,-0x28(%rsp)
   0x00007ffff7fca118 <+136>:	mov    (%rdi),%rcx
   0x00007ffff7fca11b <+139>:	mov    %rcx,-0x18(%rsp)
   0x00007ffff7fca120 <+144>:	mov    0x8(%rdi),%rcx
   0x00007ffff7fca124 <+148>:	mov    %rcx,-0x20(%rsp)
   0x00007ffff7fca129 <+153>:	mov    0x10(%rdi),%r11
   0x00007ffff7fca12d <+157>:	vmovss 0x18(%rdi),%xmm0
   0x00007ffff7fca132 <+162>:	vmovss 0x1c(%rdi),%xmm10
   0x00007ffff7fca137 <+167>:	movslq 0x20(%rdi),%r14
   0x00007ffff7fca13b <+171>:	mov    %rax,%rdx
   0x00007ffff7fca13e <+174>:	sar    $0x3,%rdx
   0x00007ffff7fca142 <+178>:	mov    %rax,%rcx
   0x00007ffff7fca145 <+181>:	and    $0xfffffffffffffff8,%rcx
   0x00007ffff7fca149 <+185>:	mov    %rcx,0x18(%rsp)
   0x00007ffff7fca14e <+190>:	sub    %rcx,%rax
   0x00007ffff7fca151 <+193>:	mov    %rax,0x68(%rsp)
   0x00007ffff7fca156 <+198>:	mov    %rdx,0xa8(%rsp)
   0x00007ffff7fca15e <+206>:	test   %rdx,%rdx
   0x00007ffff7fca161 <+209>:	mov    %r14,0x70(%rsp)
   0x00007ffff7fca166 <+214>:	je     0x7ffff7fcad50 <syr2k_kernel+3264>
   0x00007ffff7fca16c <+220>:	vbroadcastss %xmm10,%ymm11
   0x00007ffff7fca171 <+225>:	vmovd  %r14d,%xmm3
   0x00007ffff7fca176 <+230>:	vpbroadcastd %xmm3,%ymm8
   0x00007ffff7fca17b <+235>:	lea    -0x1(%r14),%rax
   0x00007ffff7fca17f <+239>:	mov    %rax,0xa0(%rsp)
   0x00007ffff7fca187 <+247>:	mov    %r14d,%eax
   0x00007ffff7fca18a <+250>:	and    $0x7,%eax
   0x00007ffff7fca18d <+253>:	mov    %r14,%rcx
   0x00007ffff7fca190 <+256>:	mov    %rax,0x98(%rsp)
   0x00007ffff7fca198 <+264>:	sub    %rax,%rcx
   0x00007ffff7fca19b <+267>:	mov    %rcx,0x108(%rsp)
   0x00007ffff7fca1a3 <+275>:	mov    -0x18(%rsp),%rax
   0x00007ffff7fca1a8 <+280>:	lea    0x1c(%rax),%rax
   0x00007ffff7fca1ac <+284>:	mov    %rax,0x60(%rsp)
   0x00007ffff7fca1b1 <+289>:	mov    -0x28(%rsp),%rcx
   0x00007ffff7fca1b6 <+294>:	mov    %ecx,%edx
   0x00007ffff7fca1b8 <+296>:	imul   %r14d,%edx
   0x00007ffff7fca1bc <+300>:	mov    -0x20(%rsp),%rax
   0x00007ffff7fca1c1 <+305>:	lea    0x1c(%rax),%rax
   0x00007ffff7fca1c5 <+309>:	mov    %rax,0x58(%rsp)
   0x00007ffff7fca1ca <+314>:	xor    %esi,%esi
   0x00007ffff7fca1cc <+316>:	movabs $0x7ffff7fc9000,%rax
   0x00007ffff7fca1d6 <+326>:	vmovdqa (%rax),%ymm9
   0x00007ffff7fca1da <+330>:	mov    %r11,-0x30(%rsp)
   0x00007ffff7fca1df <+335>:	nop
   0x00007ffff7fca1e0 <+336>:	mov    %rsi,0x88(%rsp)
   0x00007ffff7fca1e8 <+344>:	mov    %edx,0x3c(%rsp)
   0x00007ffff7fca1ec <+348>:	movslq %edx,%rsi
   0x00007ffff7fca1ef <+351>:	mov    0x58(%rsp),%rax
   0x00007ffff7fca1f4 <+356>:	lea    (%rax,%rsi,4),%rax
   0x00007ffff7fca1f8 <+360>:	mov    %rax,-0x10(%rsp)
   0x00007ffff7fca1fd <+365>:	mov    0x50(%rsp),%rax
   0x00007ffff7fca202 <+370>:	mov    %rcx,0x80(%rsp)
   0x00007ffff7fca20a <+378>:	imul   %ecx,%eax
   0x00007ffff7fca20d <+381>:	mov    %rax,0xf0(%rsp)
   0x00007ffff7fca215 <+389>:	mov    0x40(%rsp),%rdx
   0x00007ffff7fca21a <+394>:	vmovd  %edx,%xmm5
   0x00007ffff7fca21e <+398>:	vpbroadcastd %xmm5,%ymm5
   0x00007ffff7fca223 <+403>:	vpaddd %ymm9,%ymm5,%ymm5
   0x00007ffff7fca228 <+408>:	vpmulld %ymm8,%ymm5,%ymm13
   0x00007ffff7fca22d <+413>:	mov    0x60(%rsp),%rax
   0x00007ffff7fca232 <+418>:	mov    %rsi,0x90(%rsp)
   0x00007ffff7fca23a <+426>:	lea    (%rax,%rsi,4),%rax
   0x00007ffff7fca23e <+430>:	mov    %rax,-0x48(%rsp)
   0x00007ffff7fca243 <+435>:	vmovd  %xmm13,%eax
   0x00007ffff7fca247 <+439>:	vpextrd $0x1,%xmm13,%ecx
   0x00007ffff7fca24d <+445>:	sub    %eax,%ecx
   0x00007ffff7fca24f <+447>:	shl    $0x3,%ecx
   0x00007ffff7fca252 <+450>:	vmovd  %ecx,%xmm6
   0x00007ffff7fca256 <+454>:	vpbroadcastd %xmm6,%ymm12
   0x00007ffff7fca25b <+459>:	xor    %eax,%eax
   0x00007ffff7fca25d <+461>:	mov    %edx,%ecx
   0x00007ffff7fca25f <+463>:	nop
   0x00007ffff7fca260 <+464>:	mov    %rax,0x100(%rsp)
   0x00007ffff7fca268 <+472>:	mov    0xf0(%rsp),%rax
   0x00007ffff7fca270 <+480>:	mov    %rcx,0xf8(%rsp)
   0x00007ffff7fca278 <+488>:	lea    (%rax,%rcx,1),%eax
   0x00007ffff7fca27b <+491>:	cltq   
   0x00007ffff7fca27d <+493>:	vmulps (%r11,%rax,4),%ymm11,%ymm7
   0x00007ffff7fca283 <+499>:	vmovups %ymm7,(%r11,%rax,4)
   0x00007ffff7fca289 <+505>:	test   %r14d,%r14d
   0x00007ffff7fca28c <+508>:	jle    0x7ffff7fcacf2 <syr2k_kernel+3170>
   0x00007ffff7fca292 <+514>:	mov    %rax,-0x38(%rsp)
   0x00007ffff7fca297 <+519>:	vmovq  %xmm13,%rax
   0x00007ffff7fca29c <+524>:	movslq %eax,%r11
   0x00007ffff7fca29f <+527>:	mov    %rax,%rdx
   0x00007ffff7fca2a2 <+530>:	vpextrq $0x1,%xmm13,%rax
   0x00007ffff7fca2a8 <+536>:	sar    $0x20,%rdx
   0x00007ffff7fca2ac <+540>:	movslq %eax,%r8
   0x00007ffff7fca2af <+543>:	sar    $0x20,%rax
   0x00007ffff7fca2b3 <+547>:	vextracti128 $0x1,%ymm13,%xmm3
   0x00007ffff7fca2b9 <+553>:	vmovq  %xmm3,%rcx
   0x00007ffff7fca2be <+558>:	movslq %ecx,%r10
   0x00007ffff7fca2c1 <+561>:	mov    %rcx,%rbp
   0x00007ffff7fca2c4 <+564>:	vpextrq $0x1,%xmm3,%rcx
   0x00007ffff7fca2ca <+570>:	sar    $0x20,%rbp
   0x00007ffff7fca2ce <+574>:	movslq %ecx,%rdi
   0x00007ffff7fca2d1 <+577>:	sar    $0x20,%rcx
   0x00007ffff7fca2d5 <+581>:	cmpq   $0x7,0xa0(%rsp)
   0x00007ffff7fca2de <+590>:	mov    %r11,0xe8(%rsp)
   0x00007ffff7fca2e6 <+598>:	mov    %rdx,0xe0(%rsp)
   0x00007ffff7fca2ee <+606>:	mov    %r8,0xd8(%rsp)
   0x00007ffff7fca2f6 <+614>:	mov    %rax,0xd0(%rsp)
   0x00007ffff7fca2fe <+622>:	mov    %r10,0xc8(%rsp)
   0x00007ffff7fca306 <+630>:	mov    %rbp,0xc0(%rsp)
   0x00007ffff7fca30e <+638>:	mov    %rdi,0xb8(%rsp)
   0x00007ffff7fca316 <+646>:	mov    %rcx,0xb0(%rsp)
   0x00007ffff7fca31e <+654>:	jae    0x7ffff7fca330 <syr2k_kernel+672>
   0x00007ffff7fca320 <+656>:	xor    %esi,%esi
   0x00007ffff7fca322 <+658>:	jmp    0x7ffff7fcab1b <syr2k_kernel+2699>
   0x00007ffff7fca327 <+663>:	nopw   0x0(%rax,%rax,1)
   0x00007ffff7fca330 <+672>:	mov    0x60(%rsp),%rbx
   0x00007ffff7fca335 <+677>:	lea    (%rbx,%rcx,4),%rsi
   0x00007ffff7fca339 <+681>:	mov    %rsi,-0x60(%rsp)
   0x00007ffff7fca33e <+686>:	lea    (%rbx,%rdi,4),%rsi
   0x00007ffff7fca342 <+690>:	mov    %rsi,-0x50(%rsp)
   0x00007ffff7fca347 <+695>:	lea    (%rbx,%rbp,4),%rsi
   0x00007ffff7fca34b <+699>:	mov    %rsi,-0x58(%rsp)
   0x00007ffff7fca350 <+704>:	lea    (%rbx,%r10,4),%rsi
   0x00007ffff7fca354 <+708>:	mov    %rsi,-0x68(%rsp)
   0x00007ffff7fca359 <+713>:	lea    (%rbx,%rax,4),%rsi
   0x00007ffff7fca35d <+717>:	mov    %rsi,0x78(%rsp)
   0x00007ffff7fca362 <+722>:	lea    (%rbx,%r8,4),%rsi
   0x00007ffff7fca366 <+726>:	mov    %rsi,0x30(%rsp)
   0x00007ffff7fca36b <+731>:	lea    (%rbx,%rdx,4),%rsi
   0x00007ffff7fca36f <+735>:	mov    %rsi,-0x40(%rsp)
   0x00007ffff7fca374 <+740>:	lea    (%rbx,%r11,4),%rsi
   0x00007ffff7fca378 <+744>:	mov    %rsi,-0x80(%rsp)
   0x00007ffff7fca37d <+749>:	mov    0x58(%rsp),%rsi
   0x00007ffff7fca382 <+754>:	lea    (%rsi,%rcx,4),%rcx
   0x00007ffff7fca386 <+758>:	mov    %rcx,0x28(%rsp)
   0x00007ffff7fca38b <+763>:	lea    (%rsi,%rdi,4),%rcx
   0x00007ffff7fca38f <+767>:	mov    %rcx,0x10(%rsp)
   0x00007ffff7fca394 <+772>:	lea    (%rsi,%rbp,4),%rcx
   0x00007ffff7fca398 <+776>:	mov    %rcx,-0x70(%rsp)
   0x00007ffff7fca39d <+781>:	lea    (%rsi,%r10,4),%rcx
   0x00007ffff7fca3a1 <+785>:	mov    %rcx,0x8(%rsp)
   0x00007ffff7fca3a6 <+790>:	lea    (%rsi,%rax,4),%rax
   0x00007ffff7fca3aa <+794>:	mov    %rax,-0x78(%rsp)
   0x00007ffff7fca3af <+799>:	mov    %r8,%rbp
   0x00007ffff7fca3b2 <+802>:	lea    (%rsi,%rbp,4),%rax
   0x00007ffff7fca3b6 <+806>:	mov    %rax,(%rsp)
   0x00007ffff7fca3ba <+810>:	lea    (%rsi,%rdx,4),%rax
   0x00007ffff7fca3be <+814>:	mov    %rax,-0x8(%rsp)
   0x00007ffff7fca3c3 <+819>:	lea    (%rsi,%r11,4),%rax
   0x00007ffff7fca3c7 <+823>:	mov    %rax,0x20(%rsp)
   0x00007ffff7fca3cc <+828>:	xor    %esi,%esi
   0x00007ffff7fca3ce <+830>:	xchg   %ax,%ax
   0x00007ffff7fca3d0 <+832>:	mov    -0x48(%rsp),%rax
   0x00007ffff7fca3d5 <+837>:	vmulss -0x1c(%rax,%rsi,4),%xmm0,%xmm3
   0x00007ffff7fca3db <+843>:	mov    0x8(%rsp),%r12
   0x00007ffff7fca3e0 <+848>:	vmovss -0x1c(%r12,%rsi,4),%xmm4
   0x00007ffff7fca3e7 <+855>:	mov    -0x70(%rsp),%r9
   0x00007ffff7fca3ec <+860>:	vinsertps $0x10,-0x1c(%r9,%rsi,4),%xmm4,%xmm4
   0x00007ffff7fca3f4 <+868>:	mov    0x20(%rsp),%r13
   0x00007ffff7fca3f9 <+873>:	vmovss -0x1c(%r13,%rsi,4),%xmm1
   0x00007ffff7fca400 <+880>:	mov    -0x8(%rsp),%rax
   0x00007ffff7fca405 <+885>:	vinsertps $0x10,-0x1c(%rax,%rsi,4),%xmm1,%xmm1
   0x00007ffff7fca40d <+893>:	mov    -0x10(%rsp),%r8
   0x00007ffff7fca412 <+898>:	vmulss -0x1c(%r8,%rsi,4),%xmm0,%xmm2
   0x00007ffff7fca419 <+905>:	mov    0x10(%rsp),%r15
   0x00007ffff7fca41e <+910>:	vinsertps $0x20,-0x1c(%r15,%rsi,4),%xmm4,%xmm4
   0x00007ffff7fca426 <+918>:	mov    -0x68(%rsp),%rdi
   0x00007ffff7fca42b <+923>:	vmovss -0x1c(%rdi,%rsi,4),%xmm6
   0x00007ffff7fca431 <+929>:	mov    (%rsp),%r14
   0x00007ffff7fca435 <+933>:	vinsertps $0x20,-0x1c(%r14,%rsi,4),%xmm1,%xmm1
   0x00007ffff7fca43d <+941>:	mov    -0x58(%rsp),%rax
   0x00007ffff7fca442 <+946>:	vinsertps $0x10,-0x1c(%rax,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca44a <+954>:	mov    -0x50(%rsp),%rax
   0x00007ffff7fca44f <+959>:	vinsertps $0x20,-0x1c(%rax,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca457 <+967>:	vbroadcastss %xmm3,%ymm3
   0x00007ffff7fca45c <+972>:	mov    -0x80(%rsp),%rax
   0x00007ffff7fca461 <+977>:	vmovss -0x1c(%rax,%rsi,4),%xmm5
   0x00007ffff7fca467 <+983>:	mov    0x28(%rsp),%rdx
   0x00007ffff7fca46c <+988>:	vinsertps $0x30,-0x1c(%rdx,%rsi,4),%xmm4,%xmm4
   0x00007ffff7fca474 <+996>:	mov    -0x40(%rsp),%rbx
   0x00007ffff7fca479 <+1001>:	vinsertps $0x10,-0x1c(%rbx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca481 <+1009>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fca486 <+1014>:	vinsertps $0x30,-0x1c(%rax,%rsi,4),%xmm1,%xmm1
   0x00007ffff7fca48e <+1022>:	mov    0x30(%rsp),%r10
   0x00007ffff7fca493 <+1027>:	vinsertps $0x20,-0x1c(%r10,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca49b <+1035>:	mov    -0x60(%rsp),%rax
   0x00007ffff7fca4a0 <+1040>:	vinsertps $0x30,-0x1c(%rax,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca4a8 <+1048>:	vbroadcastss %xmm2,%ymm2
   0x00007ffff7fca4ad <+1053>:	mov    0x78(%rsp),%rbp
   0x00007ffff7fca4b2 <+1058>:	vinsertps $0x30,-0x1c(%rbp,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca4ba <+1066>:	vinsertf128 $0x1,%xmm4,%ymm1,%ymm1
   0x00007ffff7fca4c0 <+1072>:	vinsertf128 $0x1,%xmm6,%ymm5,%ymm4
   0x00007ffff7fca4c6 <+1078>:	vmulps %ymm4,%ymm2,%ymm2
   0x00007ffff7fca4ca <+1082>:	vfmadd231ps %ymm1,%ymm3,%ymm2
   0x00007ffff7fca4cf <+1087>:	vaddps %ymm2,%ymm7,%ymm7
   0x00007ffff7fca4d3 <+1091>:	mov    -0x30(%rsp),%r11
   0x00007ffff7fca4d8 <+1096>:	mov    -0x38(%rsp),%rax
   0x00007ffff7fca4dd <+1101>:	vmovups %ymm7,(%r11,%rax,4)
   0x00007ffff7fca4e3 <+1107>:	mov    -0x48(%rsp),%rax
   0x00007ffff7fca4e8 <+1112>:	vmulss -0x18(%rax,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca4ee <+1118>:	vmovss -0x18(%r12,%rsi,4),%xmm2
   0x00007ffff7fca4f5 <+1125>:	vinsertps $0x10,-0x18(%r9,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca4fd <+1133>:	vmovss -0x18(%r13,%rsi,4),%xmm3
   0x00007ffff7fca504 <+1140>:	mov    -0x8(%rsp),%rcx
   0x00007ffff7fca509 <+1145>:	vinsertps $0x10,-0x18(%rcx,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca511 <+1153>:	vmulss -0x18(%r8,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca518 <+1160>:	vinsertps $0x20,-0x18(%r15,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca520 <+1168>:	vmovss -0x18(%rdi,%rsi,4),%xmm5
   0x00007ffff7fca526 <+1174>:	vinsertps $0x20,-0x18(%r14,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca52e <+1182>:	mov    -0x58(%rsp),%r8
   0x00007ffff7fca533 <+1187>:	vinsertps $0x10,-0x18(%r8,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca53b <+1195>:	mov    -0x50(%rsp),%rdi
   0x00007ffff7fca540 <+1200>:	vinsertps $0x20,-0x18(%rdi,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca548 <+1208>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca54d <+1213>:	mov    -0x80(%rsp),%r9
   0x00007ffff7fca552 <+1218>:	vmovss -0x18(%r9,%rsi,4),%xmm6
   0x00007ffff7fca559 <+1225>:	vinsertps $0x30,-0x18(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca561 <+1233>:	vinsertps $0x10,-0x18(%rbx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca569 <+1241>:	mov    %rbx,%r15
   0x00007ffff7fca56c <+1244>:	mov    -0x78(%rsp),%r13
   0x00007ffff7fca571 <+1249>:	vinsertps $0x30,-0x18(%r13,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca579 <+1257>:	vinsertps $0x20,-0x18(%r10,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca581 <+1265>:	mov    %r10,%r14
   0x00007ffff7fca584 <+1268>:	mov    -0x60(%rsp),%rdx
   0x00007ffff7fca589 <+1273>:	vinsertps $0x30,-0x18(%rdx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca591 <+1281>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fca596 <+1286>:	vinsertps $0x30,-0x18(%rbp,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca59e <+1294>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fca5a4 <+1300>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fca5aa <+1306>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fca5ae <+1310>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fca5b3 <+1315>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fca5b7 <+1319>:	mov    -0x38(%rsp),%r10
   0x00007ffff7fca5bc <+1324>:	vmovups %ymm7,(%r11,%r10,4)
   0x00007ffff7fca5c2 <+1330>:	vmulss -0x14(%rax,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca5c8 <+1336>:	mov    %rax,%r11
   0x00007ffff7fca5cb <+1339>:	vmovss -0x14(%r12,%rsi,4),%xmm2
   0x00007ffff7fca5d2 <+1346>:	mov    -0x70(%rsp),%rbx
   0x00007ffff7fca5d7 <+1351>:	vinsertps $0x10,-0x14(%rbx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca5df <+1359>:	mov    0x20(%rsp),%rax
   0x00007ffff7fca5e4 <+1364>:	vmovss -0x14(%rax,%rsi,4),%xmm3
   0x00007ffff7fca5ea <+1370>:	vinsertps $0x10,-0x14(%rcx,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca5f2 <+1378>:	mov    %rcx,%r12
   0x00007ffff7fca5f5 <+1381>:	mov    -0x10(%rsp),%rax
   0x00007ffff7fca5fa <+1386>:	vmulss -0x14(%rax,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca600 <+1392>:	mov    0x10(%rsp),%rcx
   0x00007ffff7fca605 <+1397>:	vinsertps $0x20,-0x14(%rcx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca60d <+1405>:	mov    -0x68(%rsp),%rax
   0x00007ffff7fca612 <+1410>:	vmovss -0x14(%rax,%rsi,4),%xmm5
   0x00007ffff7fca618 <+1416>:	mov    (%rsp),%rax
   0x00007ffff7fca61c <+1420>:	vinsertps $0x20,-0x14(%rax,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca624 <+1428>:	vinsertps $0x10,-0x14(%r8,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca62c <+1436>:	vinsertps $0x20,-0x14(%rdi,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca634 <+1444>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca639 <+1449>:	vmovss -0x14(%r9,%rsi,4),%xmm6
   0x00007ffff7fca640 <+1456>:	mov    0x28(%rsp),%rax
   0x00007ffff7fca645 <+1461>:	vinsertps $0x30,-0x14(%rax,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca64d <+1469>:	vinsertps $0x10,-0x14(%r15,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca655 <+1477>:	vinsertps $0x30,-0x14(%r13,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca65d <+1485>:	vinsertps $0x20,-0x14(%r14,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca665 <+1493>:	vinsertps $0x30,-0x14(%rdx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca66d <+1501>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fca672 <+1506>:	mov    %rbp,%r14
   0x00007ffff7fca675 <+1509>:	vinsertps $0x30,-0x14(%r14,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca67d <+1517>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fca683 <+1523>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fca689 <+1529>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fca68d <+1533>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fca692 <+1538>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fca696 <+1542>:	mov    -0x30(%rsp),%r9
   0x00007ffff7fca69b <+1547>:	vmovups %ymm7,(%r9,%r10,4)
   0x00007ffff7fca6a1 <+1553>:	mov    %r10,%r15
   0x00007ffff7fca6a4 <+1556>:	vmulss -0x10(%r11,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca6ab <+1563>:	mov    0x8(%rsp),%r11
   0x00007ffff7fca6b0 <+1568>:	vmovss -0x10(%r11,%rsi,4),%xmm2
   0x00007ffff7fca6b7 <+1575>:	mov    %rbx,%r10
   0x00007ffff7fca6ba <+1578>:	vinsertps $0x10,-0x10(%r10,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca6c2 <+1586>:	mov    0x20(%rsp),%rbp
   0x00007ffff7fca6c7 <+1591>:	vmovss -0x10(%rbp,%rsi,4),%xmm3
   0x00007ffff7fca6cd <+1597>:	vinsertps $0x10,-0x10(%r12,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca6d5 <+1605>:	mov    -0x10(%rsp),%rax
   0x00007ffff7fca6da <+1610>:	vmulss -0x10(%rax,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca6e0 <+1616>:	vinsertps $0x20,-0x10(%rcx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca6e8 <+1624>:	mov    %rcx,%r13
   0x00007ffff7fca6eb <+1627>:	mov    -0x68(%rsp),%r12
   0x00007ffff7fca6f0 <+1632>:	vmovss -0x10(%r12,%rsi,4),%xmm5
   0x00007ffff7fca6f7 <+1639>:	mov    (%rsp),%rcx
   0x00007ffff7fca6fb <+1643>:	vinsertps $0x20,-0x10(%rcx,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca703 <+1651>:	vinsertps $0x10,-0x10(%r8,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca70b <+1659>:	vinsertps $0x20,-0x10(%rdi,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca713 <+1667>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca718 <+1672>:	mov    -0x80(%rsp),%rdx
   0x00007ffff7fca71d <+1677>:	vmovss -0x10(%rdx,%rsi,4),%xmm6
   0x00007ffff7fca723 <+1683>:	mov    0x28(%rsp),%rdi
   0x00007ffff7fca728 <+1688>:	vinsertps $0x30,-0x10(%rdi,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca730 <+1696>:	mov    -0x40(%rsp),%rdx
   0x00007ffff7fca735 <+1701>:	vinsertps $0x10,-0x10(%rdx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca73d <+1709>:	mov    -0x78(%rsp),%rbx
   0x00007ffff7fca742 <+1714>:	vinsertps $0x30,-0x10(%rbx,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca74a <+1722>:	mov    0x30(%rsp),%r8
   0x00007ffff7fca74f <+1727>:	vinsertps $0x20,-0x10(%r8,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca757 <+1735>:	mov    -0x60(%rsp),%rbx
   0x00007ffff7fca75c <+1740>:	vinsertps $0x30,-0x10(%rbx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca764 <+1748>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fca769 <+1753>:	vinsertps $0x30,-0x10(%r14,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca771 <+1761>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fca777 <+1767>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fca77d <+1773>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fca781 <+1777>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fca786 <+1782>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fca78a <+1786>:	vmovups %ymm7,(%r9,%r15,4)
   0x00007ffff7fca790 <+1792>:	mov    -0x48(%rsp),%rbx
   0x00007ffff7fca795 <+1797>:	vmulss -0xc(%rbx,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca79b <+1803>:	vmovss -0xc(%r11,%rsi,4),%xmm2
   0x00007ffff7fca7a2 <+1810>:	mov    %r11,%r15
   0x00007ffff7fca7a5 <+1813>:	vinsertps $0x10,-0xc(%r10,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca7ad <+1821>:	vmovss -0xc(%rbp,%rsi,4),%xmm3
   0x00007ffff7fca7b3 <+1827>:	mov    -0x8(%rsp),%r9
   0x00007ffff7fca7b8 <+1832>:	vinsertps $0x10,-0xc(%r9,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca7c0 <+1840>:	vmulss -0xc(%rax,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca7c6 <+1846>:	vinsertps $0x20,-0xc(%r13,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca7ce <+1854>:	vmovss -0xc(%r12,%rsi,4),%xmm5
   0x00007ffff7fca7d5 <+1861>:	vinsertps $0x20,-0xc(%rcx,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca7dd <+1869>:	mov    %rcx,%r10
   0x00007ffff7fca7e0 <+1872>:	mov    -0x58(%rsp),%rcx
   0x00007ffff7fca7e5 <+1877>:	vinsertps $0x10,-0xc(%rcx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca7ed <+1885>:	mov    -0x50(%rsp),%r12
   0x00007ffff7fca7f2 <+1890>:	vinsertps $0x20,-0xc(%r12,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca7fa <+1898>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca7ff <+1903>:	mov    -0x80(%rsp),%rbx
   0x00007ffff7fca804 <+1908>:	vmovss -0xc(%rbx,%rsi,4),%xmm6
   0x00007ffff7fca80a <+1914>:	vinsertps $0x30,-0xc(%rdi,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca812 <+1922>:	vinsertps $0x10,-0xc(%rdx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca81a <+1930>:	mov    -0x78(%rsp),%r11
   0x00007ffff7fca81f <+1935>:	vinsertps $0x30,-0xc(%r11,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca827 <+1943>:	vinsertps $0x20,-0xc(%r8,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca82f <+1951>:	mov    %r8,%r14
   0x00007ffff7fca832 <+1954>:	mov    -0x60(%rsp),%rbx
   0x00007ffff7fca837 <+1959>:	vinsertps $0x30,-0xc(%rbx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca83f <+1967>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fca844 <+1972>:	mov    0x78(%rsp),%r8
   0x00007ffff7fca849 <+1977>:	vinsertps $0x30,-0xc(%r8,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca851 <+1985>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fca857 <+1991>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fca85d <+1997>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fca861 <+2001>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fca866 <+2006>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fca86a <+2010>:	mov    -0x38(%rsp),%r13
   0x00007ffff7fca86f <+2015>:	mov    -0x30(%rsp),%rdx
   0x00007ffff7fca874 <+2020>:	vmovups %ymm7,(%rdx,%r13,4)
   0x00007ffff7fca87a <+2026>:	mov    -0x48(%rsp),%rdx
   0x00007ffff7fca87f <+2031>:	vmulss -0x8(%rdx,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca885 <+2037>:	vmovss -0x8(%r15,%rsi,4),%xmm2
   0x00007ffff7fca88c <+2044>:	mov    -0x70(%rsp),%rdx
   0x00007ffff7fca891 <+2049>:	vinsertps $0x10,-0x8(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca899 <+2057>:	vmovss -0x8(%rbp,%rsi,4),%xmm3
   0x00007ffff7fca89f <+2063>:	vinsertps $0x10,-0x8(%r9,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca8a7 <+2071>:	vmulss -0x8(%rax,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca8ad <+2077>:	mov    0x10(%rsp),%rdx
   0x00007ffff7fca8b2 <+2082>:	vinsertps $0x20,-0x8(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca8ba <+2090>:	mov    -0x68(%rsp),%rax
   0x00007ffff7fca8bf <+2095>:	vmovss -0x8(%rax,%rsi,4),%xmm5
   0x00007ffff7fca8c5 <+2101>:	vinsertps $0x20,-0x8(%r10,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca8cd <+2109>:	vinsertps $0x10,-0x8(%rcx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca8d5 <+2117>:	mov    %rcx,%r15
   0x00007ffff7fca8d8 <+2120>:	mov    %r12,%rcx
   0x00007ffff7fca8db <+2123>:	vinsertps $0x20,-0x8(%rcx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca8e3 <+2131>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca8e8 <+2136>:	mov    -0x80(%rsp),%r10
   0x00007ffff7fca8ed <+2141>:	vmovss -0x8(%r10,%rsi,4),%xmm6
   0x00007ffff7fca8f4 <+2148>:	mov    %rdi,%r12
   0x00007ffff7fca8f7 <+2151>:	vinsertps $0x30,-0x8(%r12,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca8ff <+2159>:	mov    -0x40(%rsp),%rdi
   0x00007ffff7fca904 <+2164>:	vinsertps $0x10,-0x8(%rdi,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca90c <+2172>:	vinsertps $0x30,-0x8(%r11,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca914 <+2180>:	vinsertps $0x20,-0x8(%r14,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca91c <+2188>:	vinsertps $0x30,-0x8(%rbx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca924 <+2196>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fca929 <+2201>:	vinsertps $0x30,-0x8(%r8,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca931 <+2209>:	mov    %r8,%rbx
   0x00007ffff7fca934 <+2212>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fca93a <+2218>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fca940 <+2224>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fca944 <+2228>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fca949 <+2233>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fca94d <+2237>:	mov    -0x30(%rsp),%r9
   0x00007ffff7fca952 <+2242>:	vmovups %ymm7,(%r9,%r13,4)
   0x00007ffff7fca958 <+2248>:	mov    %r13,%r8
   0x00007ffff7fca95b <+2251>:	mov    -0x48(%rsp),%r14
   0x00007ffff7fca960 <+2256>:	vmulss -0x4(%r14,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fca967 <+2263>:	mov    0x8(%rsp),%rdi
   0x00007ffff7fca96c <+2268>:	vmovss -0x4(%rdi,%rsi,4),%xmm2
   0x00007ffff7fca972 <+2274>:	mov    -0x70(%rsp),%rdi
   0x00007ffff7fca977 <+2279>:	vinsertps $0x10,-0x4(%rdi,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca97f <+2287>:	vmovss -0x4(%rbp,%rsi,4),%xmm3
   0x00007ffff7fca985 <+2293>:	mov    -0x8(%rsp),%r13
   0x00007ffff7fca98a <+2298>:	vinsertps $0x10,-0x4(%r13,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca992 <+2306>:	mov    -0x10(%rsp),%r11
   0x00007ffff7fca997 <+2311>:	vmulss -0x4(%r11,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fca99e <+2318>:	vinsertps $0x20,-0x4(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca9a6 <+2326>:	vmovss -0x4(%rax,%rsi,4),%xmm5
   0x00007ffff7fca9ac <+2332>:	mov    (%rsp),%rdi
   0x00007ffff7fca9b0 <+2336>:	vinsertps $0x20,-0x4(%rdi,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca9b8 <+2344>:	vinsertps $0x10,-0x4(%r15,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca9c0 <+2352>:	vinsertps $0x20,-0x4(%rcx,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fca9c8 <+2360>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fca9cd <+2365>:	vmovss -0x4(%r10,%rsi,4),%xmm6
   0x00007ffff7fca9d4 <+2372>:	mov    %r12,%rdx
   0x00007ffff7fca9d7 <+2375>:	vinsertps $0x30,-0x4(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fca9df <+2383>:	mov    -0x40(%rsp),%r10
   0x00007ffff7fca9e4 <+2388>:	vinsertps $0x10,-0x4(%r10,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fca9ec <+2396>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fca9f1 <+2401>:	vinsertps $0x30,-0x4(%rax,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fca9f9 <+2409>:	mov    %rax,%r12
   0x00007ffff7fca9fc <+2412>:	mov    0x30(%rsp),%rcx
   0x00007ffff7fcaa01 <+2417>:	vinsertps $0x20,-0x4(%rcx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fcaa09 <+2425>:	mov    -0x60(%rsp),%rax
   0x00007ffff7fcaa0e <+2430>:	vinsertps $0x30,-0x4(%rax,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fcaa16 <+2438>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fcaa1b <+2443>:	vinsertps $0x30,-0x4(%rbx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fcaa23 <+2451>:	mov    %rbx,%r15
   0x00007ffff7fcaa26 <+2454>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fcaa2c <+2460>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fcaa32 <+2466>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fcaa36 <+2470>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fcaa3b <+2475>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fcaa3f <+2479>:	vmovups %ymm7,(%r9,%r8,4)
   0x00007ffff7fcaa45 <+2485>:	vmulss (%r14,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fcaa4b <+2491>:	mov    0x8(%rsp),%rbx
   0x00007ffff7fcaa50 <+2496>:	vmovss (%rbx,%rsi,4),%xmm2
   0x00007ffff7fcaa55 <+2501>:	mov    -0x70(%rsp),%rbx
   0x00007ffff7fcaa5a <+2506>:	vinsertps $0x10,(%rbx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fcaa61 <+2513>:	vmovss 0x0(%rbp,%rsi,4),%xmm3
   0x00007ffff7fcaa67 <+2519>:	vinsertps $0x10,0x0(%r13,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fcaa6f <+2527>:	vmulss (%r11,%rsi,4),%xmm0,%xmm4
   0x00007ffff7fcaa75 <+2533>:	mov    0x10(%rsp),%rbp
   0x00007ffff7fcaa7a <+2538>:	vinsertps $0x20,0x0(%rbp,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fcaa82 <+2546>:	mov    -0x68(%rsp),%rbp
   0x00007ffff7fcaa87 <+2551>:	vmovss 0x0(%rbp,%rsi,4),%xmm5
   0x00007ffff7fcaa8d <+2557>:	vinsertps $0x20,(%rdi,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fcaa94 <+2564>:	mov    -0x58(%rsp),%rdi
   0x00007ffff7fcaa99 <+2569>:	vinsertps $0x10,(%rdi,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fcaaa0 <+2576>:	mov    -0x50(%rsp),%rdi
   0x00007ffff7fcaaa5 <+2581>:	vinsertps $0x20,(%rdi,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fcaaac <+2588>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcaab1 <+2593>:	mov    -0x80(%rsp),%rdi
   0x00007ffff7fcaab6 <+2598>:	vmovss (%rdi,%rsi,4),%xmm6
   0x00007ffff7fcaabb <+2603>:	vinsertps $0x30,(%rdx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fcaac2 <+2610>:	vinsertps $0x10,(%r10,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fcaac9 <+2617>:	vinsertps $0x30,(%r12,%rsi,4),%xmm3,%xmm3
   0x00007ffff7fcaad0 <+2624>:	vinsertps $0x20,(%rcx,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fcaad7 <+2631>:	vinsertps $0x30,(%rax,%rsi,4),%xmm5,%xmm5
   0x00007ffff7fcaade <+2638>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fcaae3 <+2643>:	vinsertps $0x30,(%r15,%rsi,4),%xmm6,%xmm6
   0x00007ffff7fcaaea <+2650>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fcaaf0 <+2656>:	vinsertf128 $0x1,%xmm5,%ymm6,%ymm3
   0x00007ffff7fcaaf6 <+2662>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fcaafa <+2666>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fcaaff <+2671>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fcab03 <+2675>:	add    $0x8,%rsi
   0x00007ffff7fcab07 <+2679>:	cmp    %rsi,0x108(%rsp)
   0x00007ffff7fcab0f <+2687>:	vmovups %ymm7,(%r9,%r8,4)
   0x00007ffff7fcab15 <+2693>:	jne    0x7ffff7fca3d0 <syr2k_kernel+832>
   0x00007ffff7fcab1b <+2699>:	mov    0x98(%rsp),%rdx
   0x00007ffff7fcab23 <+2707>:	test   %rdx,%rdx
   0x00007ffff7fcab26 <+2710>:	je     0x7ffff7fcacf2 <syr2k_kernel+3170>
   0x00007ffff7fcab2c <+2716>:	mov    0xb0(%rsp),%r8
   0x00007ffff7fcab34 <+2724>:	add    %rsi,%r8
   0x00007ffff7fcab37 <+2727>:	mov    -0x18(%rsp),%r11
   0x00007ffff7fcab3c <+2732>:	lea    (%r11,%r8,4),%rax
   0x00007ffff7fcab40 <+2736>:	mov    %rax,-0x80(%rsp)
   0x00007ffff7fcab45 <+2741>:	mov    0xb8(%rsp),%r14
   0x00007ffff7fcab4d <+2749>:	add    %rsi,%r14
   0x00007ffff7fcab50 <+2752>:	lea    (%r11,%r14,4),%rax
   0x00007ffff7fcab54 <+2756>:	mov    %rax,-0x60(%rsp)
   0x00007ffff7fcab59 <+2761>:	mov    0xc0(%rsp),%r15
   0x00007ffff7fcab61 <+2769>:	add    %rsi,%r15
   0x00007ffff7fcab64 <+2772>:	lea    (%r11,%r15,4),%rax
   0x00007ffff7fcab68 <+2776>:	mov    %rax,-0x68(%rsp)
   0x00007ffff7fcab6d <+2781>:	mov    0xc8(%rsp),%rdi
   0x00007ffff7fcab75 <+2789>:	add    %rsi,%rdi
   0x00007ffff7fcab78 <+2792>:	lea    (%r11,%rdi,4),%rax
   0x00007ffff7fcab7c <+2796>:	mov    %rax,-0x70(%rsp)
   0x00007ffff7fcab81 <+2801>:	mov    0xd0(%rsp),%rbp
   0x00007ffff7fcab89 <+2809>:	add    %rsi,%rbp
   0x00007ffff7fcab8c <+2812>:	lea    (%r11,%rbp,4),%rax
   0x00007ffff7fcab90 <+2816>:	mov    %rax,-0x78(%rsp)
   0x00007ffff7fcab95 <+2821>:	mov    0xd8(%rsp),%rax
   0x00007ffff7fcab9d <+2829>:	add    %rsi,%rax
   0x00007ffff7fcaba0 <+2832>:	lea    (%r11,%rax,4),%rcx
   0x00007ffff7fcaba4 <+2836>:	mov    %rcx,-0x50(%rsp)
   0x00007ffff7fcaba9 <+2841>:	mov    0xe0(%rsp),%rcx
   0x00007ffff7fcabb1 <+2849>:	add    %rsi,%rcx
   0x00007ffff7fcabb4 <+2852>:	mov    0xe8(%rsp),%r9
   0x00007ffff7fcabbc <+2860>:	add    %rsi,%r9
   0x00007ffff7fcabbf <+2863>:	mov    -0x20(%rsp),%r10
   0x00007ffff7fcabc4 <+2868>:	lea    (%r10,%r8,4),%rbx
   0x00007ffff7fcabc8 <+2872>:	mov    %rbx,-0x58(%rsp)
   0x00007ffff7fcabcd <+2877>:	lea    (%r10,%r14,4),%rbx
   0x00007ffff7fcabd1 <+2881>:	mov    %rbx,-0x40(%rsp)
   0x00007ffff7fcabd6 <+2886>:	lea    (%r10,%r15,4),%r12
   0x00007ffff7fcabda <+2890>:	lea    (%r10,%rdi,4),%r13
   0x00007ffff7fcabde <+2894>:	lea    (%r10,%rbp,4),%rbp
   0x00007ffff7fcabe2 <+2898>:	lea    (%r10,%rax,4),%rbx
   0x00007ffff7fcabe6 <+2902>:	lea    (%r11,%rcx,4),%rax
   0x00007ffff7fcabea <+2906>:	lea    (%r10,%rcx,4),%rcx
   0x00007ffff7fcabee <+2910>:	lea    (%r11,%r9,4),%r8
   0x00007ffff7fcabf2 <+2914>:	lea    (%r10,%r9,4),%r9
   0x00007ffff7fcabf6 <+2918>:	add    0x90(%rsp),%rsi
   0x00007ffff7fcabfe <+2926>:	lea    (%r10,%rsi,4),%r10
   0x00007ffff7fcac02 <+2930>:	lea    (%r11,%rsi,4),%rsi
   0x00007ffff7fcac06 <+2934>:	xor    %r11d,%r11d
   0x00007ffff7fcac09 <+2937>:	nopl   0x0(%rax)
   0x00007ffff7fcac10 <+2944>:	vmulss (%rsi,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcac16 <+2950>:	vmovss 0x0(%r13,%r11,4),%xmm2
   0x00007ffff7fcac1d <+2957>:	vinsertps $0x10,(%r12,%r11,4),%xmm2,%xmm2
   0x00007ffff7fcac24 <+2964>:	mov    -0x40(%rsp),%rdi
   0x00007ffff7fcac29 <+2969>:	vinsertps $0x20,(%rdi,%r11,4),%xmm2,%xmm2
   0x00007ffff7fcac30 <+2976>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcac35 <+2981>:	mov    -0x58(%rsp),%rdi
   0x00007ffff7fcac3a <+2986>:	vinsertps $0x30,(%rdi,%r11,4),%xmm2,%xmm2
   0x00007ffff7fcac41 <+2993>:	vmovss (%r9,%r11,4),%xmm3
   0x00007ffff7fcac47 <+2999>:	vinsertps $0x10,(%rcx,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac4e <+3006>:	vinsertps $0x20,(%rbx,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac55 <+3013>:	vinsertps $0x30,0x0(%rbp,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac5d <+3021>:	vmulss (%r10,%r11,4),%xmm0,%xmm4
   0x00007ffff7fcac63 <+3027>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fcac69 <+3033>:	mov    -0x70(%rsp),%rdi
   0x00007ffff7fcac6e <+3038>:	vmovss (%rdi,%r11,4),%xmm3
   0x00007ffff7fcac74 <+3044>:	mov    -0x68(%rsp),%rdi
   0x00007ffff7fcac79 <+3049>:	vinsertps $0x10,(%rdi,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac80 <+3056>:	mov    -0x60(%rsp),%rdi
   0x00007ffff7fcac85 <+3061>:	vinsertps $0x20,(%rdi,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac8c <+3068>:	mov    -0x80(%rsp),%rdi
   0x00007ffff7fcac91 <+3073>:	vinsertps $0x30,(%rdi,%r11,4),%xmm3,%xmm3
   0x00007ffff7fcac98 <+3080>:	vbroadcastss %xmm4,%ymm4
   0x00007ffff7fcac9d <+3085>:	vmovss (%r8,%r11,4),%xmm5
   0x00007ffff7fcaca3 <+3091>:	vinsertps $0x10,(%rax,%r11,4),%xmm5,%xmm5
   0x00007ffff7fcacaa <+3098>:	mov    -0x50(%rsp),%rdi
   0x00007ffff7fcacaf <+3103>:	vinsertps $0x20,(%rdi,%r11,4),%xmm5,%xmm5
   0x00007ffff7fcacb6 <+3110>:	mov    -0x78(%rsp),%rdi
   0x00007ffff7fcacbb <+3115>:	vinsertps $0x30,(%rdi,%r11,4),%xmm5,%xmm5
   0x00007ffff7fcacc2 <+3122>:	vinsertf128 $0x1,%xmm3,%ymm5,%ymm3
   0x00007ffff7fcacc8 <+3128>:	vmulps %ymm3,%ymm4,%ymm3
   0x00007ffff7fcaccc <+3132>:	vfmadd231ps %ymm2,%ymm1,%ymm3
   0x00007ffff7fcacd1 <+3137>:	vaddps %ymm3,%ymm7,%ymm7
   0x00007ffff7fcacd5 <+3141>:	mov    -0x30(%rsp),%r14
   0x00007ffff7fcacda <+3146>:	mov    -0x38(%rsp),%r15
   0x00007ffff7fcacdf <+3151>:	vmovups %ymm7,(%r14,%r15,4)
   0x00007ffff7fcace5 <+3157>:	add    $0x1,%r11
   0x00007ffff7fcace9 <+3161>:	cmp    %r11,%rdx
   0x00007ffff7fcacec <+3164>:	jne    0x7ffff7fcac10 <syr2k_kernel+2944>
   0x00007ffff7fcacf2 <+3170>:	mov    0x100(%rsp),%rax
   0x00007ffff7fcacfa <+3178>:	add    $0x1,%rax
   0x00007ffff7fcacfe <+3182>:	mov    0xf8(%rsp),%rcx
   0x00007ffff7fcad06 <+3190>:	add    $0x8,%ecx
   0x00007ffff7fcad09 <+3193>:	vpaddd %ymm12,%ymm13,%ymm13
   0x00007ffff7fcad0e <+3198>:	cmp    0xa8(%rsp),%rax
   0x00007ffff7fcad16 <+3206>:	mov    -0x30(%rsp),%r11
   0x00007ffff7fcad1b <+3211>:	mov    0x70(%rsp),%r14
   0x00007ffff7fcad20 <+3216>:	jne    0x7ffff7fca260 <syr2k_kernel+464>
   0x00007ffff7fcad26 <+3222>:	mov    0x88(%rsp),%rsi
   0x00007ffff7fcad2e <+3230>:	add    $0x1,%rsi
   0x00007ffff7fcad32 <+3234>:	mov    0x80(%rsp),%rcx
   0x00007ffff7fcad3a <+3242>:	add    $0x1,%rcx
   0x00007ffff7fcad3e <+3246>:	mov    0x3c(%rsp),%edx
   0x00007ffff7fcad42 <+3250>:	add    %r14d,%edx
   0x00007ffff7fcad45 <+3253>:	cmp    0x48(%rsp),%rsi
   0x00007ffff7fcad4a <+3258>:	jne    0x7ffff7fca1e0 <syr2k_kernel+336>
   0x00007ffff7fcad50 <+3264>:	cmpq   $0x0,0x68(%rsp)
   0x00007ffff7fcad56 <+3270>:	mov    -0x28(%rsp),%rcx
   0x00007ffff7fcad5b <+3275>:	je     0x7ffff7fcb045 <syr2k_kernel+4021>
   0x00007ffff7fcad61 <+3281>:	mov    0x18(%rsp),%rdx
   0x00007ffff7fcad66 <+3286>:	add    0x40(%rsp),%rdx
   0x00007ffff7fcad6b <+3291>:	lea    -0x1(%r14),%rax
   0x00007ffff7fcad6f <+3295>:	mov    %rax,-0x68(%rsp)
   0x00007ffff7fcad74 <+3300>:	mov    %r14d,%r15d
   0x00007ffff7fcad77 <+3303>:	and    $0x7,%r15d
   0x00007ffff7fcad7b <+3307>:	mov    %r14,%r9
   0x00007ffff7fcad7e <+3310>:	sub    %r15,%r9
   0x00007ffff7fcad81 <+3313>:	mov    -0x18(%rsp),%rax
   0x00007ffff7fcad86 <+3318>:	lea    0x1c(%rax),%rax
   0x00007ffff7fcad8a <+3322>:	mov    %rax,-0x78(%rsp)
   0x00007ffff7fcad8f <+3327>:	mov    %rdx,0x18(%rsp)
   0x00007ffff7fcad94 <+3332>:	mov    %edx,%eax
   0x00007ffff7fcad96 <+3334>:	imul   %r14d,%eax
   0x00007ffff7fcad9a <+3338>:	mov    %eax,-0x58(%rsp)
   0x00007ffff7fcad9e <+3342>:	mov    -0x20(%rsp),%rax
   0x00007ffff7fcada3 <+3347>:	lea    0x1c(%rax),%rax
   0x00007ffff7fcada7 <+3351>:	mov    %rax,-0x48(%rsp)
   0x00007ffff7fcadac <+3356>:	mov    %ecx,%eax
   0x00007ffff7fcadae <+3358>:	imul   %r14d,%eax
   0x00007ffff7fcadb2 <+3362>:	xor    %edx,%edx
   0x00007ffff7fcadb4 <+3364>:	data16 data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcadc0 <+3376>:	mov    %rdx,-0x50(%rsp)
   0x00007ffff7fcadc5 <+3381>:	mov    %eax,-0x38(%rsp)
   0x00007ffff7fcadc9 <+3385>:	movslq %eax,%rdx
   0x00007ffff7fcadcc <+3388>:	mov    -0x48(%rsp),%rax
   0x00007ffff7fcadd1 <+3393>:	lea    (%rax,%rdx,4),%rdi
   0x00007ffff7fcadd5 <+3397>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fcadda <+3402>:	mov    %rdx,-0x70(%rsp)
   0x00007ffff7fcaddf <+3407>:	lea    (%rax,%rdx,4),%rsi
   0x00007ffff7fcade3 <+3411>:	mov    0x50(%rsp),%rax
   0x00007ffff7fcade8 <+3416>:	mov    %rcx,-0x28(%rsp)
   0x00007ffff7fcaded <+3421>:	imul   %ecx,%eax
   0x00007ffff7fcadf0 <+3424>:	mov    %rax,-0x60(%rsp)
   0x00007ffff7fcadf5 <+3429>:	mov    -0x58(%rsp),%eax
   0x00007ffff7fcadf9 <+3433>:	mov    %eax,-0x80(%rsp)
   0x00007ffff7fcadfd <+3437>:	xor    %r12d,%r12d
   0x00007ffff7fcae00 <+3440>:	mov    0x18(%rsp),%r13
   0x00007ffff7fcae05 <+3445>:	data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcae10 <+3456>:	mov    -0x60(%rsp),%rax
   0x00007ffff7fcae15 <+3461>:	lea    (%rax,%r13,1),%eax
   0x00007ffff7fcae19 <+3465>:	movslq %eax,%r8
   0x00007ffff7fcae1c <+3468>:	vmulss (%r11,%r8,4),%xmm10,%xmm2
   0x00007ffff7fcae22 <+3474>:	vmovss %xmm2,(%r11,%r8,4)
   0x00007ffff7fcae28 <+3480>:	test   %r14d,%r14d
   0x00007ffff7fcae2b <+3483>:	jle    0x7ffff7fcb009 <syr2k_kernel+3961>
   0x00007ffff7fcae31 <+3489>:	movslq -0x80(%rsp),%rax
   0x00007ffff7fcae36 <+3494>:	cmpq   $0x7,-0x68(%rsp)
   0x00007ffff7fcae3c <+3500>:	jae    0x7ffff7fcae50 <syr2k_kernel+3520>
   0x00007ffff7fcae3e <+3502>:	xor    %r10d,%r10d
   0x00007ffff7fcae41 <+3505>:	mov    %r11,%rcx
   0x00007ffff7fcae44 <+3508>:	jmp    0x7ffff7fcafa9 <syr2k_kernel+3865>
   0x00007ffff7fcae49 <+3513>:	nopl   0x0(%rax)
   0x00007ffff7fcae50 <+3520>:	mov    %r11,%rcx
   0x00007ffff7fcae53 <+3523>:	mov    -0x78(%rsp),%rdx
   0x00007ffff7fcae58 <+3528>:	lea    (%rdx,%rax,4),%r11
   0x00007ffff7fcae5c <+3532>:	mov    -0x48(%rsp),%rdx
   0x00007ffff7fcae61 <+3537>:	lea    (%rdx,%rax,4),%r14
   0x00007ffff7fcae65 <+3541>:	xor    %r10d,%r10d
   0x00007ffff7fcae68 <+3544>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fcae70 <+3552>:	vmulss -0x1c(%rsi,%r10,4),%xmm0,%xmm1
   0x00007ffff7fcae77 <+3559>:	vmulss -0x1c(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcae7e <+3566>:	vmulss -0x1c(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcae85 <+3573>:	vfmadd231ss -0x1c(%r14,%r10,4),%xmm1,%xmm3
   0x00007ffff7fcae8c <+3580>:	vaddss %xmm3,%xmm2,%xmm1
   0x00007ffff7fcae90 <+3584>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcae96 <+3590>:	vmulss -0x18(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcae9d <+3597>:	vmulss -0x18(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaea4 <+3604>:	vmulss -0x18(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaeab <+3611>:	vfmadd231ss -0x18(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaeb2 <+3618>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaeb6 <+3622>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaebc <+3628>:	vmulss -0x14(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaec3 <+3635>:	vmulss -0x14(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaeca <+3642>:	vmulss -0x14(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaed1 <+3649>:	vfmadd231ss -0x14(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaed8 <+3656>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaedc <+3660>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaee2 <+3666>:	vmulss -0x10(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaee9 <+3673>:	vmulss -0x10(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaef0 <+3680>:	vmulss -0x10(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaef7 <+3687>:	vfmadd231ss -0x10(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaefe <+3694>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaf02 <+3698>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaf08 <+3704>:	vmulss -0xc(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaf0f <+3711>:	vmulss -0xc(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaf16 <+3718>:	vmulss -0xc(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaf1d <+3725>:	vfmadd231ss -0xc(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaf24 <+3732>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaf28 <+3736>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaf2e <+3742>:	vmulss -0x8(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaf35 <+3749>:	vmulss -0x8(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaf3c <+3756>:	vmulss -0x8(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaf43 <+3763>:	vfmadd231ss -0x8(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaf4a <+3770>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaf4e <+3774>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaf54 <+3780>:	vmulss -0x4(%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaf5b <+3787>:	vmulss -0x4(%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaf62 <+3794>:	vmulss -0x4(%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaf69 <+3801>:	vfmadd231ss -0x4(%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaf70 <+3808>:	vaddss %xmm3,%xmm1,%xmm1
   0x00007ffff7fcaf74 <+3812>:	vmovss %xmm1,(%rcx,%r8,4)
   0x00007ffff7fcaf7a <+3818>:	vmulss (%rsi,%r10,4),%xmm0,%xmm2
   0x00007ffff7fcaf80 <+3824>:	vmulss (%rdi,%r10,4),%xmm0,%xmm3
   0x00007ffff7fcaf86 <+3830>:	vmulss (%r11,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcaf8c <+3836>:	vfmadd231ss (%r14,%r10,4),%xmm2,%xmm3
   0x00007ffff7fcaf92 <+3842>:	vaddss %xmm3,%xmm1,%xmm2
   0x00007ffff7fcaf96 <+3846>:	vmovss %xmm2,(%rcx,%r8,4)
   0x00007ffff7fcaf9c <+3852>:	add    $0x8,%r10
   0x00007ffff7fcafa0 <+3856>:	cmp    %r10,%r9
   0x00007ffff7fcafa3 <+3859>:	jne    0x7ffff7fcae70 <syr2k_kernel+3552>
   0x00007ffff7fcafa9 <+3865>:	test   %r15,%r15
   0x00007ffff7fcafac <+3868>:	mov    %rcx,%r11
   0x00007ffff7fcafaf <+3871>:	mov    0x70(%rsp),%r14
   0x00007ffff7fcafb4 <+3876>:	je     0x7ffff7fcb009 <syr2k_kernel+3961>
   0x00007ffff7fcafb6 <+3878>:	add    %r10,%rax
   0x00007ffff7fcafb9 <+3881>:	mov    -0x18(%rsp),%rcx
   0x00007ffff7fcafbe <+3886>:	lea    (%rcx,%rax,4),%rbx
   0x00007ffff7fcafc2 <+3890>:	mov    -0x20(%rsp),%rdx
   0x00007ffff7fcafc7 <+3895>:	lea    (%rdx,%rax,4),%rax
   0x00007ffff7fcafcb <+3899>:	add    -0x70(%rsp),%r10
   0x00007ffff7fcafd0 <+3904>:	lea    (%rdx,%r10,4),%rbp
   0x00007ffff7fcafd4 <+3908>:	lea    (%rcx,%r10,4),%rdx
   0x00007ffff7fcafd8 <+3912>:	xor    %ecx,%ecx
   0x00007ffff7fcafda <+3914>:	nopw   0x0(%rax,%rax,1)
   0x00007ffff7fcafe0 <+3920>:	vmulss (%rdx,%rcx,4),%xmm0,%xmm1
   0x00007ffff7fcafe5 <+3925>:	vmulss 0x0(%rbp,%rcx,4),%xmm0,%xmm3
   0x00007ffff7fcafeb <+3931>:	vmulss (%rbx,%rcx,4),%xmm3,%xmm3
   0x00007ffff7fcaff0 <+3936>:	vfmadd231ss (%rax,%rcx,4),%xmm1,%xmm3
   0x00007ffff7fcaff6 <+3942>:	vaddss %xmm3,%xmm2,%xmm2
   0x00007ffff7fcaffa <+3946>:	vmovss %xmm2,(%r11,%r8,4)
   0x00007ffff7fcb000 <+3952>:	add    $0x1,%rcx
   0x00007ffff7fcb004 <+3956>:	cmp    %rcx,%r15
   0x00007ffff7fcb007 <+3959>:	jne    0x7ffff7fcafe0 <syr2k_kernel+3920>
   0x00007ffff7fcb009 <+3961>:	add    $0x1,%r12
   0x00007ffff7fcb00d <+3965>:	add    $0x1,%r13
   0x00007ffff7fcb011 <+3969>:	add    %r14d,-0x80(%rsp)
   0x00007ffff7fcb016 <+3974>:	cmp    0x68(%rsp),%r12
   0x00007ffff7fcb01b <+3979>:	jne    0x7ffff7fcae10 <syr2k_kernel+3456>
   0x00007ffff7fcb021 <+3985>:	mov    -0x50(%rsp),%rdx
   0x00007ffff7fcb026 <+3990>:	add    $0x1,%rdx
   0x00007ffff7fcb02a <+3994>:	mov    -0x28(%rsp),%rcx
   0x00007ffff7fcb02f <+3999>:	add    $0x1,%rcx
   0x00007ffff7fcb033 <+4003>:	mov    -0x38(%rsp),%eax
   0x00007ffff7fcb037 <+4007>:	add    %r14d,%eax
   0x00007ffff7fcb03a <+4010>:	cmp    0x48(%rsp),%rdx
   0x00007ffff7fcb03f <+4015>:	jne    0x7ffff7fcadc0 <syr2k_kernel+3376>
   0x00007ffff7fcb045 <+4021>:	add    $0x110,%rsp
   0x00007ffff7fcb04c <+4028>:	pop    %rbx
   0x00007ffff7fcb04d <+4029>:	pop    %r12
   0x00007ffff7fcb04f <+4031>:	pop    %r13
   0x00007ffff7fcb051 <+4033>:	pop    %r14
   0x00007ffff7fcb053 <+4035>:	pop    %r15
   0x00007ffff7fcb055 <+4037>:	pop    %rbp
   0x00007ffff7fcb056 <+4038>:	vzeroupper 
   0x00007ffff7fcb059 <+4041>:	ret    
End of assembler dump.

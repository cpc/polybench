Dump of assembler code for function adi_kernel3:
=> 0x00007ffff7fcb6c0 <+0>:	push   %rbp
   0x00007ffff7fcb6c1 <+1>:	push   %r15
   0x00007ffff7fcb6c3 <+3>:	push   %r14
   0x00007ffff7fcb6c5 <+5>:	push   %r13
   0x00007ffff7fcb6c7 <+7>:	push   %r12
   0x00007ffff7fcb6c9 <+9>:	push   %rbx
   0x00007ffff7fcb6ca <+10>:	push   %rax
   0x00007ffff7fcb6cb <+11>:	movslq 0x18(%rdi),%rcx
   0x00007ffff7fcb6cf <+15>:	mov    0x58(%rdi),%rax
   0x00007ffff7fcb6d3 <+19>:	mov    (%rsi),%r10
   0x00007ffff7fcb6d6 <+22>:	imul   %rax,%r10
   0x00007ffff7fcb6da <+26>:	add    0x28(%rdi),%r10
   0x00007ffff7fcb6de <+30>:	add    %r10,%rax
   0x00007ffff7fcb6e1 <+33>:	cmp    %rcx,%rax
   0x00007ffff7fcb6e4 <+36>:	mov    %rcx,%rsi
   0x00007ffff7fcb6e7 <+39>:	cmovle %rax,%rsi
   0x00007ffff7fcb6eb <+43>:	test   %rcx,%rcx
   0x00007ffff7fcb6ee <+46>:	cmovs  %rax,%rsi
   0x00007ffff7fcb6f2 <+50>:	mov    %rcx,%rax
   0x00007ffff7fcb6f5 <+53>:	mov    %rax,-0x68(%rsp)
   0x00007ffff7fcb6fa <+58>:	cmp    $0x3,%rcx
   0x00007ffff7fcb6fe <+62>:	jl     0x7ffff7fcba45 <adi_kernel3+901>
   0x00007ffff7fcb704 <+68>:	sub    %r10,%rsi
   0x00007ffff7fcb707 <+71>:	mov    %rsi,-0x28(%rsp)
   0x00007ffff7fcb70c <+76>:	test   %rsi,%rsi
   0x00007ffff7fcb70f <+79>:	jle    0x7ffff7fcba45 <adi_kernel3+901>
   0x00007ffff7fcb715 <+85>:	mov    (%rdi),%r13
   0x00007ffff7fcb718 <+88>:	mov    0x8(%rdi),%rax
   0x00007ffff7fcb71c <+92>:	mov    0x10(%rdi),%rdi
   0x00007ffff7fcb720 <+96>:	mov    -0x68(%rsp),%rcx
   0x00007ffff7fcb725 <+101>:	mov    %ecx,%r8d
   0x00007ffff7fcb728 <+104>:	lea    0x1(%r10),%r9d
   0x00007ffff7fcb72c <+108>:	imul   %ecx,%r9d
   0x00007ffff7fcb730 <+112>:	lea    -0x2(%rcx),%rsi
   0x00007ffff7fcb734 <+116>:	mov    %esi,%ebp
   0x00007ffff7fcb736 <+118>:	and    $0x7,%ebp
   0x00007ffff7fcb739 <+121>:	lea    -0xa(%r9),%edx
   0x00007ffff7fcb73d <+125>:	mov    %rdx,-0x70(%rsp)
   0x00007ffff7fcb742 <+130>:	lea    -0x9(%r9),%edx
   0x00007ffff7fcb746 <+134>:	mov    %rdx,-0x78(%rsp)
   0x00007ffff7fcb74b <+139>:	mov    %r8,-0x30(%rsp)
   0x00007ffff7fcb750 <+144>:	imul   %r8d,%r10d
   0x00007ffff7fcb754 <+148>:	lea    -0x8(%r9),%r12d
   0x00007ffff7fcb758 <+152>:	lea    -0x7(%r9),%r14d
   0x00007ffff7fcb75c <+156>:	lea    -0x6(%r9),%edx
   0x00007ffff7fcb760 <+160>:	lea    -0x5(%r9),%r15d
   0x00007ffff7fcb764 <+164>:	lea    -0x4(%r9),%ebx
   0x00007ffff7fcb768 <+168>:	lea    -0x3(%r9),%r11d
   0x00007ffff7fcb76c <+172>:	add    $0xfffffffe,%r9d
   0x00007ffff7fcb770 <+176>:	mov    %rbp,%r8
   0x00007ffff7fcb773 <+179>:	mov    %rsi,-0x48(%rsp)
   0x00007ffff7fcb778 <+184>:	sub    %rsi,%r8
   0x00007ffff7fcb77b <+187>:	mov    %r8,(%rsp)
   0x00007ffff7fcb77f <+191>:	mov    %rbp,-0x38(%rsp)
   0x00007ffff7fcb784 <+196>:	neg    %rbp
   0x00007ffff7fcb787 <+199>:	mov    %rbp,-0x50(%rsp)
   0x00007ffff7fcb78c <+204>:	mov    -0x70(%rsp),%rbp
   0x00007ffff7fcb791 <+209>:	lea    -0x3(%rcx),%rsi
   0x00007ffff7fcb795 <+213>:	mov    %rsi,-0x40(%rsp)
   0x00007ffff7fcb79a <+218>:	lea    -0x8(%rdi,%rcx,4),%rcx
   0x00007ffff7fcb79f <+223>:	mov    %rcx,-0x58(%rsp)
   0x00007ffff7fcb7a4 <+228>:	lea    -0x1(%r10),%ecx
   0x00007ffff7fcb7a8 <+232>:	mov    %ecx,-0x7c(%rsp)
   0x00007ffff7fcb7ac <+236>:	xor    %esi,%esi
   0x00007ffff7fcb7ae <+238>:	xchg   %ax,%ax
   0x00007ffff7fcb7b0 <+240>:	movslq %r10d,%rcx
   0x00007ffff7fcb7b3 <+243>:	cmpq   $0x7,-0x40(%rsp)
   0x00007ffff7fcb7b9 <+249>:	mov    %r10,-0x8(%rsp)
   0x00007ffff7fcb7be <+254>:	mov    %r15,-0x60(%rsp)
   0x00007ffff7fcb7c3 <+259>:	mov    %rsi,-0x18(%rsp)
   0x00007ffff7fcb7c8 <+264>:	mov    %rcx,-0x20(%rsp)
   0x00007ffff7fcb7cd <+269>:	mov    %rbp,-0x70(%rsp)
   0x00007ffff7fcb7d2 <+274>:	jae    0x7ffff7fcb7f0 <adi_kernel3+304>
   0x00007ffff7fcb7d4 <+276>:	xor    %r10d,%r10d
   0x00007ffff7fcb7d7 <+279>:	mov    %r11,%rsi
   0x00007ffff7fcb7da <+282>:	mov    %rdx,%r8
   0x00007ffff7fcb7dd <+285>:	mov    %r9,%rdx
   0x00007ffff7fcb7e0 <+288>:	mov    -0x78(%rsp),%rbp
   0x00007ffff7fcb7e5 <+293>:	jmp    0x7ffff7fcb956 <adi_kernel3+662>
   0x00007ffff7fcb7ea <+298>:	nopw   0x0(%rax,%rax,1)
   0x00007ffff7fcb7f0 <+304>:	mov    %r11,%rsi
   0x00007ffff7fcb7f3 <+307>:	mov    %rdx,%r8
   0x00007ffff7fcb7f6 <+310>:	mov    %rcx,%rdx
   0x00007ffff7fcb7f9 <+313>:	mov    -0x58(%rsp),%rcx
   0x00007ffff7fcb7fe <+318>:	lea    (%rcx,%rdx,4),%r15
   0x00007ffff7fcb802 <+322>:	xor    %r11d,%r11d
   0x00007ffff7fcb805 <+325>:	xor    %r10d,%r10d
   0x00007ffff7fcb808 <+328>:	mov    -0x78(%rsp),%rbp
   0x00007ffff7fcb80d <+333>:	nopl   (%rax)
   0x00007ffff7fcb810 <+336>:	lea    (%rsi,%r11,1),%ecx
   0x00007ffff7fcb814 <+340>:	movslq %ecx,%rcx
   0x00007ffff7fcb817 <+343>:	vmovss (%rdi,%rcx,4),%xmm0
   0x00007ffff7fcb81c <+348>:	vmovss 0x0(%r13,%rcx,4),%xmm1
   0x00007ffff7fcb823 <+355>:	vfnmadd213ss (%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb829 <+361>:	vdivss (%rax,%rcx,4),%xmm1,%xmm0
   0x00007ffff7fcb82e <+366>:	lea    (%r9,%r11,1),%edx
   0x00007ffff7fcb832 <+370>:	movslq %edx,%rdx
   0x00007ffff7fcb835 <+373>:	vmovss %xmm0,(%rdi,%rdx,4)
   0x00007ffff7fcb83a <+378>:	lea    (%rbx,%r11,1),%edx
   0x00007ffff7fcb83e <+382>:	movslq %edx,%rdx
   0x00007ffff7fcb841 <+385>:	vmovss (%rdi,%rdx,4),%xmm0
   0x00007ffff7fcb846 <+390>:	vmovss 0x0(%r13,%rdx,4),%xmm1
   0x00007ffff7fcb84d <+397>:	vfnmadd213ss -0x4(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb854 <+404>:	vdivss (%rax,%rdx,4),%xmm1,%xmm0
   0x00007ffff7fcb859 <+409>:	vmovss %xmm0,(%rdi,%rcx,4)
   0x00007ffff7fcb85e <+414>:	mov    -0x60(%rsp),%rcx
   0x00007ffff7fcb863 <+419>:	lea    (%rcx,%r11,1),%ecx
   0x00007ffff7fcb867 <+423>:	movslq %ecx,%rcx
   0x00007ffff7fcb86a <+426>:	vmovss (%rdi,%rcx,4),%xmm0
   0x00007ffff7fcb86f <+431>:	vmovss 0x0(%r13,%rcx,4),%xmm1
   0x00007ffff7fcb876 <+438>:	vfnmadd213ss -0x8(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb87d <+445>:	vdivss (%rax,%rcx,4),%xmm1,%xmm0
   0x00007ffff7fcb882 <+450>:	vmovss %xmm0,(%rdi,%rdx,4)
   0x00007ffff7fcb887 <+455>:	lea    (%r8,%r11,1),%edx
   0x00007ffff7fcb88b <+459>:	movslq %edx,%rdx
   0x00007ffff7fcb88e <+462>:	vmovss (%rdi,%rdx,4),%xmm0
   0x00007ffff7fcb893 <+467>:	vmovss 0x0(%r13,%rdx,4),%xmm1
   0x00007ffff7fcb89a <+474>:	vfnmadd213ss -0xc(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb8a1 <+481>:	vdivss (%rax,%rdx,4),%xmm1,%xmm0
   0x00007ffff7fcb8a6 <+486>:	vmovss %xmm0,(%rdi,%rcx,4)
   0x00007ffff7fcb8ab <+491>:	lea    (%r14,%r11,1),%ecx
   0x00007ffff7fcb8af <+495>:	movslq %ecx,%rcx
   0x00007ffff7fcb8b2 <+498>:	vmovss (%rdi,%rcx,4),%xmm0
   0x00007ffff7fcb8b7 <+503>:	vmovss 0x0(%r13,%rcx,4),%xmm1
   0x00007ffff7fcb8be <+510>:	vfnmadd213ss -0x10(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb8c5 <+517>:	vdivss (%rax,%rcx,4),%xmm1,%xmm0
   0x00007ffff7fcb8ca <+522>:	vmovss %xmm0,(%rdi,%rdx,4)
   0x00007ffff7fcb8cf <+527>:	lea    (%r12,%r11,1),%edx
   0x00007ffff7fcb8d3 <+531>:	movslq %edx,%rdx
   0x00007ffff7fcb8d6 <+534>:	vmovss (%rdi,%rdx,4),%xmm0
   0x00007ffff7fcb8db <+539>:	vmovss 0x0(%r13,%rdx,4),%xmm1
   0x00007ffff7fcb8e2 <+546>:	vfnmadd213ss -0x14(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb8e9 <+553>:	vdivss (%rax,%rdx,4),%xmm1,%xmm0
   0x00007ffff7fcb8ee <+558>:	vmovss %xmm0,(%rdi,%rcx,4)
   0x00007ffff7fcb8f3 <+563>:	lea    0x0(%rbp,%r11,1),%ecx
   0x00007ffff7fcb8f8 <+568>:	movslq %ecx,%rcx
   0x00007ffff7fcb8fb <+571>:	vmovss (%rdi,%rcx,4),%xmm0
   0x00007ffff7fcb900 <+576>:	vmovss 0x0(%r13,%rcx,4),%xmm1
   0x00007ffff7fcb907 <+583>:	vfnmadd213ss -0x18(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb90e <+590>:	vdivss (%rax,%rcx,4),%xmm1,%xmm0
   0x00007ffff7fcb913 <+595>:	vmovss %xmm0,(%rdi,%rdx,4)
   0x00007ffff7fcb918 <+600>:	mov    -0x70(%rsp),%rdx
   0x00007ffff7fcb91d <+605>:	lea    (%rdx,%r11,1),%edx
   0x00007ffff7fcb921 <+609>:	movslq %edx,%rdx
   0x00007ffff7fcb924 <+612>:	vmovss (%rdi,%rdx,4),%xmm0
   0x00007ffff7fcb929 <+617>:	vmovss 0x0(%r13,%rdx,4),%xmm1
   0x00007ffff7fcb930 <+624>:	vfnmadd213ss -0x1c(%r15,%r11,4),%xmm0,%xmm1
   0x00007ffff7fcb937 <+631>:	vdivss (%rax,%rdx,4),%xmm1,%xmm0
   0x00007ffff7fcb93c <+636>:	mov    %r9,%rdx
   0x00007ffff7fcb93f <+639>:	vmovss %xmm0,(%rdi,%rcx,4)
   0x00007ffff7fcb944 <+644>:	add    $0x8,%r10
   0x00007ffff7fcb948 <+648>:	add    $0xfffffffffffffff8,%r11
   0x00007ffff7fcb94c <+652>:	cmp    %r11,(%rsp)
   0x00007ffff7fcb950 <+656>:	jne    0x7ffff7fcb810 <adi_kernel3+336>
   0x00007ffff7fcb956 <+662>:	mov    %rsi,%r11
   0x00007ffff7fcb959 <+665>:	mov    %rbx,-0x10(%rsp)
   0x00007ffff7fcb95e <+670>:	mov    %r8,%r9
   0x00007ffff7fcb961 <+673>:	mov    %rbp,-0x78(%rsp)
   0x00007ffff7fcb966 <+678>:	mov    -0x70(%rsp),%r15
   0x00007ffff7fcb96b <+683>:	mov    %rdx,%r8
   0x00007ffff7fcb96e <+686>:	cmpq   $0x0,-0x38(%rsp)
   0x00007ffff7fcb974 <+692>:	je     0x7ffff7fcb9e8 <adi_kernel3+808>
   0x00007ffff7fcb976 <+694>:	mov    %r11d,%ebx
   0x00007ffff7fcb979 <+697>:	sub    %r10d,%ebx
   0x00007ffff7fcb97c <+700>:	mov    %r8d,%ecx
   0x00007ffff7fcb97f <+703>:	sub    %r10d,%ecx
   0x00007ffff7fcb982 <+706>:	mov    -0x48(%rsp),%rsi
   0x00007ffff7fcb987 <+711>:	mov    %esi,%edx
   0x00007ffff7fcb989 <+713>:	sub    %r10d,%edx
   0x00007ffff7fcb98c <+716>:	add    -0x7c(%rsp),%edx
   0x00007ffff7fcb990 <+720>:	mov    -0x20(%rsp),%rbp
   0x00007ffff7fcb995 <+725>:	add    %rsi,%rbp
   0x00007ffff7fcb998 <+728>:	sub    %r10,%rbp
   0x00007ffff7fcb99b <+731>:	lea    (%rdi,%rbp,4),%rbp
   0x00007ffff7fcb99f <+735>:	mov    -0x50(%rsp),%rsi
   0x00007ffff7fcb9a4 <+740>:	data16 data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcb9b0 <+752>:	movslq %edx,%rdx
   0x00007ffff7fcb9b3 <+755>:	vmovss (%rdi,%rdx,4),%xmm0
   0x00007ffff7fcb9b8 <+760>:	movslq %ebx,%rbx
   0x00007ffff7fcb9bb <+763>:	vmovss 0x0(%r13,%rbx,4),%xmm1
   0x00007ffff7fcb9c2 <+770>:	vfnmadd213ss 0x0(%rbp),%xmm0,%xmm1
   0x00007ffff7fcb9c8 <+776>:	vdivss (%rax,%rbx,4),%xmm1,%xmm0
   0x00007ffff7fcb9cd <+781>:	movslq %ecx,%rcx
   0x00007ffff7fcb9d0 <+784>:	vmovss %xmm0,(%rdi,%rcx,4)
   0x00007ffff7fcb9d5 <+789>:	add    $0xffffffff,%ebx
   0x00007ffff7fcb9d8 <+792>:	add    $0xffffffff,%ecx
   0x00007ffff7fcb9db <+795>:	add    $0xffffffff,%edx
   0x00007ffff7fcb9de <+798>:	add    $0xfffffffffffffffc,%rbp
   0x00007ffff7fcb9e2 <+802>:	add    $0x1,%rsi
   0x00007ffff7fcb9e6 <+806>:	jne    0x7ffff7fcb9b0 <adi_kernel3+752>
   0x00007ffff7fcb9e8 <+808>:	mov    -0x18(%rsp),%rsi
   0x00007ffff7fcb9ed <+813>:	add    $0x1,%rsi
   0x00007ffff7fcb9f1 <+817>:	mov    -0x30(%rsp),%rcx
   0x00007ffff7fcb9f6 <+822>:	mov    %r15,%rbp
   0x00007ffff7fcb9f9 <+825>:	add    %rcx,%rbp
   0x00007ffff7fcb9fc <+828>:	add    %rcx,-0x78(%rsp)
   0x00007ffff7fcba01 <+833>:	mov    -0x8(%rsp),%r10
   0x00007ffff7fcba06 <+838>:	add    %ecx,%r10d
   0x00007ffff7fcba09 <+841>:	add    %rcx,%r12
   0x00007ffff7fcba0c <+844>:	add    %rcx,%r14
   0x00007ffff7fcba0f <+847>:	mov    %r9,%rdx
   0x00007ffff7fcba12 <+850>:	add    %rcx,%rdx
   0x00007ffff7fcba15 <+853>:	mov    -0x60(%rsp),%r15
   0x00007ffff7fcba1a <+858>:	add    %rcx,%r15
   0x00007ffff7fcba1d <+861>:	mov    -0x10(%rsp),%rbx
   0x00007ffff7fcba22 <+866>:	add    %rcx,%rbx
   0x00007ffff7fcba25 <+869>:	add    %rcx,%r11
   0x00007ffff7fcba28 <+872>:	mov    %r8,%r9
   0x00007ffff7fcba2b <+875>:	add    %rcx,%r9
   0x00007ffff7fcba2e <+878>:	mov    -0x7c(%rsp),%ecx
   0x00007ffff7fcba32 <+882>:	add    -0x68(%rsp),%ecx
   0x00007ffff7fcba36 <+886>:	mov    %ecx,-0x7c(%rsp)
   0x00007ffff7fcba3a <+890>:	cmp    -0x28(%rsp),%rsi
   0x00007ffff7fcba3f <+895>:	jne    0x7ffff7fcb7b0 <adi_kernel3+240>
   0x00007ffff7fcba45 <+901>:	add    $0x8,%rsp
   0x00007ffff7fcba49 <+905>:	pop    %rbx
   0x00007ffff7fcba4a <+906>:	pop    %r12
   0x00007ffff7fcba4c <+908>:	pop    %r13
   0x00007ffff7fcba4e <+910>:	pop    %r14
   0x00007ffff7fcba50 <+912>:	pop    %r15
   0x00007ffff7fcba52 <+914>:	pop    %rbp
   0x00007ffff7fcba53 <+915>:	ret    
End of assembler dump.

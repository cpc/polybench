Dump of assembler code for function syrk_kernel:
=> 0x00007ffff7fcb090 <+0>:	push   %rbp
   0x00007ffff7fcb091 <+1>:	push   %r15
   0x00007ffff7fcb093 <+3>:	push   %r14
   0x00007ffff7fcb095 <+5>:	push   %r13
   0x00007ffff7fcb097 <+7>:	push   %r12
   0x00007ffff7fcb099 <+9>:	push   %rbx
   0x00007ffff7fcb09a <+10>:	sub    $0x60,%rsp
   0x00007ffff7fcb09e <+14>:	movslq 0x1c(%rdi),%rbx
   0x00007ffff7fcb0a2 <+18>:	mov    0x58(%rdi),%r8
   0x00007ffff7fcb0a6 <+22>:	mov    0x60(%rdi),%rcx
   0x00007ffff7fcb0aa <+26>:	mov    (%rsi),%rax
   0x00007ffff7fcb0ad <+29>:	imul   %r8,%rax
   0x00007ffff7fcb0b1 <+33>:	add    0x28(%rdi),%rax
   0x00007ffff7fcb0b5 <+37>:	mov    0x8(%rsi),%rsi
   0x00007ffff7fcb0b9 <+41>:	imul   %rcx,%rsi
   0x00007ffff7fcb0bd <+45>:	add    0x30(%rdi),%rsi
   0x00007ffff7fcb0c1 <+49>:	add    %rsi,%rcx
   0x00007ffff7fcb0c4 <+52>:	cmp    %rbx,%rcx
   0x00007ffff7fcb0c7 <+55>:	mov    %rbx,%rdx
   0x00007ffff7fcb0ca <+58>:	cmovle %rcx,%rdx
   0x00007ffff7fcb0ce <+62>:	add    %rax,%r8
   0x00007ffff7fcb0d1 <+65>:	cmp    %rbx,%r8
   0x00007ffff7fcb0d4 <+68>:	mov    %rbx,%rbp
   0x00007ffff7fcb0d7 <+71>:	cmovle %r8,%rbp
   0x00007ffff7fcb0db <+75>:	mov    %rbx,-0x20(%rsp)
   0x00007ffff7fcb0e0 <+80>:	test   %rbx,%rbx
   0x00007ffff7fcb0e3 <+83>:	cmovs  %rcx,%rdx
   0x00007ffff7fcb0e7 <+87>:	cmovs  %r8,%rbp
   0x00007ffff7fcb0eb <+91>:	mov    %rax,-0x30(%rsp)
   0x00007ffff7fcb0f0 <+96>:	sub    %rax,%rbp
   0x00007ffff7fcb0f3 <+99>:	mov    %rbp,%rax
   0x00007ffff7fcb0f6 <+102>:	test   %rbp,%rbp
   0x00007ffff7fcb0f9 <+105>:	jle    0x7ffff7fcb923 <syrk_kernel+2195>
   0x00007ffff7fcb0ff <+111>:	sub    %rsi,%rdx
   0x00007ffff7fcb102 <+114>:	mov    %rdx,-0x28(%rsp)
   0x00007ffff7fcb107 <+119>:	test   %rdx,%rdx
   0x00007ffff7fcb10a <+122>:	jle    0x7ffff7fcb923 <syrk_kernel+2195>
   0x00007ffff7fcb110 <+128>:	mov    %rsi,-0x78(%rsp)
   0x00007ffff7fcb115 <+133>:	mov    (%rdi),%rcx
   0x00007ffff7fcb118 <+136>:	mov    %rcx,-0x80(%rsp)
   0x00007ffff7fcb11d <+141>:	mov    0x8(%rdi),%rdx
   0x00007ffff7fcb121 <+145>:	vmovss 0x10(%rdi),%xmm0
   0x00007ffff7fcb126 <+150>:	vmovss 0x14(%rdi),%xmm10
   0x00007ffff7fcb12b <+155>:	movslq 0x18(%rdi),%r10
   0x00007ffff7fcb12f <+159>:	mov    %rax,%rsi
   0x00007ffff7fcb132 <+162>:	sar    $0x3,%rsi
   0x00007ffff7fcb136 <+166>:	mov    %rax,%rcx
   0x00007ffff7fcb139 <+169>:	and    $0xfffffffffffffff8,%rcx
   0x00007ffff7fcb13d <+173>:	mov    %rcx,-0x68(%rsp)
   0x00007ffff7fcb142 <+178>:	sub    %rcx,%rax
   0x00007ffff7fcb145 <+181>:	mov    %rax,-0x10(%rsp)
   0x00007ffff7fcb14a <+186>:	mov    %rsi,0x30(%rsp)
   0x00007ffff7fcb14f <+191>:	test   %rsi,%rsi
   0x00007ffff7fcb152 <+194>:	mov    %r10,-0x8(%rsp)
   0x00007ffff7fcb157 <+199>:	je     0x7ffff7fcb71d <syrk_kernel+1677>
   0x00007ffff7fcb15d <+205>:	vbroadcastss %xmm10,%ymm2
   0x00007ffff7fcb162 <+210>:	vmovd  %r10d,%xmm3
   0x00007ffff7fcb167 <+215>:	vpbroadcastd %xmm3,%ymm8
   0x00007ffff7fcb16c <+220>:	lea    -0x1(%r10),%rax
   0x00007ffff7fcb170 <+224>:	mov    %rax,0x28(%rsp)
   0x00007ffff7fcb175 <+229>:	mov    %r10d,%r13d
   0x00007ffff7fcb178 <+232>:	and    $0x7,%r13d
   0x00007ffff7fcb17c <+236>:	mov    %r10,%rax
   0x00007ffff7fcb17f <+239>:	sub    %r13,%rax
   0x00007ffff7fcb182 <+242>:	mov    %rax,0x18(%rsp)
   0x00007ffff7fcb187 <+247>:	mov    -0x78(%rsp),%rcx
   0x00007ffff7fcb18c <+252>:	mov    %ecx,%esi
   0x00007ffff7fcb18e <+254>:	imul   %r10d,%esi
   0x00007ffff7fcb192 <+258>:	mov    -0x80(%rsp),%rax
   0x00007ffff7fcb197 <+263>:	lea    0x1c(%rax),%rax
   0x00007ffff7fcb19b <+267>:	mov    %rax,-0x18(%rsp)
   0x00007ffff7fcb1a0 <+272>:	xor    %edi,%edi
   0x00007ffff7fcb1a2 <+274>:	movabs $0x7ffff7fca000,%rax
   0x00007ffff7fcb1ac <+284>:	vmovdqa (%rax),%ymm9
   0x00007ffff7fcb1b0 <+288>:	mov    %rcx,%rbp
   0x00007ffff7fcb1b3 <+291>:	mov    %r13,0x10(%rsp)
   0x00007ffff7fcb1b8 <+296>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fcb1c0 <+304>:	mov    %rdi,0x8(%rsp)
   0x00007ffff7fcb1c5 <+309>:	mov    %esi,-0x34(%rsp)
   0x00007ffff7fcb1c9 <+313>:	movslq %esi,%rax
   0x00007ffff7fcb1cc <+316>:	mov    -0x18(%rsp),%rcx
   0x00007ffff7fcb1d1 <+321>:	lea    (%rcx,%rax,4),%r9
   0x00007ffff7fcb1d5 <+325>:	mov    -0x20(%rsp),%rcx
   0x00007ffff7fcb1da <+330>:	mov    %rbp,(%rsp)
   0x00007ffff7fcb1de <+334>:	imul   %ebp,%ecx
   0x00007ffff7fcb1e1 <+337>:	mov    %rcx,-0x70(%rsp)
   0x00007ffff7fcb1e6 <+342>:	mov    -0x30(%rsp),%rdi
   0x00007ffff7fcb1eb <+347>:	vmovd  %edi,%xmm5
   0x00007ffff7fcb1ef <+351>:	vpbroadcastd %xmm5,%ymm5
   0x00007ffff7fcb1f4 <+356>:	vpaddd %ymm9,%ymm5,%ymm5
   0x00007ffff7fcb1f9 <+361>:	vpmulld %ymm8,%ymm5,%ymm5
   0x00007ffff7fcb1fe <+366>:	vmovd  %xmm5,%ecx
   0x00007ffff7fcb202 <+370>:	vpextrd $0x1,%xmm5,%esi
   0x00007ffff7fcb208 <+376>:	sub    %ecx,%esi
   0x00007ffff7fcb20a <+378>:	shl    $0x3,%esi
   0x00007ffff7fcb20d <+381>:	vmovd  %esi,%xmm6
   0x00007ffff7fcb211 <+385>:	vpbroadcastd %xmm6,%ymm6
   0x00007ffff7fcb216 <+390>:	mov    -0x80(%rsp),%rcx
   0x00007ffff7fcb21b <+395>:	lea    (%rcx,%rax,4),%rax
   0x00007ffff7fcb21f <+399>:	mov    %rax,0x20(%rsp)
   0x00007ffff7fcb224 <+404>:	xor    %r12d,%r12d
   0x00007ffff7fcb227 <+407>:	mov    %edi,%ecx
   0x00007ffff7fcb229 <+409>:	nopl   0x0(%rax)
   0x00007ffff7fcb230 <+416>:	mov    -0x70(%rsp),%rax
   0x00007ffff7fcb235 <+421>:	mov    %rcx,-0x40(%rsp)
   0x00007ffff7fcb23a <+426>:	lea    (%rax,%rcx,1),%eax
   0x00007ffff7fcb23d <+429>:	movslq %eax,%r14
   0x00007ffff7fcb240 <+432>:	vmulps (%rdx,%r14,4),%ymm2,%ymm7
   0x00007ffff7fcb246 <+438>:	vmovups %ymm7,(%rdx,%r14,4)
   0x00007ffff7fcb24c <+444>:	test   %r10d,%r10d
   0x00007ffff7fcb24f <+447>:	jle    0x7ffff7fcb6da <syrk_kernel+1610>
   0x00007ffff7fcb255 <+453>:	vmovq  %xmm5,%rax
   0x00007ffff7fcb25a <+458>:	movslq %eax,%r10
   0x00007ffff7fcb25d <+461>:	mov    %rax,%rdi
   0x00007ffff7fcb260 <+464>:	vpextrq $0x1,%xmm5,%rax
   0x00007ffff7fcb266 <+470>:	sar    $0x20,%rdi
   0x00007ffff7fcb26a <+474>:	movslq %eax,%r8
   0x00007ffff7fcb26d <+477>:	mov    %rax,%rbx
   0x00007ffff7fcb270 <+480>:	sar    $0x20,%rbx
   0x00007ffff7fcb274 <+484>:	vextracti128 $0x1,%ymm5,%xmm3
   0x00007ffff7fcb27a <+490>:	vmovq  %xmm3,%rax
   0x00007ffff7fcb27f <+495>:	movslq %eax,%rcx
   0x00007ffff7fcb282 <+498>:	vpextrq $0x1,%xmm3,%rbp
   0x00007ffff7fcb288 <+504>:	sar    $0x20,%rax
   0x00007ffff7fcb28c <+508>:	movslq %ebp,%rsi
   0x00007ffff7fcb28f <+511>:	sar    $0x20,%rbp
   0x00007ffff7fcb293 <+515>:	cmpq   $0x7,0x28(%rsp)
   0x00007ffff7fcb299 <+521>:	mov    %r10,-0x50(%rsp)
   0x00007ffff7fcb29e <+526>:	mov    %r12,-0x48(%rsp)
   0x00007ffff7fcb2a3 <+531>:	mov    %rdi,-0x58(%rsp)
   0x00007ffff7fcb2a8 <+536>:	mov    %r8,-0x60(%rsp)
   0x00007ffff7fcb2ad <+541>:	mov    %rbx,0x58(%rsp)
   0x00007ffff7fcb2b2 <+546>:	mov    %rcx,0x50(%rsp)
   0x00007ffff7fcb2b7 <+551>:	mov    %rax,0x48(%rsp)
   0x00007ffff7fcb2bc <+556>:	mov    %rsi,0x40(%rsp)
   0x00007ffff7fcb2c1 <+561>:	mov    %rbp,0x38(%rsp)
   0x00007ffff7fcb2c6 <+566>:	jae    0x7ffff7fcb2d0 <syrk_kernel+576>
   0x00007ffff7fcb2c8 <+568>:	xor    %eax,%eax
   0x00007ffff7fcb2ca <+570>:	jmp    0x7ffff7fcb5fd <syrk_kernel+1389>
   0x00007ffff7fcb2cf <+575>:	nop
   0x00007ffff7fcb2d0 <+576>:	mov    -0x18(%rsp),%r13
   0x00007ffff7fcb2d5 <+581>:	lea    0x0(,%rbp,4),%r12
   0x00007ffff7fcb2dd <+589>:	add    %r13,%r12
   0x00007ffff7fcb2e0 <+592>:	lea    0x0(%r13,%rsi,4),%r11
   0x00007ffff7fcb2e5 <+597>:	lea    0x0(%r13,%rax,4),%rbp
   0x00007ffff7fcb2ea <+602>:	lea    0x0(%r13,%rcx,4),%r15
   0x00007ffff7fcb2ef <+607>:	lea    0x0(%r13,%rbx,4),%rbx
   0x00007ffff7fcb2f4 <+612>:	mov    %r8,%rsi
   0x00007ffff7fcb2f7 <+615>:	lea    0x0(%r13,%rsi,4),%rsi
   0x00007ffff7fcb2fc <+620>:	lea    0x0(,%rdi,4),%r8
   0x00007ffff7fcb304 <+628>:	add    %r13,%r8
   0x00007ffff7fcb307 <+631>:	lea    0x0(,%r10,4),%r10
   0x00007ffff7fcb30f <+639>:	add    %r13,%r10
   0x00007ffff7fcb312 <+642>:	mov    0x10(%rsp),%r13
   0x00007ffff7fcb317 <+647>:	xor    %eax,%eax
   0x00007ffff7fcb319 <+649>:	mov    0x18(%rsp),%rcx
   0x00007ffff7fcb31e <+654>:	xchg   %ax,%ax
   0x00007ffff7fcb320 <+656>:	vmulss -0x1c(%r9,%rax,4),%xmm0,%xmm3
   0x00007ffff7fcb327 <+663>:	vmovss -0x1c(%r15,%rax,4),%xmm4
   0x00007ffff7fcb32e <+670>:	vinsertps $0x10,-0x1c(%rbp,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb336 <+678>:	vinsertps $0x20,-0x1c(%r11,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb33e <+686>:	vinsertps $0x30,-0x1c(%r12,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb346 <+694>:	vbroadcastss %xmm3,%ymm3
   0x00007ffff7fcb34b <+699>:	vmovss -0x1c(%r10,%rax,4),%xmm1
   0x00007ffff7fcb352 <+706>:	vinsertps $0x10,-0x1c(%r8,%rax,4),%xmm1,%xmm1
   0x00007ffff7fcb35a <+714>:	vinsertps $0x20,-0x1c(%rsi,%rax,4),%xmm1,%xmm1
   0x00007ffff7fcb362 <+722>:	vinsertps $0x30,-0x1c(%rbx,%rax,4),%xmm1,%xmm1
   0x00007ffff7fcb36a <+730>:	vinsertf128 $0x1,%xmm4,%ymm1,%ymm1
   0x00007ffff7fcb370 <+736>:	vfmadd213ps %ymm7,%ymm3,%ymm1
   0x00007ffff7fcb375 <+741>:	vmovups %ymm1,(%rdx,%r14,4)
   0x00007ffff7fcb37b <+747>:	vmulss -0x18(%r9,%rax,4),%xmm0,%xmm3
   0x00007ffff7fcb382 <+754>:	vmovss -0x18(%r15,%rax,4),%xmm4
   0x00007ffff7fcb389 <+761>:	vinsertps $0x10,-0x18(%rbp,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb391 <+769>:	vinsertps $0x20,-0x18(%r11,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb399 <+777>:	vbroadcastss %xmm3,%ymm3
   0x00007ffff7fcb39e <+782>:	vinsertps $0x30,-0x18(%r12,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb3a6 <+790>:	vmovss -0x18(%r10,%rax,4),%xmm7
   0x00007ffff7fcb3ad <+797>:	vinsertps $0x10,-0x18(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb3b5 <+805>:	vinsertps $0x20,-0x18(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb3bd <+813>:	vinsertps $0x30,-0x18(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb3c5 <+821>:	vinsertf128 $0x1,%xmm4,%ymm7,%ymm4
   0x00007ffff7fcb3cb <+827>:	vfmadd213ps %ymm1,%ymm3,%ymm4
   0x00007ffff7fcb3d0 <+832>:	vmovups %ymm4,(%rdx,%r14,4)
   0x00007ffff7fcb3d6 <+838>:	vmulss -0x14(%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb3dd <+845>:	vmovss -0x14(%r15,%rax,4),%xmm3
   0x00007ffff7fcb3e4 <+852>:	vinsertps $0x10,-0x14(%rbp,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb3ec <+860>:	vinsertps $0x20,-0x14(%r11,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb3f4 <+868>:	vinsertps $0x30,-0x14(%r12,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb3fc <+876>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb401 <+881>:	vmovss -0x14(%r10,%rax,4),%xmm7
   0x00007ffff7fcb408 <+888>:	vinsertps $0x10,-0x14(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb410 <+896>:	vinsertps $0x20,-0x14(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb418 <+904>:	vinsertps $0x30,-0x14(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb420 <+912>:	vinsertf128 $0x1,%xmm3,%ymm7,%ymm3
   0x00007ffff7fcb426 <+918>:	vfmadd213ps %ymm4,%ymm1,%ymm3
   0x00007ffff7fcb42b <+923>:	vmovups %ymm3,(%rdx,%r14,4)
   0x00007ffff7fcb431 <+929>:	vmulss -0x10(%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb438 <+936>:	vmovss -0x10(%r15,%rax,4),%xmm4
   0x00007ffff7fcb43f <+943>:	vinsertps $0x10,-0x10(%rbp,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb447 <+951>:	vinsertps $0x20,-0x10(%r11,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb44f <+959>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb454 <+964>:	vinsertps $0x30,-0x10(%r12,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb45c <+972>:	vmovss -0x10(%r10,%rax,4),%xmm7
   0x00007ffff7fcb463 <+979>:	vinsertps $0x10,-0x10(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb46b <+987>:	vinsertps $0x20,-0x10(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb473 <+995>:	vinsertps $0x30,-0x10(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb47b <+1003>:	vinsertf128 $0x1,%xmm4,%ymm7,%ymm4
   0x00007ffff7fcb481 <+1009>:	vfmadd213ps %ymm3,%ymm1,%ymm4
   0x00007ffff7fcb486 <+1014>:	vmovups %ymm4,(%rdx,%r14,4)
   0x00007ffff7fcb48c <+1020>:	vmulss -0xc(%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb493 <+1027>:	vmovss -0xc(%r15,%rax,4),%xmm3
   0x00007ffff7fcb49a <+1034>:	vinsertps $0x10,-0xc(%rbp,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb4a2 <+1042>:	vinsertps $0x20,-0xc(%r11,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb4aa <+1050>:	vinsertps $0x30,-0xc(%r12,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb4b2 <+1058>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb4b7 <+1063>:	vmovss -0xc(%r10,%rax,4),%xmm7
   0x00007ffff7fcb4be <+1070>:	vinsertps $0x10,-0xc(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb4c6 <+1078>:	vinsertps $0x20,-0xc(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb4ce <+1086>:	vinsertps $0x30,-0xc(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb4d6 <+1094>:	vinsertf128 $0x1,%xmm3,%ymm7,%ymm3
   0x00007ffff7fcb4dc <+1100>:	vfmadd213ps %ymm4,%ymm1,%ymm3
   0x00007ffff7fcb4e1 <+1105>:	vmovups %ymm3,(%rdx,%r14,4)
   0x00007ffff7fcb4e7 <+1111>:	vmulss -0x8(%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb4ee <+1118>:	vmovss -0x8(%r15,%rax,4),%xmm4
   0x00007ffff7fcb4f5 <+1125>:	vinsertps $0x10,-0x8(%rbp,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb4fd <+1133>:	vinsertps $0x20,-0x8(%r11,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb505 <+1141>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb50a <+1146>:	vinsertps $0x30,-0x8(%r12,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb512 <+1154>:	vmovss -0x8(%r10,%rax,4),%xmm7
   0x00007ffff7fcb519 <+1161>:	vinsertps $0x10,-0x8(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb521 <+1169>:	vinsertps $0x20,-0x8(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb529 <+1177>:	vinsertps $0x30,-0x8(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb531 <+1185>:	vinsertf128 $0x1,%xmm4,%ymm7,%ymm4
   0x00007ffff7fcb537 <+1191>:	vfmadd213ps %ymm3,%ymm1,%ymm4
   0x00007ffff7fcb53c <+1196>:	vmovups %ymm4,(%rdx,%r14,4)
   0x00007ffff7fcb542 <+1202>:	vmulss -0x4(%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb549 <+1209>:	vmovss -0x4(%r15,%rax,4),%xmm3
   0x00007ffff7fcb550 <+1216>:	vinsertps $0x10,-0x4(%rbp,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb558 <+1224>:	vinsertps $0x20,-0x4(%r11,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb560 <+1232>:	vinsertps $0x30,-0x4(%r12,%rax,4),%xmm3,%xmm3
   0x00007ffff7fcb568 <+1240>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb56d <+1245>:	vmovss -0x4(%r10,%rax,4),%xmm7
   0x00007ffff7fcb574 <+1252>:	vinsertps $0x10,-0x4(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb57c <+1260>:	vinsertps $0x20,-0x4(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb584 <+1268>:	vinsertps $0x30,-0x4(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb58c <+1276>:	vinsertf128 $0x1,%xmm3,%ymm7,%ymm3
   0x00007ffff7fcb592 <+1282>:	vfmadd213ps %ymm4,%ymm1,%ymm3
   0x00007ffff7fcb597 <+1287>:	vmovups %ymm3,(%rdx,%r14,4)
   0x00007ffff7fcb59d <+1293>:	vmulss (%r9,%rax,4),%xmm0,%xmm1
   0x00007ffff7fcb5a3 <+1299>:	vmovss (%r15,%rax,4),%xmm4
   0x00007ffff7fcb5a9 <+1305>:	vinsertps $0x10,0x0(%rbp,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb5b1 <+1313>:	vinsertps $0x20,(%r11,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb5b8 <+1320>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb5bd <+1325>:	vinsertps $0x30,(%r12,%rax,4),%xmm4,%xmm4
   0x00007ffff7fcb5c4 <+1332>:	vmovss (%r10,%rax,4),%xmm7
   0x00007ffff7fcb5ca <+1338>:	vinsertps $0x10,(%r8,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb5d1 <+1345>:	vinsertps $0x20,(%rsi,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb5d8 <+1352>:	vinsertps $0x30,(%rbx,%rax,4),%xmm7,%xmm7
   0x00007ffff7fcb5df <+1359>:	vinsertf128 $0x1,%xmm4,%ymm7,%ymm7
   0x00007ffff7fcb5e5 <+1365>:	vfmadd213ps %ymm3,%ymm1,%ymm7
   0x00007ffff7fcb5ea <+1370>:	vmovups %ymm7,(%rdx,%r14,4)
   0x00007ffff7fcb5f0 <+1376>:	add    $0x8,%rax
   0x00007ffff7fcb5f4 <+1380>:	cmp    %rax,%rcx
   0x00007ffff7fcb5f7 <+1383>:	jne    0x7ffff7fcb320 <syrk_kernel+656>
   0x00007ffff7fcb5fd <+1389>:	test   %r13,%r13
   0x00007ffff7fcb600 <+1392>:	mov    -0x48(%rsp),%r12
   0x00007ffff7fcb605 <+1397>:	je     0x7ffff7fcb6da <syrk_kernel+1610>
   0x00007ffff7fcb60b <+1403>:	mov    0x38(%rsp),%rsi
   0x00007ffff7fcb610 <+1408>:	add    %rax,%rsi
   0x00007ffff7fcb613 <+1411>:	mov    -0x80(%rsp),%rcx
   0x00007ffff7fcb618 <+1416>:	lea    (%rcx,%rsi,4),%r8
   0x00007ffff7fcb61c <+1420>:	mov    0x40(%rsp),%rsi
   0x00007ffff7fcb621 <+1425>:	add    %rax,%rsi
   0x00007ffff7fcb624 <+1428>:	lea    (%rcx,%rsi,4),%r10
   0x00007ffff7fcb628 <+1432>:	mov    0x48(%rsp),%rsi
   0x00007ffff7fcb62d <+1437>:	add    %rax,%rsi
   0x00007ffff7fcb630 <+1440>:	lea    (%rcx,%rsi,4),%r11
   0x00007ffff7fcb634 <+1444>:	mov    0x50(%rsp),%rsi
   0x00007ffff7fcb639 <+1449>:	add    %rax,%rsi
   0x00007ffff7fcb63c <+1452>:	lea    (%rcx,%rsi,4),%r15
   0x00007ffff7fcb640 <+1456>:	mov    0x58(%rsp),%rsi
   0x00007ffff7fcb645 <+1461>:	add    %rax,%rsi
   0x00007ffff7fcb648 <+1464>:	lea    (%rcx,%rsi,4),%rdi
   0x00007ffff7fcb64c <+1468>:	mov    -0x60(%rsp),%rsi
   0x00007ffff7fcb651 <+1473>:	add    %rax,%rsi
   0x00007ffff7fcb654 <+1476>:	lea    (%rcx,%rsi,4),%rsi
   0x00007ffff7fcb658 <+1480>:	mov    -0x58(%rsp),%rbx
   0x00007ffff7fcb65d <+1485>:	add    %rax,%rbx
   0x00007ffff7fcb660 <+1488>:	lea    (%rcx,%rbx,4),%rbp
   0x00007ffff7fcb664 <+1492>:	mov    -0x50(%rsp),%rbx
   0x00007ffff7fcb669 <+1497>:	add    %rax,%rbx
   0x00007ffff7fcb66c <+1500>:	lea    (%rcx,%rbx,4),%rbx
   0x00007ffff7fcb670 <+1504>:	mov    0x20(%rsp),%rcx
   0x00007ffff7fcb675 <+1509>:	lea    (%rcx,%rax,4),%rax
   0x00007ffff7fcb679 <+1513>:	xor    %ecx,%ecx
   0x00007ffff7fcb67b <+1515>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fcb680 <+1520>:	vmulss (%rax,%rcx,4),%xmm0,%xmm1
   0x00007ffff7fcb685 <+1525>:	vmovss (%r15,%rcx,4),%xmm3
   0x00007ffff7fcb68b <+1531>:	vinsertps $0x10,(%r11,%rcx,4),%xmm3,%xmm3
   0x00007ffff7fcb692 <+1538>:	vinsertps $0x20,(%r10,%rcx,4),%xmm3,%xmm3
   0x00007ffff7fcb699 <+1545>:	vbroadcastss %xmm1,%ymm1
   0x00007ffff7fcb69e <+1550>:	vinsertps $0x30,(%r8,%rcx,4),%xmm3,%xmm3
   0x00007ffff7fcb6a5 <+1557>:	vmovss (%rbx,%rcx,4),%xmm4
   0x00007ffff7fcb6aa <+1562>:	vinsertps $0x10,0x0(%rbp,%rcx,4),%xmm4,%xmm4
   0x00007ffff7fcb6b2 <+1570>:	vinsertps $0x20,(%rsi,%rcx,4),%xmm4,%xmm4
   0x00007ffff7fcb6b9 <+1577>:	vinsertps $0x30,(%rdi,%rcx,4),%xmm4,%xmm4
   0x00007ffff7fcb6c0 <+1584>:	vinsertf128 $0x1,%xmm3,%ymm4,%ymm3
   0x00007ffff7fcb6c6 <+1590>:	vfmadd231ps %ymm3,%ymm1,%ymm7
   0x00007ffff7fcb6cb <+1595>:	vmovups %ymm7,(%rdx,%r14,4)
   0x00007ffff7fcb6d1 <+1601>:	add    $0x1,%rcx
   0x00007ffff7fcb6d5 <+1605>:	cmp    %rcx,%r13
   0x00007ffff7fcb6d8 <+1608>:	jne    0x7ffff7fcb680 <syrk_kernel+1520>
   0x00007ffff7fcb6da <+1610>:	add    $0x1,%r12
   0x00007ffff7fcb6de <+1614>:	mov    -0x40(%rsp),%rcx
   0x00007ffff7fcb6e3 <+1619>:	add    $0x8,%ecx
   0x00007ffff7fcb6e6 <+1622>:	vpaddd %ymm6,%ymm5,%ymm5
   0x00007ffff7fcb6ea <+1626>:	cmp    0x30(%rsp),%r12
   0x00007ffff7fcb6ef <+1631>:	mov    -0x8(%rsp),%r10
   0x00007ffff7fcb6f4 <+1636>:	jne    0x7ffff7fcb230 <syrk_kernel+416>
   0x00007ffff7fcb6fa <+1642>:	mov    0x8(%rsp),%rdi
   0x00007ffff7fcb6ff <+1647>:	add    $0x1,%rdi
   0x00007ffff7fcb703 <+1651>:	mov    (%rsp),%rbp
   0x00007ffff7fcb707 <+1655>:	add    $0x1,%rbp
   0x00007ffff7fcb70b <+1659>:	mov    -0x34(%rsp),%esi
   0x00007ffff7fcb70f <+1663>:	add    %r10d,%esi
   0x00007ffff7fcb712 <+1666>:	cmp    -0x28(%rsp),%rdi
   0x00007ffff7fcb717 <+1671>:	jne    0x7ffff7fcb1c0 <syrk_kernel+304>
   0x00007ffff7fcb71d <+1677>:	cmpq   $0x0,-0x10(%rsp)
   0x00007ffff7fcb723 <+1683>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fcb728 <+1688>:	je     0x7ffff7fcb923 <syrk_kernel+2195>
   0x00007ffff7fcb72e <+1694>:	mov    -0x68(%rsp),%rdi
   0x00007ffff7fcb733 <+1699>:	add    -0x30(%rsp),%rdi
   0x00007ffff7fcb738 <+1704>:	lea    -0x1(%r10),%rcx
   0x00007ffff7fcb73c <+1708>:	mov    %rcx,-0x40(%rsp)
   0x00007ffff7fcb741 <+1713>:	mov    %r10d,%ecx
   0x00007ffff7fcb744 <+1716>:	and    $0x7,%ecx
   0x00007ffff7fcb747 <+1719>:	mov    %r10,%r15
   0x00007ffff7fcb74a <+1722>:	sub    %rcx,%r15
   0x00007ffff7fcb74d <+1725>:	mov    -0x80(%rsp),%rsi
   0x00007ffff7fcb752 <+1730>:	lea    0x1c(%rsi),%rsi
   0x00007ffff7fcb756 <+1734>:	mov    %rsi,-0x70(%rsp)
   0x00007ffff7fcb75b <+1739>:	mov    %rdi,-0x68(%rsp)
   0x00007ffff7fcb760 <+1744>:	mov    %edi,%esi
   0x00007ffff7fcb762 <+1746>:	imul   %r10d,%esi
   0x00007ffff7fcb766 <+1750>:	mov    %esi,-0x60(%rsp)
   0x00007ffff7fcb76a <+1754>:	mov    %eax,%esi
   0x00007ffff7fcb76c <+1756>:	imul   %r10d,%esi
   0x00007ffff7fcb770 <+1760>:	xor    %edi,%edi
   0x00007ffff7fcb772 <+1762>:	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcb780 <+1776>:	mov    %rdi,-0x58(%rsp)
   0x00007ffff7fcb785 <+1781>:	mov    -0x20(%rsp),%r12
   0x00007ffff7fcb78a <+1786>:	mov    %rax,-0x78(%rsp)
   0x00007ffff7fcb78f <+1791>:	imul   %eax,%r12d
   0x00007ffff7fcb793 <+1795>:	mov    %esi,-0x50(%rsp)
   0x00007ffff7fcb797 <+1799>:	movslq %esi,%rax
   0x00007ffff7fcb79a <+1802>:	mov    -0x70(%rsp),%rsi
   0x00007ffff7fcb79f <+1807>:	lea    (%rsi,%rax,4),%rbp
   0x00007ffff7fcb7a3 <+1811>:	mov    -0x80(%rsp),%rsi
   0x00007ffff7fcb7a8 <+1816>:	lea    (%rsi,%rax,4),%rax
   0x00007ffff7fcb7ac <+1820>:	mov    %rax,-0x48(%rsp)
   0x00007ffff7fcb7b1 <+1825>:	mov    -0x60(%rsp),%r13d
   0x00007ffff7fcb7b6 <+1830>:	xor    %r11d,%r11d
   0x00007ffff7fcb7b9 <+1833>:	mov    -0x68(%rsp),%r14
   0x00007ffff7fcb7be <+1838>:	xchg   %ax,%ax
   0x00007ffff7fcb7c0 <+1840>:	lea    (%r12,%r14,1),%eax
   0x00007ffff7fcb7c4 <+1844>:	movslq %eax,%rdi
   0x00007ffff7fcb7c7 <+1847>:	vmulss (%rdx,%rdi,4),%xmm10,%xmm2
   0x00007ffff7fcb7cc <+1852>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb7d1 <+1857>:	test   %r10d,%r10d
   0x00007ffff7fcb7d4 <+1860>:	jle    0x7ffff7fcb8e9 <syrk_kernel+2137>
   0x00007ffff7fcb7da <+1866>:	movslq %r13d,%r8
   0x00007ffff7fcb7dd <+1869>:	cmpq   $0x7,-0x40(%rsp)
   0x00007ffff7fcb7e3 <+1875>:	jae    0x7ffff7fcb7f0 <syrk_kernel+1888>
   0x00007ffff7fcb7e5 <+1877>:	xor    %r9d,%r9d
   0x00007ffff7fcb7e8 <+1880>:	jmp    0x7ffff7fcb8a4 <syrk_kernel+2068>
   0x00007ffff7fcb7ed <+1885>:	nopl   (%rax)
   0x00007ffff7fcb7f0 <+1888>:	mov    -0x70(%rsp),%rax
   0x00007ffff7fcb7f5 <+1893>:	lea    (%rax,%r8,4),%r10
   0x00007ffff7fcb7f9 <+1897>:	xor    %r9d,%r9d
   0x00007ffff7fcb7fc <+1900>:	nopl   0x0(%rax)
   0x00007ffff7fcb800 <+1904>:	vmulss -0x1c(%rbp,%r9,4),%xmm0,%xmm1
   0x00007ffff7fcb807 <+1911>:	vfmadd132ss -0x1c(%r10,%r9,4),%xmm2,%xmm1
   0x00007ffff7fcb80e <+1918>:	vmovss %xmm1,(%rdx,%rdi,4)
   0x00007ffff7fcb813 <+1923>:	vmulss -0x18(%rbp,%r9,4),%xmm0,%xmm2
   0x00007ffff7fcb81a <+1930>:	vfmadd132ss -0x18(%r10,%r9,4),%xmm1,%xmm2
   0x00007ffff7fcb821 <+1937>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb826 <+1942>:	vmulss -0x14(%rbp,%r9,4),%xmm0,%xmm1
   0x00007ffff7fcb82d <+1949>:	vfmadd132ss -0x14(%r10,%r9,4),%xmm2,%xmm1
   0x00007ffff7fcb834 <+1956>:	vmovss %xmm1,(%rdx,%rdi,4)
   0x00007ffff7fcb839 <+1961>:	vmulss -0x10(%rbp,%r9,4),%xmm0,%xmm2
   0x00007ffff7fcb840 <+1968>:	vfmadd132ss -0x10(%r10,%r9,4),%xmm1,%xmm2
   0x00007ffff7fcb847 <+1975>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb84c <+1980>:	vmulss -0xc(%rbp,%r9,4),%xmm0,%xmm1
   0x00007ffff7fcb853 <+1987>:	vfmadd132ss -0xc(%r10,%r9,4),%xmm2,%xmm1
   0x00007ffff7fcb85a <+1994>:	vmovss %xmm1,(%rdx,%rdi,4)
   0x00007ffff7fcb85f <+1999>:	vmulss -0x8(%rbp,%r9,4),%xmm0,%xmm2
   0x00007ffff7fcb866 <+2006>:	vfmadd132ss -0x8(%r10,%r9,4),%xmm1,%xmm2
   0x00007ffff7fcb86d <+2013>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb872 <+2018>:	vmulss -0x4(%rbp,%r9,4),%xmm0,%xmm1
   0x00007ffff7fcb879 <+2025>:	vfmadd132ss -0x4(%r10,%r9,4),%xmm2,%xmm1
   0x00007ffff7fcb880 <+2032>:	vmovss %xmm1,(%rdx,%rdi,4)
   0x00007ffff7fcb885 <+2037>:	vmulss 0x0(%rbp,%r9,4),%xmm0,%xmm2
   0x00007ffff7fcb88c <+2044>:	vfmadd132ss (%r10,%r9,4),%xmm1,%xmm2
   0x00007ffff7fcb892 <+2050>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb897 <+2055>:	add    $0x8,%r9
   0x00007ffff7fcb89b <+2059>:	cmp    %r9,%r15
   0x00007ffff7fcb89e <+2062>:	jne    0x7ffff7fcb800 <syrk_kernel+1904>
   0x00007ffff7fcb8a4 <+2068>:	test   %rcx,%rcx
   0x00007ffff7fcb8a7 <+2071>:	mov    -0x8(%rsp),%r10
   0x00007ffff7fcb8ac <+2076>:	je     0x7ffff7fcb8e9 <syrk_kernel+2137>
   0x00007ffff7fcb8ae <+2078>:	add    %r9,%r8
   0x00007ffff7fcb8b1 <+2081>:	mov    -0x80(%rsp),%rax
   0x00007ffff7fcb8b6 <+2086>:	lea    (%rax,%r8,4),%rax
   0x00007ffff7fcb8ba <+2090>:	mov    -0x48(%rsp),%rsi
   0x00007ffff7fcb8bf <+2095>:	lea    (%rsi,%r9,4),%rbx
   0x00007ffff7fcb8c3 <+2099>:	xor    %esi,%esi
   0x00007ffff7fcb8c5 <+2101>:	data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcb8d0 <+2112>:	vmulss (%rbx,%rsi,4),%xmm0,%xmm1
   0x00007ffff7fcb8d5 <+2117>:	vfmadd231ss (%rax,%rsi,4),%xmm1,%xmm2
   0x00007ffff7fcb8db <+2123>:	vmovss %xmm2,(%rdx,%rdi,4)
   0x00007ffff7fcb8e0 <+2128>:	add    $0x1,%rsi
   0x00007ffff7fcb8e4 <+2132>:	cmp    %rsi,%rcx
   0x00007ffff7fcb8e7 <+2135>:	jne    0x7ffff7fcb8d0 <syrk_kernel+2112>
   0x00007ffff7fcb8e9 <+2137>:	add    $0x1,%r11
   0x00007ffff7fcb8ed <+2141>:	add    $0x1,%r14
   0x00007ffff7fcb8f1 <+2145>:	add    %r10d,%r13d
   0x00007ffff7fcb8f4 <+2148>:	cmp    -0x10(%rsp),%r11
   0x00007ffff7fcb8f9 <+2153>:	jne    0x7ffff7fcb7c0 <syrk_kernel+1840>
   0x00007ffff7fcb8ff <+2159>:	mov    -0x58(%rsp),%rdi
   0x00007ffff7fcb904 <+2164>:	add    $0x1,%rdi
   0x00007ffff7fcb908 <+2168>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fcb90d <+2173>:	add    $0x1,%rax
   0x00007ffff7fcb911 <+2177>:	mov    -0x50(%rsp),%esi
   0x00007ffff7fcb915 <+2181>:	add    %r10d,%esi
   0x00007ffff7fcb918 <+2184>:	cmp    -0x28(%rsp),%rdi
   0x00007ffff7fcb91d <+2189>:	jne    0x7ffff7fcb780 <syrk_kernel+1776>
   0x00007ffff7fcb923 <+2195>:	add    $0x60,%rsp
   0x00007ffff7fcb927 <+2199>:	pop    %rbx
   0x00007ffff7fcb928 <+2200>:	pop    %r12
   0x00007ffff7fcb92a <+2202>:	pop    %r13
   0x00007ffff7fcb92c <+2204>:	pop    %r14
   0x00007ffff7fcb92e <+2206>:	pop    %r15
   0x00007ffff7fcb930 <+2208>:	pop    %rbp
   0x00007ffff7fcb931 <+2209>:	vzeroupper 
   0x00007ffff7fcb934 <+2212>:	ret    
End of assembler dump.

Dump of assembler code for function gramschmidt_kernel2:
=> 0x00007ffff7fcb440 <+0>:	push   %rbp
   0x00007ffff7fcb441 <+1>:	push   %r15
   0x00007ffff7fcb443 <+3>:	push   %r14
   0x00007ffff7fcb445 <+5>:	push   %r13
   0x00007ffff7fcb447 <+7>:	push   %r12
   0x00007ffff7fcb449 <+9>:	push   %rbx
   0x00007ffff7fcb44a <+10>:	mov    0x60(%rdi),%rax
   0x00007ffff7fcb44e <+14>:	mov    (%rsi),%rdx
   0x00007ffff7fcb451 <+17>:	imul   %rax,%rdx
   0x00007ffff7fcb455 <+21>:	add    0x30(%rdi),%rdx
   0x00007ffff7fcb459 <+25>:	movslq 0x1c(%rdi),%rcx
   0x00007ffff7fcb45d <+29>:	add    %rdx,%rax
   0x00007ffff7fcb460 <+32>:	cmp    %rcx,%rax
   0x00007ffff7fcb463 <+35>:	mov    %rcx,%r13
   0x00007ffff7fcb466 <+38>:	cmovle %rax,%r13
   0x00007ffff7fcb46a <+42>:	test   %rcx,%rcx
   0x00007ffff7fcb46d <+45>:	cmovs  %rax,%r13
   0x00007ffff7fcb471 <+49>:	mov    %rdx,-0x8(%rsp)
   0x00007ffff7fcb476 <+54>:	sub    %rdx,%r13
   0x00007ffff7fcb479 <+57>:	test   %r13,%r13
   0x00007ffff7fcb47c <+60>:	jle    0x7ffff7fcb64a <gramschmidt_kernel2+522>
   0x00007ffff7fcb482 <+66>:	mov    (%rdi),%rax
   0x00007ffff7fcb485 <+69>:	mov    %rax,-0x10(%rsp)
   0x00007ffff7fcb48a <+74>:	mov    0x8(%rdi),%r12
   0x00007ffff7fcb48e <+78>:	mov    0x10(%rdi),%rax
   0x00007ffff7fcb492 <+82>:	mov    %rax,-0x18(%rsp)
   0x00007ffff7fcb497 <+87>:	movslq 0x18(%rdi),%rax
   0x00007ffff7fcb49b <+91>:	mov    %rax,-0x20(%rsp)
   0x00007ffff7fcb4a0 <+96>:	mov    0x20(%rdi),%eax
   0x00007ffff7fcb4a3 <+99>:	mov    %eax,-0x24(%rsp)
   0x00007ffff7fcb4a7 <+103>:	mov    %r13,%rcx
   0x00007ffff7fcb4aa <+106>:	sar    $0x3,%rcx
   0x00007ffff7fcb4ae <+110>:	mov    %r13,%rax
   0x00007ffff7fcb4b1 <+113>:	and    $0xfffffffffffffff8,%rax
   0x00007ffff7fcb4b5 <+117>:	sub    %rax,%r13
   0x00007ffff7fcb4b8 <+120>:	test   %rcx,%rcx
   0x00007ffff7fcb4bb <+123>:	je     0x7ffff7fcb600 <gramschmidt_kernel2+448>
   0x00007ffff7fcb4c1 <+129>:	mov    -0x24(%rsp),%edx
   0x00007ffff7fcb4c5 <+133>:	vmovd  %edx,%xmm0
   0x00007ffff7fcb4c9 <+137>:	vpbroadcastd %xmm0,%ymm0
   0x00007ffff7fcb4ce <+142>:	mov    -0x20(%rsp),%rdi
   0x00007ffff7fcb4d3 <+147>:	imul   %edi,%edx
   0x00007ffff7fcb4d6 <+150>:	mov    -0x10(%rsp),%rsi
   0x00007ffff7fcb4db <+155>:	lea    (%rsi,%rdi,4),%rbx
   0x00007ffff7fcb4df <+159>:	add    %edi,%edx
   0x00007ffff7fcb4e1 <+161>:	movslq %edx,%r15
   0x00007ffff7fcb4e4 <+164>:	mov    -0x18(%rsp),%rdx
   0x00007ffff7fcb4e9 <+169>:	lea    (%rdx,%rdi,4),%rbp
   0x00007ffff7fcb4ed <+173>:	mov    -0x8(%rsp),%rdx
   0x00007ffff7fcb4f2 <+178>:	vmovd  %edx,%xmm1
   0x00007ffff7fcb4f6 <+182>:	vpbroadcastd %xmm1,%ymm1
   0x00007ffff7fcb4fb <+187>:	movabs $0x7ffff7fca000,%rdx
   0x00007ffff7fcb505 <+197>:	vpaddd (%rdx),%ymm1,%ymm1
   0x00007ffff7fcb509 <+201>:	vpmulld %ymm0,%ymm1,%ymm0
   0x00007ffff7fcb50e <+206>:	vpextrd $0x1,%xmm0,%edx
   0x00007ffff7fcb514 <+212>:	vmovd  %xmm0,%esi
   0x00007ffff7fcb518 <+216>:	sub    %esi,%edx
   0x00007ffff7fcb51a <+218>:	shl    $0x3,%edx
   0x00007ffff7fcb51d <+221>:	vmovd  %edx,%xmm1
   0x00007ffff7fcb521 <+225>:	vpbroadcastd %xmm1,%ymm1
   0x00007ffff7fcb526 <+230>:	nopw   %cs:0x0(%rax,%rax,1)
   0x00007ffff7fcb530 <+240>:	vpextrq $0x1,%xmm0,%rdi
   0x00007ffff7fcb536 <+246>:	vmovq  %xmm0,%r10
   0x00007ffff7fcb53b <+251>:	vextracti128 $0x1,%ymm0,%xmm2
   0x00007ffff7fcb541 <+257>:	vmovq  %xmm2,%rdx
   0x00007ffff7fcb546 <+262>:	movslq %r10d,%r8
   0x00007ffff7fcb549 <+265>:	sar    $0x20,%r10
   0x00007ffff7fcb54d <+269>:	movslq %edi,%r9
   0x00007ffff7fcb550 <+272>:	vpextrq $0x1,%xmm2,%rsi
   0x00007ffff7fcb556 <+278>:	movslq %edx,%r11
   0x00007ffff7fcb559 <+281>:	sar    $0x20,%rdx
   0x00007ffff7fcb55d <+285>:	movslq %esi,%r14
   0x00007ffff7fcb560 <+288>:	sar    $0x20,%rsi
   0x00007ffff7fcb564 <+292>:	vmovss (%rbx,%r11,4),%xmm2
   0x00007ffff7fcb56a <+298>:	vmovss (%rbx,%r8,4),%xmm3
   0x00007ffff7fcb570 <+304>:	vinsertps $0x10,(%rbx,%rdx,4),%xmm2,%xmm2
   0x00007ffff7fcb577 <+311>:	vinsertps $0x10,(%rbx,%r10,4),%xmm3,%xmm3
   0x00007ffff7fcb57e <+318>:	vinsertps $0x20,(%rbx,%r14,4),%xmm2,%xmm2
   0x00007ffff7fcb585 <+325>:	vinsertps $0x20,(%rbx,%r9,4),%xmm3,%xmm3
   0x00007ffff7fcb58c <+332>:	vinsertps $0x30,(%rbx,%rsi,4),%xmm2,%xmm2
   0x00007ffff7fcb593 <+339>:	sar    $0x20,%rdi
   0x00007ffff7fcb597 <+343>:	vinsertps $0x30,(%rbx,%rdi,4),%xmm3,%xmm3
   0x00007ffff7fcb59e <+350>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fcb5a4 <+356>:	vbroadcastss (%r12,%r15,4),%ymm3
   0x00007ffff7fcb5aa <+362>:	vdivps %ymm3,%ymm2,%ymm2
   0x00007ffff7fcb5ae <+366>:	vmovss %xmm2,0x0(%rbp,%r8,4)
   0x00007ffff7fcb5b5 <+373>:	vextractps $0x1,%xmm2,0x0(%rbp,%r10,4)
   0x00007ffff7fcb5bd <+381>:	vextractps $0x2,%xmm2,0x0(%rbp,%r9,4)
   0x00007ffff7fcb5c5 <+389>:	vextractps $0x3,%xmm2,0x0(%rbp,%rdi,4)
   0x00007ffff7fcb5cd <+397>:	vextractf128 $0x1,%ymm2,%xmm2
   0x00007ffff7fcb5d3 <+403>:	vmovss %xmm2,0x0(%rbp,%r11,4)
   0x00007ffff7fcb5da <+410>:	vextractps $0x1,%xmm2,0x0(%rbp,%rdx,4)
   0x00007ffff7fcb5e2 <+418>:	vpaddd %ymm1,%ymm0,%ymm0
   0x00007ffff7fcb5e6 <+422>:	vextractps $0x2,%xmm2,0x0(%rbp,%r14,4)
   0x00007ffff7fcb5ee <+430>:	add    $0xffffffffffffffff,%rcx
   0x00007ffff7fcb5f2 <+434>:	vextractps $0x3,%xmm2,0x0(%rbp,%rsi,4)
   0x00007ffff7fcb5fa <+442>:	jne    0x7ffff7fcb530 <gramschmidt_kernel2+240>
   0x00007ffff7fcb600 <+448>:	test   %r13,%r13
   0x00007ffff7fcb603 <+451>:	mov    -0x10(%rsp),%rdx
   0x00007ffff7fcb608 <+456>:	mov    -0x18(%rsp),%rsi
   0x00007ffff7fcb60d <+461>:	mov    -0x24(%rsp),%edi
   0x00007ffff7fcb611 <+465>:	je     0x7ffff7fcb64a <gramschmidt_kernel2+522>
   0x00007ffff7fcb613 <+467>:	mov    %edi,%ecx
   0x00007ffff7fcb615 <+469>:	mov    -0x20(%rsp),%rbp
   0x00007ffff7fcb61a <+474>:	imul   %ebp,%ecx
   0x00007ffff7fcb61d <+477>:	add    -0x8(%rsp),%rax
   0x00007ffff7fcb622 <+482>:	add    %ebp,%ecx
   0x00007ffff7fcb624 <+484>:	movslq %ecx,%rcx
   0x00007ffff7fcb627 <+487>:	imul   %edi,%eax
   0x00007ffff7fcb62a <+490>:	add    %ebp,%eax
   0x00007ffff7fcb62c <+492>:	nopl   0x0(%rax)
   0x00007ffff7fcb630 <+496>:	cltq   
   0x00007ffff7fcb632 <+498>:	vmovss (%rdx,%rax,4),%xmm0
   0x00007ffff7fcb637 <+503>:	vdivss (%r12,%rcx,4),%xmm0,%xmm0
   0x00007ffff7fcb63d <+509>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fcb642 <+514>:	add    %edi,%eax
   0x00007ffff7fcb644 <+516>:	add    $0xffffffffffffffff,%r13
   0x00007ffff7fcb648 <+520>:	jne    0x7ffff7fcb630 <gramschmidt_kernel2+496>
   0x00007ffff7fcb64a <+522>:	pop    %rbx
   0x00007ffff7fcb64b <+523>:	pop    %r12
   0x00007ffff7fcb64d <+525>:	pop    %r13
   0x00007ffff7fcb64f <+527>:	pop    %r14
   0x00007ffff7fcb651 <+529>:	pop    %r15
   0x00007ffff7fcb653 <+531>:	pop    %rbp
   0x00007ffff7fcb654 <+532>:	vzeroupper 
   0x00007ffff7fcb657 <+535>:	ret    
End of assembler dump.

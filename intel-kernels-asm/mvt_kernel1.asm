Dump of assembler code for function mvt_kernel1:
=> 0x00007ffff7fbb0e0 <+0>:	push   %rbp
   0x00007ffff7fbb0e1 <+1>:	push   %r15
   0x00007ffff7fbb0e3 <+3>:	push   %r14
   0x00007ffff7fbb0e5 <+5>:	push   %r13
   0x00007ffff7fbb0e7 <+7>:	push   %r12
   0x00007ffff7fbb0e9 <+9>:	push   %rbx
   0x00007ffff7fbb0ea <+10>:	sub    $0x18,%rsp
   0x00007ffff7fbb0ee <+14>:	mov    0x58(%rdi),%rax
   0x00007ffff7fbb0f2 <+18>:	mov    (%rsi),%rsi
   0x00007ffff7fbb0f5 <+21>:	imul   %rax,%rsi
   0x00007ffff7fbb0f9 <+25>:	add    0x28(%rdi),%rsi
   0x00007ffff7fbb0fd <+29>:	movslq 0x18(%rdi),%rcx
   0x00007ffff7fbb101 <+33>:	add    %rsi,%rax
   0x00007ffff7fbb104 <+36>:	cmp    %rcx,%rax
   0x00007ffff7fbb107 <+39>:	mov    %rcx,%rdx
   0x00007ffff7fbb10a <+42>:	cmovle %rax,%rdx
   0x00007ffff7fbb10e <+46>:	test   %rcx,%rcx
   0x00007ffff7fbb111 <+49>:	cmovs  %rax,%rdx
   0x00007ffff7fbb115 <+53>:	mov    %rcx,%rax
   0x00007ffff7fbb118 <+56>:	mov    %rax,-0x78(%rsp)
   0x00007ffff7fbb11d <+61>:	test   %rcx,%rcx
   0x00007ffff7fbb120 <+64>:	jle    0x7ffff7fbb7c2 <mvt_kernel1+1762>
   0x00007ffff7fbb126 <+70>:	sub    %rsi,%rdx
   0x00007ffff7fbb129 <+73>:	mov    %rdx,%rax
   0x00007ffff7fbb12c <+76>:	test   %rdx,%rdx
   0x00007ffff7fbb12f <+79>:	jle    0x7ffff7fbb7c2 <mvt_kernel1+1762>
   0x00007ffff7fbb135 <+85>:	mov    %rsi,-0x70(%rsp)
   0x00007ffff7fbb13a <+90>:	mov    (%rdi),%rcx
   0x00007ffff7fbb13d <+93>:	mov    %rcx,-0x80(%rsp)
   0x00007ffff7fbb142 <+98>:	mov    0x8(%rdi),%rsi
   0x00007ffff7fbb146 <+102>:	mov    0x10(%rdi),%rdi
   0x00007ffff7fbb14a <+106>:	mov    %rax,%rcx
   0x00007ffff7fbb14d <+109>:	sar    $0x3,%rcx
   0x00007ffff7fbb151 <+113>:	mov    %rax,%r12
   0x00007ffff7fbb154 <+116>:	and    $0xfffffffffffffff8,%r12
   0x00007ffff7fbb158 <+120>:	sub    %r12,%rax
   0x00007ffff7fbb15b <+123>:	mov    %rax,-0x68(%rsp)
   0x00007ffff7fbb160 <+128>:	mov    %rcx,-0x38(%rsp)
   0x00007ffff7fbb165 <+133>:	test   %rcx,%rcx
   0x00007ffff7fbb168 <+136>:	je     0x7ffff7fbb660 <mvt_kernel1+1408>
   0x00007ffff7fbb16e <+142>:	mov    -0x78(%rsp),%r8
   0x00007ffff7fbb173 <+147>:	vmovd  %r8d,%xmm0
   0x00007ffff7fbb178 <+152>:	vpbroadcastd %xmm0,%ymm0
   0x00007ffff7fbb17d <+157>:	lea    -0x1(%r8),%rcx
   0x00007ffff7fbb181 <+161>:	mov    %rcx,-0x48(%rsp)
   0x00007ffff7fbb186 <+166>:	mov    %r8d,%ecx
   0x00007ffff7fbb189 <+169>:	and    $0x7,%ecx
   0x00007ffff7fbb18c <+172>:	mov    %rcx,-0x58(%rsp)
   0x00007ffff7fbb191 <+177>:	sub    %rcx,%r8
   0x00007ffff7fbb194 <+180>:	mov    -0x70(%rsp),%rdx
   0x00007ffff7fbb199 <+185>:	vmovd  %edx,%xmm1
   0x00007ffff7fbb19d <+189>:	vpbroadcastd %xmm1,%ymm1
   0x00007ffff7fbb1a2 <+194>:	movabs $0x7ffff7fba000,%rax
   0x00007ffff7fbb1ac <+204>:	vpaddd (%rax),%ymm1,%ymm1
   0x00007ffff7fbb1b0 <+208>:	vpmulld %ymm1,%ymm0,%ymm0
   0x00007ffff7fbb1b5 <+213>:	vmovd  %xmm0,%eax
   0x00007ffff7fbb1b9 <+217>:	vpextrd $0x1,%xmm0,%ecx
   0x00007ffff7fbb1bf <+223>:	sub    %eax,%ecx
   0x00007ffff7fbb1c1 <+225>:	shl    $0x3,%ecx
   0x00007ffff7fbb1c4 <+228>:	vmovd  %ecx,%xmm1
   0x00007ffff7fbb1c8 <+232>:	vpbroadcastd %xmm1,%ymm1
   0x00007ffff7fbb1cd <+237>:	mov    -0x80(%rsp),%rax
   0x00007ffff7fbb1d2 <+242>:	lea    0x1c(%rax),%rax
   0x00007ffff7fbb1d6 <+246>:	mov    %rax,-0x60(%rsp)
   0x00007ffff7fbb1db <+251>:	xor    %ecx,%ecx
   0x00007ffff7fbb1dd <+253>:	mov    %r12,-0x40(%rsp)
   0x00007ffff7fbb1e2 <+258>:	mov    %r8,-0x50(%rsp)
   0x00007ffff7fbb1e7 <+263>:	nopw   0x0(%rax,%rax,1)
   0x00007ffff7fbb1f0 <+272>:	vmovq  %xmm0,%rax
   0x00007ffff7fbb1f5 <+277>:	movslq %eax,%r15
   0x00007ffff7fbb1f8 <+280>:	mov    %rax,%r10
   0x00007ffff7fbb1fb <+283>:	sar    $0x20,%r10
   0x00007ffff7fbb1ff <+287>:	vpextrq $0x1,%xmm0,%rax
   0x00007ffff7fbb205 <+293>:	movslq %eax,%r11
   0x00007ffff7fbb208 <+296>:	mov    %rax,%r12
   0x00007ffff7fbb20b <+299>:	sar    $0x20,%r12
   0x00007ffff7fbb20f <+303>:	vextracti128 $0x1,%ymm0,%xmm2
   0x00007ffff7fbb215 <+309>:	vmovq  %xmm2,%rax
   0x00007ffff7fbb21a <+314>:	movslq %eax,%r9
   0x00007ffff7fbb21d <+317>:	mov    %rax,%rbx
   0x00007ffff7fbb220 <+320>:	sar    $0x20,%rbx
   0x00007ffff7fbb224 <+324>:	vpextrq $0x1,%xmm2,%rax
   0x00007ffff7fbb22a <+330>:	movslq %eax,%r14
   0x00007ffff7fbb22d <+333>:	sar    $0x20,%rax
   0x00007ffff7fbb231 <+337>:	movslq %edx,%rbp
   0x00007ffff7fbb234 <+340>:	cmpq   $0x7,-0x48(%rsp)
   0x00007ffff7fbb23a <+346>:	mov    %rcx,0x10(%rsp)
   0x00007ffff7fbb23f <+351>:	mov    %rdx,0x8(%rsp)
   0x00007ffff7fbb244 <+356>:	mov    %r15,(%rsp)
   0x00007ffff7fbb248 <+360>:	mov    %r10,-0x8(%rsp)
   0x00007ffff7fbb24d <+365>:	mov    %r11,-0x10(%rsp)
   0x00007ffff7fbb252 <+370>:	mov    %r12,-0x18(%rsp)
   0x00007ffff7fbb257 <+375>:	mov    %r9,-0x20(%rsp)
   0x00007ffff7fbb25c <+380>:	mov    %rbx,-0x28(%rsp)
   0x00007ffff7fbb261 <+385>:	mov    %r14,-0x30(%rsp)
   0x00007ffff7fbb266 <+390>:	jae    0x7ffff7fbb270 <mvt_kernel1+400>
   0x00007ffff7fbb268 <+392>:	xor    %r12d,%r12d
   0x00007ffff7fbb26b <+395>:	jmp    0x7ffff7fbb55d <mvt_kernel1+1149>
   0x00007ffff7fbb270 <+400>:	vmovups (%rsi,%rbp,4),%ymm2
   0x00007ffff7fbb275 <+405>:	mov    %rbx,%rdx
   0x00007ffff7fbb278 <+408>:	mov    -0x60(%rsp),%rbx
   0x00007ffff7fbb27d <+413>:	lea    (%rbx,%rax,4),%r13
   0x00007ffff7fbb281 <+417>:	lea    (%rbx,%r14,4),%r14
   0x00007ffff7fbb285 <+421>:	mov    %r9,%rcx
   0x00007ffff7fbb288 <+424>:	lea    (%rbx,%rdx,4),%r9
   0x00007ffff7fbb28c <+428>:	lea    (%rbx,%rcx,4),%rdx
   0x00007ffff7fbb290 <+432>:	lea    (%rbx,%r12,4),%rcx
   0x00007ffff7fbb294 <+436>:	lea    (%rbx,%r11,4),%r11
   0x00007ffff7fbb298 <+440>:	lea    (%rbx,%r10,4),%r10
   0x00007ffff7fbb29c <+444>:	lea    (%rbx,%r15,4),%r15
   0x00007ffff7fbb2a0 <+448>:	xor    %r12d,%r12d
   0x00007ffff7fbb2a3 <+451>:	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fbb2b0 <+464>:	vmovss -0x1c(%rdx,%r12,4),%xmm3
   0x00007ffff7fbb2b7 <+471>:	vinsertps $0x10,-0x1c(%r9,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb2bf <+479>:	vinsertps $0x20,-0x1c(%r14,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb2c7 <+487>:	vinsertps $0x30,-0x1c(%r13,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb2cf <+495>:	vmovss -0x1c(%r15,%r12,4),%xmm4
   0x00007ffff7fbb2d6 <+502>:	vinsertps $0x10,-0x1c(%r10,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb2de <+510>:	vinsertps $0x20,-0x1c(%r11,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb2e6 <+518>:	vinsertps $0x30,-0x1c(%rcx,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb2ee <+526>:	vinsertf128 $0x1,%xmm3,%ymm4,%ymm3
   0x00007ffff7fbb2f4 <+532>:	vbroadcastss (%rdi,%r12,4),%ymm4
   0x00007ffff7fbb2fa <+538>:	vfmadd213ps %ymm2,%ymm3,%ymm4
   0x00007ffff7fbb2ff <+543>:	vmovups %ymm4,(%rsi,%rbp,4)
   0x00007ffff7fbb304 <+548>:	vmovss -0x18(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb30b <+555>:	vinsertps $0x10,-0x18(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb313 <+563>:	vinsertps $0x20,-0x18(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb31b <+571>:	vinsertps $0x30,-0x18(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb323 <+579>:	vmovss -0x18(%r15,%r12,4),%xmm3
   0x00007ffff7fbb32a <+586>:	vinsertps $0x10,-0x18(%r10,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb332 <+594>:	vinsertps $0x20,-0x18(%r11,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb33a <+602>:	vinsertps $0x30,-0x18(%rcx,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb342 <+610>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fbb348 <+616>:	vbroadcastss 0x4(%rdi,%r12,4),%ymm3
   0x00007ffff7fbb34f <+623>:	vfmadd213ps %ymm4,%ymm2,%ymm3
   0x00007ffff7fbb354 <+628>:	vmovups %ymm3,(%rsi,%rbp,4)
   0x00007ffff7fbb359 <+633>:	vmovss -0x14(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb360 <+640>:	vinsertps $0x10,-0x14(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb368 <+648>:	vinsertps $0x20,-0x14(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb370 <+656>:	vinsertps $0x30,-0x14(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb378 <+664>:	vmovss -0x14(%r15,%r12,4),%xmm4
   0x00007ffff7fbb37f <+671>:	vinsertps $0x10,-0x14(%r10,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb387 <+679>:	vinsertps $0x20,-0x14(%r11,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb38f <+687>:	vinsertps $0x30,-0x14(%rcx,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb397 <+695>:	vinsertf128 $0x1,%xmm2,%ymm4,%ymm2
   0x00007ffff7fbb39d <+701>:	vbroadcastss 0x8(%rdi,%r12,4),%ymm4
   0x00007ffff7fbb3a4 <+708>:	vfmadd213ps %ymm3,%ymm2,%ymm4
   0x00007ffff7fbb3a9 <+713>:	vmovups %ymm4,(%rsi,%rbp,4)
   0x00007ffff7fbb3ae <+718>:	vmovss -0x10(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb3b5 <+725>:	vinsertps $0x10,-0x10(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb3bd <+733>:	vinsertps $0x20,-0x10(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb3c5 <+741>:	vinsertps $0x30,-0x10(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb3cd <+749>:	vmovss -0x10(%r15,%r12,4),%xmm3
   0x00007ffff7fbb3d4 <+756>:	vinsertps $0x10,-0x10(%r10,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb3dc <+764>:	vinsertps $0x20,-0x10(%r11,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb3e4 <+772>:	vinsertps $0x30,-0x10(%rcx,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb3ec <+780>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fbb3f2 <+786>:	vbroadcastss 0xc(%rdi,%r12,4),%ymm3
   0x00007ffff7fbb3f9 <+793>:	vfmadd213ps %ymm4,%ymm2,%ymm3
   0x00007ffff7fbb3fe <+798>:	vmovups %ymm3,(%rsi,%rbp,4)
   0x00007ffff7fbb403 <+803>:	vmovss -0xc(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb40a <+810>:	vinsertps $0x10,-0xc(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb412 <+818>:	vinsertps $0x20,-0xc(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb41a <+826>:	vinsertps $0x30,-0xc(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb422 <+834>:	vmovss -0xc(%r15,%r12,4),%xmm4
   0x00007ffff7fbb429 <+841>:	vinsertps $0x10,-0xc(%r10,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb431 <+849>:	vinsertps $0x20,-0xc(%r11,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb439 <+857>:	vinsertps $0x30,-0xc(%rcx,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb441 <+865>:	vinsertf128 $0x1,%xmm2,%ymm4,%ymm2
   0x00007ffff7fbb447 <+871>:	vbroadcastss 0x10(%rdi,%r12,4),%ymm4
   0x00007ffff7fbb44e <+878>:	vfmadd213ps %ymm3,%ymm2,%ymm4
   0x00007ffff7fbb453 <+883>:	vmovups %ymm4,(%rsi,%rbp,4)
   0x00007ffff7fbb458 <+888>:	vmovss -0x8(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb45f <+895>:	vinsertps $0x10,-0x8(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb467 <+903>:	vinsertps $0x20,-0x8(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb46f <+911>:	vinsertps $0x30,-0x8(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb477 <+919>:	vmovss -0x8(%r15,%r12,4),%xmm3
   0x00007ffff7fbb47e <+926>:	vinsertps $0x10,-0x8(%r10,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb486 <+934>:	vinsertps $0x20,-0x8(%r11,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb48e <+942>:	vinsertps $0x30,-0x8(%rcx,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb496 <+950>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm2
   0x00007ffff7fbb49c <+956>:	vbroadcastss 0x14(%rdi,%r12,4),%ymm3
   0x00007ffff7fbb4a3 <+963>:	vfmadd213ps %ymm4,%ymm2,%ymm3
   0x00007ffff7fbb4a8 <+968>:	vmovups %ymm3,(%rsi,%rbp,4)
   0x00007ffff7fbb4ad <+973>:	vmovss -0x4(%rdx,%r12,4),%xmm2
   0x00007ffff7fbb4b4 <+980>:	vinsertps $0x10,-0x4(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb4bc <+988>:	vinsertps $0x20,-0x4(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb4c4 <+996>:	vinsertps $0x30,-0x4(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb4cc <+1004>:	vmovss -0x4(%r15,%r12,4),%xmm4
   0x00007ffff7fbb4d3 <+1011>:	vinsertps $0x10,-0x4(%r10,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb4db <+1019>:	vinsertps $0x20,-0x4(%r11,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb4e3 <+1027>:	vinsertps $0x30,-0x4(%rcx,%r12,4),%xmm4,%xmm4
   0x00007ffff7fbb4eb <+1035>:	vinsertf128 $0x1,%xmm2,%ymm4,%ymm2
   0x00007ffff7fbb4f1 <+1041>:	vbroadcastss 0x18(%rdi,%r12,4),%ymm4
   0x00007ffff7fbb4f8 <+1048>:	vfmadd213ps %ymm3,%ymm2,%ymm4
   0x00007ffff7fbb4fd <+1053>:	vmovups %ymm4,(%rsi,%rbp,4)
   0x00007ffff7fbb502 <+1058>:	vmovss (%rdx,%r12,4),%xmm2
   0x00007ffff7fbb508 <+1064>:	vinsertps $0x10,(%r9,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb50f <+1071>:	vinsertps $0x20,(%r14,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb516 <+1078>:	vinsertps $0x30,0x0(%r13,%r12,4),%xmm2,%xmm2
   0x00007ffff7fbb51e <+1086>:	vmovss (%r15,%r12,4),%xmm3
   0x00007ffff7fbb524 <+1092>:	vinsertps $0x10,(%r10,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb52b <+1099>:	vinsertps $0x20,(%r11,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb532 <+1106>:	vinsertps $0x30,(%rcx,%r12,4),%xmm3,%xmm3
   0x00007ffff7fbb539 <+1113>:	vinsertf128 $0x1,%xmm2,%ymm3,%ymm3
   0x00007ffff7fbb53f <+1119>:	vbroadcastss 0x1c(%rdi,%r12,4),%ymm2
   0x00007ffff7fbb546 <+1126>:	vfmadd213ps %ymm4,%ymm3,%ymm2
   0x00007ffff7fbb54b <+1131>:	vmovups %ymm2,(%rsi,%rbp,4)
   0x00007ffff7fbb550 <+1136>:	add    $0x8,%r12
   0x00007ffff7fbb554 <+1140>:	cmp    %r12,%r8
   0x00007ffff7fbb557 <+1143>:	jne    0x7ffff7fbb2b0 <mvt_kernel1+464>
   0x00007ffff7fbb55d <+1149>:	mov    -0x58(%rsp),%r8
   0x00007ffff7fbb562 <+1154>:	test   %r8,%r8
   0x00007ffff7fbb565 <+1157>:	je     0x7ffff7fbb635 <mvt_kernel1+1365>
   0x00007ffff7fbb56b <+1163>:	vmovups (%rsi,%rbp,4),%ymm2
   0x00007ffff7fbb570 <+1168>:	lea    (%rdi,%r12,4),%r9
   0x00007ffff7fbb574 <+1172>:	add    %r12,%rax
   0x00007ffff7fbb577 <+1175>:	mov    -0x80(%rsp),%rcx
   0x00007ffff7fbb57c <+1180>:	lea    (%rcx,%rax,4),%r10
   0x00007ffff7fbb580 <+1184>:	mov    -0x30(%rsp),%rax
   0x00007ffff7fbb585 <+1189>:	add    %r12,%rax
   0x00007ffff7fbb588 <+1192>:	lea    (%rcx,%rax,4),%r11
   0x00007ffff7fbb58c <+1196>:	mov    -0x28(%rsp),%rax
   0x00007ffff7fbb591 <+1201>:	add    %r12,%rax
   0x00007ffff7fbb594 <+1204>:	lea    (%rcx,%rax,4),%r14
   0x00007ffff7fbb598 <+1208>:	mov    -0x20(%rsp),%rax
   0x00007ffff7fbb59d <+1213>:	add    %r12,%rax
   0x00007ffff7fbb5a0 <+1216>:	lea    (%rcx,%rax,4),%r15
   0x00007ffff7fbb5a4 <+1220>:	mov    -0x18(%rsp),%rax
   0x00007ffff7fbb5a9 <+1225>:	add    %r12,%rax
   0x00007ffff7fbb5ac <+1228>:	lea    (%rcx,%rax,4),%r13
   0x00007ffff7fbb5b0 <+1232>:	mov    -0x10(%rsp),%rax
   0x00007ffff7fbb5b5 <+1237>:	add    %r12,%rax
   0x00007ffff7fbb5b8 <+1240>:	lea    (%rcx,%rax,4),%rax
   0x00007ffff7fbb5bc <+1244>:	mov    -0x8(%rsp),%rdx
   0x00007ffff7fbb5c1 <+1249>:	add    %r12,%rdx
   0x00007ffff7fbb5c4 <+1252>:	lea    (%rcx,%rdx,4),%rbx
   0x00007ffff7fbb5c8 <+1256>:	mov    (%rsp),%rdx
   0x00007ffff7fbb5cc <+1260>:	add    %r12,%rdx
   0x00007ffff7fbb5cf <+1263>:	lea    (%rcx,%rdx,4),%rcx
   0x00007ffff7fbb5d3 <+1267>:	xor    %edx,%edx
   0x00007ffff7fbb5d5 <+1269>:	data16 nopw %cs:0x0(%rax,%rax,1)
   0x00007ffff7fbb5e0 <+1280>:	vmovss (%r15,%rdx,4),%xmm3
   0x00007ffff7fbb5e6 <+1286>:	vinsertps $0x10,(%r14,%rdx,4),%xmm3,%xmm3
   0x00007ffff7fbb5ed <+1293>:	vinsertps $0x20,(%r11,%rdx,4),%xmm3,%xmm3
   0x00007ffff7fbb5f4 <+1300>:	vinsertps $0x30,(%r10,%rdx,4),%xmm3,%xmm3
   0x00007ffff7fbb5fb <+1307>:	vmovss (%rcx,%rdx,4),%xmm4
   0x00007ffff7fbb600 <+1312>:	vinsertps $0x10,(%rbx,%rdx,4),%xmm4,%xmm4
   0x00007ffff7fbb607 <+1319>:	vinsertps $0x20,(%rax,%rdx,4),%xmm4,%xmm4
   0x00007ffff7fbb60e <+1326>:	vinsertps $0x30,0x0(%r13,%rdx,4),%xmm4,%xmm4
   0x00007ffff7fbb616 <+1334>:	vinsertf128 $0x1,%xmm3,%ymm4,%ymm3
   0x00007ffff7fbb61c <+1340>:	vbroadcastss (%r9,%rdx,4),%ymm4
   0x00007ffff7fbb622 <+1346>:	vfmadd231ps %ymm4,%ymm3,%ymm2
   0x00007ffff7fbb627 <+1351>:	vmovups %ymm2,(%rsi,%rbp,4)
   0x00007ffff7fbb62c <+1356>:	add    $0x1,%rdx
   0x00007ffff7fbb630 <+1360>:	cmp    %rdx,%r8
   0x00007ffff7fbb633 <+1363>:	jne    0x7ffff7fbb5e0 <mvt_kernel1+1280>
   0x00007ffff7fbb635 <+1365>:	mov    0x10(%rsp),%rcx
   0x00007ffff7fbb63a <+1370>:	add    $0x1,%rcx
   0x00007ffff7fbb63e <+1374>:	mov    0x8(%rsp),%rdx
   0x00007ffff7fbb643 <+1379>:	add    $0x8,%rdx
   0x00007ffff7fbb647 <+1383>:	vpaddd %ymm1,%ymm0,%ymm0
   0x00007ffff7fbb64b <+1387>:	cmp    -0x38(%rsp),%rcx
   0x00007ffff7fbb650 <+1392>:	mov    -0x40(%rsp),%r12
   0x00007ffff7fbb655 <+1397>:	mov    -0x50(%rsp),%r8
   0x00007ffff7fbb65a <+1402>:	jne    0x7ffff7fbb1f0 <mvt_kernel1+272>
   0x00007ffff7fbb660 <+1408>:	cmpq   $0x0,-0x68(%rsp)
   0x00007ffff7fbb666 <+1414>:	mov    -0x70(%rsp),%rax
   0x00007ffff7fbb66b <+1419>:	je     0x7ffff7fbb7c2 <mvt_kernel1+1762>
   0x00007ffff7fbb671 <+1425>:	add    %rax,%r12
   0x00007ffff7fbb674 <+1428>:	mov    -0x78(%rsp),%rax
   0x00007ffff7fbb679 <+1433>:	lea    -0x1(%rax),%r9
   0x00007ffff7fbb67d <+1437>:	mov    %eax,%ecx
   0x00007ffff7fbb67f <+1439>:	and    $0x7,%ecx
   0x00007ffff7fbb682 <+1442>:	mov    %rax,%r15
   0x00007ffff7fbb685 <+1445>:	sub    %rcx,%r15
   0x00007ffff7fbb688 <+1448>:	mov    -0x80(%rsp),%rdx
   0x00007ffff7fbb68d <+1453>:	lea    0x1c(%rdx),%r8
   0x00007ffff7fbb691 <+1457>:	mov    %r12d,%r11d
   0x00007ffff7fbb694 <+1460>:	imul   %eax,%r11d
   0x00007ffff7fbb698 <+1464>:	xor    %r14d,%r14d
   0x00007ffff7fbb69b <+1467>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fbb6a0 <+1472>:	movslq %r11d,%r10
   0x00007ffff7fbb6a3 <+1475>:	movslq %r12d,%rax
   0x00007ffff7fbb6a6 <+1478>:	cmp    $0x7,%r9
   0x00007ffff7fbb6aa <+1482>:	jae    0x7ffff7fbb6c0 <mvt_kernel1+1504>
   0x00007ffff7fbb6ac <+1484>:	xor    %ebx,%ebx
   0x00007ffff7fbb6ae <+1486>:	test   %rcx,%rcx
   0x00007ffff7fbb6b1 <+1489>:	jne    0x7ffff7fbb771 <mvt_kernel1+1681>
   0x00007ffff7fbb6b7 <+1495>:	jmp    0x7ffff7fbb7aa <mvt_kernel1+1738>
   0x00007ffff7fbb6bc <+1500>:	nopl   0x0(%rax)
   0x00007ffff7fbb6c0 <+1504>:	lea    (%r8,%r10,4),%rbp
   0x00007ffff7fbb6c4 <+1508>:	vmovss (%rsi,%rax,4),%xmm0
   0x00007ffff7fbb6c9 <+1513>:	xor    %ebx,%ebx
   0x00007ffff7fbb6cb <+1515>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fbb6d0 <+1520>:	vmovss -0x1c(%rbp,%rbx,4),%xmm1
   0x00007ffff7fbb6d6 <+1526>:	vfmadd132ss (%rdi,%rbx,4),%xmm0,%xmm1
   0x00007ffff7fbb6dc <+1532>:	vmovss %xmm1,(%rsi,%rax,4)
   0x00007ffff7fbb6e1 <+1537>:	vmovss -0x18(%rbp,%rbx,4),%xmm0
   0x00007ffff7fbb6e7 <+1543>:	vfmadd132ss 0x4(%rdi,%rbx,4),%xmm1,%xmm0
   0x00007ffff7fbb6ee <+1550>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fbb6f3 <+1555>:	vmovss -0x14(%rbp,%rbx,4),%xmm1
   0x00007ffff7fbb6f9 <+1561>:	vfmadd132ss 0x8(%rdi,%rbx,4),%xmm0,%xmm1
   0x00007ffff7fbb700 <+1568>:	vmovss %xmm1,(%rsi,%rax,4)
   0x00007ffff7fbb705 <+1573>:	vmovss -0x10(%rbp,%rbx,4),%xmm0
   0x00007ffff7fbb70b <+1579>:	vfmadd132ss 0xc(%rdi,%rbx,4),%xmm1,%xmm0
   0x00007ffff7fbb712 <+1586>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fbb717 <+1591>:	vmovss -0xc(%rbp,%rbx,4),%xmm1
   0x00007ffff7fbb71d <+1597>:	vfmadd132ss 0x10(%rdi,%rbx,4),%xmm0,%xmm1
   0x00007ffff7fbb724 <+1604>:	vmovss %xmm1,(%rsi,%rax,4)
   0x00007ffff7fbb729 <+1609>:	vmovss -0x8(%rbp,%rbx,4),%xmm0
   0x00007ffff7fbb72f <+1615>:	vfmadd132ss 0x14(%rdi,%rbx,4),%xmm1,%xmm0
   0x00007ffff7fbb736 <+1622>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fbb73b <+1627>:	vmovss -0x4(%rbp,%rbx,4),%xmm1
   0x00007ffff7fbb741 <+1633>:	vfmadd132ss 0x18(%rdi,%rbx,4),%xmm0,%xmm1
   0x00007ffff7fbb748 <+1640>:	vmovss %xmm1,(%rsi,%rax,4)
   0x00007ffff7fbb74d <+1645>:	vmovss 0x0(%rbp,%rbx,4),%xmm0
   0x00007ffff7fbb753 <+1651>:	vfmadd132ss 0x1c(%rdi,%rbx,4),%xmm1,%xmm0
   0x00007ffff7fbb75a <+1658>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fbb75f <+1663>:	add    $0x8,%rbx
   0x00007ffff7fbb763 <+1667>:	cmp    %rbx,%r15
   0x00007ffff7fbb766 <+1670>:	jne    0x7ffff7fbb6d0 <mvt_kernel1+1520>
   0x00007ffff7fbb76c <+1676>:	test   %rcx,%rcx
   0x00007ffff7fbb76f <+1679>:	je     0x7ffff7fbb7aa <mvt_kernel1+1738>
   0x00007ffff7fbb771 <+1681>:	vmovss (%rsi,%rax,4),%xmm0
   0x00007ffff7fbb776 <+1686>:	lea    (%rdi,%rbx,4),%rbp
   0x00007ffff7fbb77a <+1690>:	add    %rbx,%r10
   0x00007ffff7fbb77d <+1693>:	mov    -0x80(%rsp),%rdx
   0x00007ffff7fbb782 <+1698>:	lea    (%rdx,%r10,4),%rbx
   0x00007ffff7fbb786 <+1702>:	xor    %edx,%edx
   0x00007ffff7fbb788 <+1704>:	nopl   0x0(%rax,%rax,1)
   0x00007ffff7fbb790 <+1712>:	vmovss (%rbx,%rdx,4),%xmm1
   0x00007ffff7fbb795 <+1717>:	vfmadd231ss 0x0(%rbp,%rdx,4),%xmm1,%xmm0
   0x00007ffff7fbb79c <+1724>:	vmovss %xmm0,(%rsi,%rax,4)
   0x00007ffff7fbb7a1 <+1729>:	add    $0x1,%rdx
   0x00007ffff7fbb7a5 <+1733>:	cmp    %rdx,%rcx
   0x00007ffff7fbb7a8 <+1736>:	jne    0x7ffff7fbb790 <mvt_kernel1+1712>
   0x00007ffff7fbb7aa <+1738>:	add    $0x1,%r14
   0x00007ffff7fbb7ae <+1742>:	add    $0x1,%r12
   0x00007ffff7fbb7b2 <+1746>:	add    -0x78(%rsp),%r11d
   0x00007ffff7fbb7b7 <+1751>:	cmp    -0x68(%rsp),%r14
   0x00007ffff7fbb7bc <+1756>:	jne    0x7ffff7fbb6a0 <mvt_kernel1+1472>
   0x00007ffff7fbb7c2 <+1762>:	add    $0x18,%rsp
   0x00007ffff7fbb7c6 <+1766>:	pop    %rbx
   0x00007ffff7fbb7c7 <+1767>:	pop    %r12
   0x00007ffff7fbb7c9 <+1769>:	pop    %r13
   0x00007ffff7fbb7cb <+1771>:	pop    %r14
   0x00007ffff7fbb7cd <+1773>:	pop    %r15
   0x00007ffff7fbb7cf <+1775>:	pop    %rbp
   0x00007ffff7fbb7d0 <+1776>:	vzeroupper 
   0x00007ffff7fbb7d3 <+1779>:	ret    
End of assembler dump.

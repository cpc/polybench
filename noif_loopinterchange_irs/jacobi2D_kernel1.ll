; ModuleID = 'parallel.bc'
source_filename = "parallel_bc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: alwaysinline nofree norecurse nounwind
define void @_pocl_kernel_runJacobi2D_kernel1(float* nocapture readonly %0, float* nocapture %1, i32 %2, { [3 x i64], [3 x i64], [3 x i64], i8*, i32*, i32, i32 }* nocapture readnone %3, i64 %4, i64 %5, i64 %6) local_unnamed_addr #0 !kernel_arg_addr_space !5 !kernel_arg_access_qual !6 !kernel_arg_type !7 !kernel_arg_base_type !8 !kernel_arg_type_qual !9 !kernel_arg_name !10 !pocl_generated !11 {
pregion_for_entry.pregion_for_init.i:
  %mul3.i.i = shl i64 %5, 3
  %mul.i.i = shl i64 %4, 5
  %conv.i = trunc i64 %mul3.i.i to i32
  %mul.i = mul nsw i32 %conv.i, %2
  %add14.i = or i32 %conv.i, 1
  %mul15.i = mul nsw i32 %add14.i, %2
  %sub20.i = add nsw i32 %conv.i, -1
  %mul21.i = mul nsw i32 %sub20.i, %2
  %7 = trunc i64 %5 to i32
  %8 = mul i32 %7, %2
  %9 = shl i32 %8, 3
  %10 = trunc i64 %4 to i32
  %11 = shl i32 %10, 5
  %12 = add i32 %9, %11
  %13 = icmp sgt i32 %12, 2147483616
  %14 = add i32 %9, %11
  %15 = add i32 %14, -1
  %16 = add i32 %14, 30
  %17 = icmp slt i32 %16, %15
  %18 = or i1 %13, %17
  %19 = add i32 %9, %11
  %20 = or i32 %19, 1
  %21 = icmp sgt i32 %20, 2147483616
  %22 = or i1 %18, %21
  %23 = mul i32 %add14.i, %2
  %24 = add nsw i32 %23, %11
  %25 = icmp sgt i32 %24, 2147483616
  %26 = or i1 %22, %25
  %27 = add i32 %conv.i, -1
  %28 = mul i32 %27, %2
  %29 = add nsw i32 %28, %11
  %30 = icmp sgt i32 %29, 2147483616
  %31 = or i1 %26, %30
  br i1 %31, label %pregion_for_entry.entry.i.preheader, label %vector.body

pregion_for_entry.entry.i.preheader:              ; preds = %pregion_for_entry.pregion_for_init.i
  br label %pregion_for_entry.entry.i

vector.body:                                      ; preds = %pregion_for_entry.pregion_for_init.i
  %32 = trunc i64 %mul.i.i to i32
  %33 = add i32 %mul.i, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float, float* %0, i64 %34
  %36 = bitcast float* %35 to <8 x float>*
  %wide.load = load <8 x float>, <8 x float>* %36, align 4, !tbaa !12, !llvm.access.group !16
  %37 = add i32 %33, -1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float, float* %0, i64 %38
  %40 = bitcast float* %39 to <8 x float>*
  %wide.load14 = load <8 x float>, <8 x float>* %40, align 4, !tbaa !12, !llvm.access.group !16
  %41 = fadd <8 x float> %wide.load, %wide.load14
  %42 = or i32 %33, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float* %0, i64 %43
  %45 = bitcast float* %44 to <8 x float>*
  %wide.load15 = load <8 x float>, <8 x float>* %45, align 4, !tbaa !12, !llvm.access.group !16
  %46 = fadd <8 x float> %41, %wide.load15
  %47 = add nsw i32 %mul15.i, %32
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds float, float* %0, i64 %48
  %50 = bitcast float* %49 to <8 x float>*
  %wide.load16 = load <8 x float>, <8 x float>* %50, align 4, !tbaa !12, !llvm.access.group !16
  %51 = fadd <8 x float> %46, %wide.load16
  %52 = add nsw i32 %mul21.i, %32
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds float, float* %0, i64 %53
  %55 = bitcast float* %54 to <8 x float>*
  %wide.load17 = load <8 x float>, <8 x float>* %55, align 4, !tbaa !12, !llvm.access.group !16
  %56 = fadd <8 x float> %51, %wide.load17
  %57 = fmul <8 x float> %56, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %58 = getelementptr inbounds float, float* %1, i64 %34
  %59 = bitcast float* %58 to <8 x float>*
  store <8 x float> %57, <8 x float>* %59, align 4, !tbaa !12, !llvm.access.group !16
  %60 = trunc i64 %mul.i.i to i32
  %61 = or i32 %60, 8
  %62 = add i32 %mul.i, %61
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, float* %0, i64 %63
  %65 = bitcast float* %64 to <8 x float>*
  %wide.load.1 = load <8 x float>, <8 x float>* %65, align 4, !tbaa !12, !llvm.access.group !16
  %66 = add i32 %62, -1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %0, i64 %67
  %69 = bitcast float* %68 to <8 x float>*
  %wide.load14.1 = load <8 x float>, <8 x float>* %69, align 4, !tbaa !12, !llvm.access.group !16
  %70 = fadd <8 x float> %wide.load.1, %wide.load14.1
  %71 = or i32 %62, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds float, float* %0, i64 %72
  %74 = bitcast float* %73 to <8 x float>*
  %wide.load15.1 = load <8 x float>, <8 x float>* %74, align 4, !tbaa !12, !llvm.access.group !16
  %75 = fadd <8 x float> %70, %wide.load15.1
  %76 = add nsw i32 %mul15.i, %61
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds float, float* %0, i64 %77
  %79 = bitcast float* %78 to <8 x float>*
  %wide.load16.1 = load <8 x float>, <8 x float>* %79, align 4, !tbaa !12, !llvm.access.group !16
  %80 = fadd <8 x float> %75, %wide.load16.1
  %81 = add nsw i32 %mul21.i, %61
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds float, float* %0, i64 %82
  %84 = bitcast float* %83 to <8 x float>*
  %wide.load17.1 = load <8 x float>, <8 x float>* %84, align 4, !tbaa !12, !llvm.access.group !16
  %85 = fadd <8 x float> %80, %wide.load17.1
  %86 = fmul <8 x float> %85, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %87 = getelementptr inbounds float, float* %1, i64 %63
  %88 = bitcast float* %87 to <8 x float>*
  store <8 x float> %86, <8 x float>* %88, align 4, !tbaa !12, !llvm.access.group !16
  %89 = trunc i64 %mul.i.i to i32
  %90 = or i32 %89, 16
  %91 = add i32 %mul.i, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float, float* %0, i64 %92
  %94 = bitcast float* %93 to <8 x float>*
  %wide.load.2 = load <8 x float>, <8 x float>* %94, align 4, !tbaa !12, !llvm.access.group !16
  %95 = add i32 %91, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds float, float* %0, i64 %96
  %98 = bitcast float* %97 to <8 x float>*
  %wide.load14.2 = load <8 x float>, <8 x float>* %98, align 4, !tbaa !12, !llvm.access.group !16
  %99 = fadd <8 x float> %wide.load.2, %wide.load14.2
  %100 = or i32 %91, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float, float* %0, i64 %101
  %103 = bitcast float* %102 to <8 x float>*
  %wide.load15.2 = load <8 x float>, <8 x float>* %103, align 4, !tbaa !12, !llvm.access.group !16
  %104 = fadd <8 x float> %99, %wide.load15.2
  %105 = add nsw i32 %mul15.i, %90
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds float, float* %0, i64 %106
  %108 = bitcast float* %107 to <8 x float>*
  %wide.load16.2 = load <8 x float>, <8 x float>* %108, align 4, !tbaa !12, !llvm.access.group !16
  %109 = fadd <8 x float> %104, %wide.load16.2
  %110 = add nsw i32 %mul21.i, %90
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, float* %0, i64 %111
  %113 = bitcast float* %112 to <8 x float>*
  %wide.load17.2 = load <8 x float>, <8 x float>* %113, align 4, !tbaa !12, !llvm.access.group !16
  %114 = fadd <8 x float> %109, %wide.load17.2
  %115 = fmul <8 x float> %114, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %116 = getelementptr inbounds float, float* %1, i64 %92
  %117 = bitcast float* %116 to <8 x float>*
  store <8 x float> %115, <8 x float>* %117, align 4, !tbaa !12, !llvm.access.group !16
  %118 = trunc i64 %mul.i.i to i32
  %119 = or i32 %118, 24
  %120 = add i32 %mul.i, %119
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, float* %0, i64 %121
  %123 = bitcast float* %122 to <8 x float>*
  %wide.load.3 = load <8 x float>, <8 x float>* %123, align 4, !tbaa !12, !llvm.access.group !16
  %124 = add i32 %120, -1
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds float, float* %0, i64 %125
  %127 = bitcast float* %126 to <8 x float>*
  %wide.load14.3 = load <8 x float>, <8 x float>* %127, align 4, !tbaa !12, !llvm.access.group !16
  %128 = fadd <8 x float> %wide.load.3, %wide.load14.3
  %129 = or i32 %120, 1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds float, float* %0, i64 %130
  %132 = bitcast float* %131 to <8 x float>*
  %wide.load15.3 = load <8 x float>, <8 x float>* %132, align 4, !tbaa !12, !llvm.access.group !16
  %133 = fadd <8 x float> %128, %wide.load15.3
  %134 = add nsw i32 %mul15.i, %119
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds float, float* %0, i64 %135
  %137 = bitcast float* %136 to <8 x float>*
  %wide.load16.3 = load <8 x float>, <8 x float>* %137, align 4, !tbaa !12, !llvm.access.group !16
  %138 = fadd <8 x float> %133, %wide.load16.3
  %139 = add nsw i32 %mul21.i, %119
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds float, float* %0, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %wide.load17.3 = load <8 x float>, <8 x float>* %142, align 4, !tbaa !12, !llvm.access.group !16
  %143 = fadd <8 x float> %138, %wide.load17.3
  %144 = fmul <8 x float> %143, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %145 = getelementptr inbounds float, float* %1, i64 %121
  %146 = bitcast float* %145 to <8 x float>*
  store <8 x float> %144, <8 x float>* %146, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i

pregion_for_end.i.loopexit:                       ; preds = %pregion_for_entry.entry.i
  br label %pregion_for_end.i

pregion_for_end.i:                                ; preds = %pregion_for_end.i.loopexit, %vector.body
  %147 = trunc i64 %mul3.i.i to i32
  %conv.i.1 = or i32 %147, 1
  %mul.i.1 = mul nsw i32 %conv.i.1, %2
  %add14.i.1 = add nuw nsw i32 %conv.i.1, 1
  %mul15.i.1 = mul nsw i32 %add14.i.1, %2
  %mul21.i.1 = mul nsw i32 %147, %2
  %148 = mul i32 %add14.i, %2
  %149 = trunc i64 %4 to i32
  %150 = shl i32 %149, 5
  %151 = add nsw i32 %148, %150
  %152 = icmp sgt i32 %151, 2147483616
  %153 = add i32 %148, %150
  %154 = add i32 %153, -1
  %155 = add i32 %153, 30
  %156 = icmp slt i32 %155, %154
  %157 = or i1 %152, %156
  %158 = add i32 %148, %150
  %159 = add i32 %158, 1
  %160 = add i32 %158, 32
  %161 = icmp slt i32 %160, %159
  %162 = or i1 %157, %161
  %163 = or i32 %conv.i, 2
  %164 = mul i32 %163, %2
  %165 = add nsw i32 %164, %150
  %166 = icmp sgt i32 %165, 2147483616
  %167 = or i1 %162, %166
  %168 = trunc i64 %5 to i32
  %169 = mul i32 %168, %2
  %170 = shl i32 %169, 3
  %171 = add nsw i32 %170, %150
  %172 = icmp sgt i32 %171, 2147483616
  %173 = or i1 %167, %172
  br i1 %173, label %pregion_for_entry.entry.i.1.preheader, label %vector.body20

pregion_for_entry.entry.i.1.preheader:            ; preds = %pregion_for_end.i
  br label %pregion_for_entry.entry.i.1

vector.body20:                                    ; preds = %pregion_for_end.i
  %174 = trunc i64 %mul.i.i to i32
  %175 = add i32 %mul.i.1, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float* %0, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %wide.load43 = load <8 x float>, <8 x float>* %178, align 4, !tbaa !12, !llvm.access.group !16
  %179 = add i32 %175, -1
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float, float* %0, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %wide.load44 = load <8 x float>, <8 x float>* %182, align 4, !tbaa !12, !llvm.access.group !16
  %183 = fadd <8 x float> %wide.load43, %wide.load44
  %184 = add i32 %175, 1
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %0, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %wide.load45 = load <8 x float>, <8 x float>* %187, align 4, !tbaa !12, !llvm.access.group !16
  %188 = fadd <8 x float> %183, %wide.load45
  %189 = add nsw i32 %mul15.i.1, %174
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, float* %0, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %wide.load46 = load <8 x float>, <8 x float>* %192, align 4, !tbaa !12, !llvm.access.group !16
  %193 = fadd <8 x float> %188, %wide.load46
  %194 = add nsw i32 %mul21.i.1, %174
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %0, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %wide.load47 = load <8 x float>, <8 x float>* %197, align 4, !tbaa !12, !llvm.access.group !16
  %198 = fadd <8 x float> %193, %wide.load47
  %199 = fmul <8 x float> %198, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %200 = getelementptr inbounds float, float* %1, i64 %176
  %201 = bitcast float* %200 to <8 x float>*
  store <8 x float> %199, <8 x float>* %201, align 4, !tbaa !12, !llvm.access.group !16
  %202 = trunc i64 %mul.i.i to i32
  %203 = or i32 %202, 8
  %204 = add i32 %mul.i.1, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float, float* %0, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %wide.load43.1 = load <8 x float>, <8 x float>* %207, align 4, !tbaa !12, !llvm.access.group !16
  %208 = add i32 %204, -1
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %0, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %wide.load44.1 = load <8 x float>, <8 x float>* %211, align 4, !tbaa !12, !llvm.access.group !16
  %212 = fadd <8 x float> %wide.load43.1, %wide.load44.1
  %213 = add i32 %204, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %0, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %wide.load45.1 = load <8 x float>, <8 x float>* %216, align 4, !tbaa !12, !llvm.access.group !16
  %217 = fadd <8 x float> %212, %wide.load45.1
  %218 = add nsw i32 %mul15.i.1, %203
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %0, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %wide.load46.1 = load <8 x float>, <8 x float>* %221, align 4, !tbaa !12, !llvm.access.group !16
  %222 = fadd <8 x float> %217, %wide.load46.1
  %223 = add nsw i32 %mul21.i.1, %203
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %0, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %wide.load47.1 = load <8 x float>, <8 x float>* %226, align 4, !tbaa !12, !llvm.access.group !16
  %227 = fadd <8 x float> %222, %wide.load47.1
  %228 = fmul <8 x float> %227, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %229 = getelementptr inbounds float, float* %1, i64 %205
  %230 = bitcast float* %229 to <8 x float>*
  store <8 x float> %228, <8 x float>* %230, align 4, !tbaa !12, !llvm.access.group !16
  %231 = trunc i64 %mul.i.i to i32
  %232 = or i32 %231, 16
  %233 = add i32 %mul.i.1, %232
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %0, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %wide.load43.2 = load <8 x float>, <8 x float>* %236, align 4, !tbaa !12, !llvm.access.group !16
  %237 = add i32 %233, -1
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float* %0, i64 %238
  %240 = bitcast float* %239 to <8 x float>*
  %wide.load44.2 = load <8 x float>, <8 x float>* %240, align 4, !tbaa !12, !llvm.access.group !16
  %241 = fadd <8 x float> %wide.load43.2, %wide.load44.2
  %242 = add i32 %233, 1
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %0, i64 %243
  %245 = bitcast float* %244 to <8 x float>*
  %wide.load45.2 = load <8 x float>, <8 x float>* %245, align 4, !tbaa !12, !llvm.access.group !16
  %246 = fadd <8 x float> %241, %wide.load45.2
  %247 = add nsw i32 %mul15.i.1, %232
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float, float* %0, i64 %248
  %250 = bitcast float* %249 to <8 x float>*
  %wide.load46.2 = load <8 x float>, <8 x float>* %250, align 4, !tbaa !12, !llvm.access.group !16
  %251 = fadd <8 x float> %246, %wide.load46.2
  %252 = add nsw i32 %mul21.i.1, %232
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds float, float* %0, i64 %253
  %255 = bitcast float* %254 to <8 x float>*
  %wide.load47.2 = load <8 x float>, <8 x float>* %255, align 4, !tbaa !12, !llvm.access.group !16
  %256 = fadd <8 x float> %251, %wide.load47.2
  %257 = fmul <8 x float> %256, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %258 = getelementptr inbounds float, float* %1, i64 %234
  %259 = bitcast float* %258 to <8 x float>*
  store <8 x float> %257, <8 x float>* %259, align 4, !tbaa !12, !llvm.access.group !16
  %260 = trunc i64 %mul.i.i to i32
  %261 = or i32 %260, 24
  %262 = add i32 %mul.i.1, %261
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds float, float* %0, i64 %263
  %265 = bitcast float* %264 to <8 x float>*
  %wide.load43.3 = load <8 x float>, <8 x float>* %265, align 4, !tbaa !12, !llvm.access.group !16
  %266 = add i32 %262, -1
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds float, float* %0, i64 %267
  %269 = bitcast float* %268 to <8 x float>*
  %wide.load44.3 = load <8 x float>, <8 x float>* %269, align 4, !tbaa !12, !llvm.access.group !16
  %270 = fadd <8 x float> %wide.load43.3, %wide.load44.3
  %271 = add i32 %262, 1
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %0, i64 %272
  %274 = bitcast float* %273 to <8 x float>*
  %wide.load45.3 = load <8 x float>, <8 x float>* %274, align 4, !tbaa !12, !llvm.access.group !16
  %275 = fadd <8 x float> %270, %wide.load45.3
  %276 = add nsw i32 %mul15.i.1, %261
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds float, float* %0, i64 %277
  %279 = bitcast float* %278 to <8 x float>*
  %wide.load46.3 = load <8 x float>, <8 x float>* %279, align 4, !tbaa !12, !llvm.access.group !16
  %280 = fadd <8 x float> %275, %wide.load46.3
  %281 = add nsw i32 %mul21.i.1, %261
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds float, float* %0, i64 %282
  %284 = bitcast float* %283 to <8 x float>*
  %wide.load47.3 = load <8 x float>, <8 x float>* %284, align 4, !tbaa !12, !llvm.access.group !16
  %285 = fadd <8 x float> %280, %wide.load47.3
  %286 = fmul <8 x float> %285, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %287 = getelementptr inbounds float, float* %1, i64 %263
  %288 = bitcast float* %287 to <8 x float>*
  store <8 x float> %286, <8 x float>* %288, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.1

pregion_for_entry.entry.i:                        ; preds = %pregion_for_entry.entry.i, %pregion_for_entry.entry.i.preheader
  %_local_id_x.0 = phi i64 [ %300, %pregion_for_entry.entry.i ], [ 0, %pregion_for_entry.entry.i.preheader ]
  %add1.i.i = add nuw nsw i64 %_local_id_x.0, %mul.i.i
  %conv2.i = trunc i64 %add1.i.i to i32
  %add.i = add i32 %mul.i, %conv2.i
  %idxprom.i = sext i32 %add.i to i64
  %arrayidx.i = getelementptr inbounds float, float* %0, i64 %idxprom.i
  %289 = load float, float* %arrayidx.i, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i = add i32 %add.i, -1
  %idxprom5.i = sext i32 %add4.i to i64
  %arrayidx6.i = getelementptr inbounds float, float* %0, i64 %idxprom5.i
  %290 = load float, float* %arrayidx6.i, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i = fadd float %289, %290
  %add10.i = or i32 %add.i, 1
  %idxprom11.i = sext i32 %add10.i to i64
  %arrayidx12.i = getelementptr inbounds float, float* %0, i64 %idxprom11.i
  %291 = load float, float* %arrayidx12.i, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i = fadd float %add7.i, %291
  %add16.i = add nsw i32 %mul15.i, %conv2.i
  %idxprom17.i = sext i32 %add16.i to i64
  %arrayidx18.i = getelementptr inbounds float, float* %0, i64 %idxprom17.i
  %292 = load float, float* %arrayidx18.i, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i = fadd float %add13.i, %292
  %add22.i = add nsw i32 %mul21.i, %conv2.i
  %idxprom23.i = sext i32 %add22.i to i64
  %arrayidx24.i = getelementptr inbounds float, float* %0, i64 %idxprom23.i
  %293 = load float, float* %arrayidx24.i, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i = fadd float %add19.i, %293
  %mul26.i = fmul float %add25.i, 0x3FC99999A0000000
  %arrayidx30.i = getelementptr inbounds float, float* %1, i64 %idxprom.i
  store float %mul26.i, float* %arrayidx30.i, align 4, !tbaa !12, !llvm.access.group !16
  %294 = or i64 %_local_id_x.0, 1
  %add1.i.i.1237 = add nuw nsw i64 %294, %mul.i.i
  %conv2.i.1238 = trunc i64 %add1.i.i.1237 to i32
  %add.i.1239 = add i32 %mul.i, %conv2.i.1238
  %idxprom.i.1240 = sext i32 %add.i.1239 to i64
  %arrayidx.i.1241 = getelementptr inbounds float, float* %0, i64 %idxprom.i.1240
  %295 = load float, float* %arrayidx.i.1241, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.1242 = add nsw i32 %add.i.1239, -1
  %idxprom5.i.1243 = sext i32 %add4.i.1242 to i64
  %arrayidx6.i.1244 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.1243
  %296 = load float, float* %arrayidx6.i.1244, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.1245 = fadd float %295, %296
  %add10.i.1246 = add i32 %add.i.1239, 1
  %idxprom11.i.1247 = sext i32 %add10.i.1246 to i64
  %arrayidx12.i.1248 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.1247
  %297 = load float, float* %arrayidx12.i.1248, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.1249 = fadd float %add7.i.1245, %297
  %add16.i.1250 = add nsw i32 %mul15.i, %conv2.i.1238
  %idxprom17.i.1251 = sext i32 %add16.i.1250 to i64
  %arrayidx18.i.1252 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.1251
  %298 = load float, float* %arrayidx18.i.1252, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.1253 = fadd float %add13.i.1249, %298
  %add22.i.1254 = add nsw i32 %mul21.i, %conv2.i.1238
  %idxprom23.i.1255 = sext i32 %add22.i.1254 to i64
  %arrayidx24.i.1256 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.1255
  %299 = load float, float* %arrayidx24.i.1256, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.1257 = fadd float %add19.i.1253, %299
  %mul26.i.1258 = fmul float %add25.i.1257, 0x3FC99999A0000000
  %arrayidx30.i.1259 = getelementptr inbounds float, float* %1, i64 %idxprom.i.1240
  store float %mul26.i.1258, float* %arrayidx30.i.1259, align 4, !tbaa !12, !llvm.access.group !16
  %300 = add nuw nsw i64 %_local_id_x.0, 2
  %exitcond.not.1 = icmp eq i64 %300, 32
  br i1 %exitcond.not.1, label %pregion_for_end.i.loopexit, label %pregion_for_entry.entry.i, !llvm.loop !19

pregion_for_entry.entry.i.1:                      ; preds = %pregion_for_entry.entry.i.1, %pregion_for_entry.entry.i.1.preheader
  %_local_id_x.0.1 = phi i64 [ %312, %pregion_for_entry.entry.i.1 ], [ 0, %pregion_for_entry.entry.i.1.preheader ]
  %add1.i.i.1 = add nuw nsw i64 %_local_id_x.0.1, %mul.i.i
  %conv2.i.1 = trunc i64 %add1.i.i.1 to i32
  %add.i.1 = add i32 %mul.i.1, %conv2.i.1
  %idxprom.i.1 = sext i32 %add.i.1 to i64
  %arrayidx.i.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.1
  %301 = load float, float* %arrayidx.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.1 = add i32 %add.i.1, -1
  %idxprom5.i.1 = sext i32 %add4.i.1 to i64
  %arrayidx6.i.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.1
  %302 = load float, float* %arrayidx6.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.1 = fadd float %301, %302
  %add10.i.1 = add i32 %add.i.1, 1
  %idxprom11.i.1 = sext i32 %add10.i.1 to i64
  %arrayidx12.i.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.1
  %303 = load float, float* %arrayidx12.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.1 = fadd float %add7.i.1, %303
  %add16.i.1 = add nsw i32 %mul15.i.1, %conv2.i.1
  %idxprom17.i.1 = sext i32 %add16.i.1 to i64
  %arrayidx18.i.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.1
  %304 = load float, float* %arrayidx18.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.1 = fadd float %add13.i.1, %304
  %add22.i.1 = add nsw i32 %mul21.i.1, %conv2.i.1
  %idxprom23.i.1 = sext i32 %add22.i.1 to i64
  %arrayidx24.i.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.1
  %305 = load float, float* %arrayidx24.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.1 = fadd float %add19.i.1, %305
  %mul26.i.1 = fmul float %add25.i.1, 0x3FC99999A0000000
  %arrayidx30.i.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.1
  store float %mul26.i.1, float* %arrayidx30.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %306 = or i64 %_local_id_x.0.1, 1
  %add1.i.i.1.1 = add nuw nsw i64 %306, %mul.i.i
  %conv2.i.1.1 = trunc i64 %add1.i.i.1.1 to i32
  %add.i.1.1 = add i32 %mul.i.1, %conv2.i.1.1
  %idxprom.i.1.1 = sext i32 %add.i.1.1 to i64
  %arrayidx.i.1.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.1.1
  %307 = load float, float* %arrayidx.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.1.1 = add i32 %add.i.1.1, -1
  %idxprom5.i.1.1 = sext i32 %add4.i.1.1 to i64
  %arrayidx6.i.1.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.1.1
  %308 = load float, float* %arrayidx6.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.1.1 = fadd float %307, %308
  %add10.i.1.1 = add i32 %add.i.1.1, 1
  %idxprom11.i.1.1 = sext i32 %add10.i.1.1 to i64
  %arrayidx12.i.1.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.1.1
  %309 = load float, float* %arrayidx12.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.1.1 = fadd float %add7.i.1.1, %309
  %add16.i.1.1 = add nsw i32 %mul15.i.1, %conv2.i.1.1
  %idxprom17.i.1.1 = sext i32 %add16.i.1.1 to i64
  %arrayidx18.i.1.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.1.1
  %310 = load float, float* %arrayidx18.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.1.1 = fadd float %add13.i.1.1, %310
  %add22.i.1.1 = add nsw i32 %mul21.i.1, %conv2.i.1.1
  %idxprom23.i.1.1 = sext i32 %add22.i.1.1 to i64
  %arrayidx24.i.1.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.1.1
  %311 = load float, float* %arrayidx24.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.1.1 = fadd float %add19.i.1.1, %311
  %mul26.i.1.1 = fmul float %add25.i.1.1, 0x3FC99999A0000000
  %arrayidx30.i.1.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.1.1
  store float %mul26.i.1.1, float* %arrayidx30.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %312 = add nuw nsw i64 %_local_id_x.0.1, 2
  %exitcond.1.not.1 = icmp eq i64 %312, 32
  br i1 %exitcond.1.not.1, label %pregion_for_end.i.1.loopexit, label %pregion_for_entry.entry.i.1, !llvm.loop !22

pregion_for_end.i.1.loopexit:                     ; preds = %pregion_for_entry.entry.i.1
  br label %pregion_for_end.i.1

pregion_for_end.i.1:                              ; preds = %pregion_for_end.i.1.loopexit, %vector.body20
  %313 = trunc i64 %mul3.i.i to i32
  %conv.i.2 = or i32 %313, 2
  %mul.i.2 = mul nsw i32 %conv.i.2, %2
  %add14.i.2 = or i32 %313, 3
  %mul15.i.2 = mul nsw i32 %add14.i.2, %2
  %sub20.i.2 = add nsw i32 %conv.i.2, -1
  %mul21.i.2 = mul nsw i32 %sub20.i.2, %2
  %314 = mul i32 %conv.i.2, %2
  %315 = trunc i64 %4 to i32
  %316 = shl i32 %315, 5
  %317 = add nsw i32 %314, %316
  %318 = icmp sgt i32 %317, 2147483616
  %319 = add i32 %314, %316
  %320 = add i32 %319, -1
  %321 = add i32 %319, 30
  %322 = icmp slt i32 %321, %320
  %323 = or i1 %318, %322
  %324 = add i32 %314, %316
  %325 = or i32 %324, 1
  %326 = icmp sgt i32 %325, 2147483616
  %327 = or i1 %323, %326
  %328 = mul i32 %add14.i.2, %2
  %329 = add nsw i32 %328, %316
  %330 = icmp sgt i32 %329, 2147483616
  %331 = or i1 %327, %330
  %332 = mul i32 %add14.i, %2
  %333 = add nsw i32 %332, %316
  %334 = icmp sgt i32 %333, 2147483616
  %335 = or i1 %331, %334
  br i1 %335, label %pregion_for_entry.entry.i.2.preheader, label %vector.body50

pregion_for_entry.entry.i.2.preheader:            ; preds = %pregion_for_end.i.1
  br label %pregion_for_entry.entry.i.2

vector.body50:                                    ; preds = %pregion_for_end.i.1
  %336 = trunc i64 %mul.i.i to i32
  %337 = add i32 %mul.i.2, %336
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds float, float* %0, i64 %338
  %340 = bitcast float* %339 to <8 x float>*
  %wide.load73 = load <8 x float>, <8 x float>* %340, align 4, !tbaa !12, !llvm.access.group !16
  %341 = add i32 %337, -1
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds float, float* %0, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %wide.load74 = load <8 x float>, <8 x float>* %344, align 4, !tbaa !12, !llvm.access.group !16
  %345 = fadd <8 x float> %wide.load73, %wide.load74
  %346 = or i32 %337, 1
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds float, float* %0, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %wide.load75 = load <8 x float>, <8 x float>* %349, align 4, !tbaa !12, !llvm.access.group !16
  %350 = fadd <8 x float> %345, %wide.load75
  %351 = add nsw i32 %mul15.i.2, %336
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds float, float* %0, i64 %352
  %354 = bitcast float* %353 to <8 x float>*
  %wide.load76 = load <8 x float>, <8 x float>* %354, align 4, !tbaa !12, !llvm.access.group !16
  %355 = fadd <8 x float> %350, %wide.load76
  %356 = add nsw i32 %mul21.i.2, %336
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds float, float* %0, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %wide.load77 = load <8 x float>, <8 x float>* %359, align 4, !tbaa !12, !llvm.access.group !16
  %360 = fadd <8 x float> %355, %wide.load77
  %361 = fmul <8 x float> %360, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %362 = getelementptr inbounds float, float* %1, i64 %338
  %363 = bitcast float* %362 to <8 x float>*
  store <8 x float> %361, <8 x float>* %363, align 4, !tbaa !12, !llvm.access.group !16
  %364 = trunc i64 %mul.i.i to i32
  %365 = or i32 %364, 8
  %366 = add i32 %mul.i.2, %365
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds float, float* %0, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %wide.load73.1 = load <8 x float>, <8 x float>* %369, align 4, !tbaa !12, !llvm.access.group !16
  %370 = add i32 %366, -1
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds float, float* %0, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %wide.load74.1 = load <8 x float>, <8 x float>* %373, align 4, !tbaa !12, !llvm.access.group !16
  %374 = fadd <8 x float> %wide.load73.1, %wide.load74.1
  %375 = or i32 %366, 1
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds float, float* %0, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %wide.load75.1 = load <8 x float>, <8 x float>* %378, align 4, !tbaa !12, !llvm.access.group !16
  %379 = fadd <8 x float> %374, %wide.load75.1
  %380 = add nsw i32 %mul15.i.2, %365
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds float, float* %0, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %wide.load76.1 = load <8 x float>, <8 x float>* %383, align 4, !tbaa !12, !llvm.access.group !16
  %384 = fadd <8 x float> %379, %wide.load76.1
  %385 = add nsw i32 %mul21.i.2, %365
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds float, float* %0, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %wide.load77.1 = load <8 x float>, <8 x float>* %388, align 4, !tbaa !12, !llvm.access.group !16
  %389 = fadd <8 x float> %384, %wide.load77.1
  %390 = fmul <8 x float> %389, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %391 = getelementptr inbounds float, float* %1, i64 %367
  %392 = bitcast float* %391 to <8 x float>*
  store <8 x float> %390, <8 x float>* %392, align 4, !tbaa !12, !llvm.access.group !16
  %393 = trunc i64 %mul.i.i to i32
  %394 = or i32 %393, 16
  %395 = add i32 %mul.i.2, %394
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds float, float* %0, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %wide.load73.2 = load <8 x float>, <8 x float>* %398, align 4, !tbaa !12, !llvm.access.group !16
  %399 = add i32 %395, -1
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds float, float* %0, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %wide.load74.2 = load <8 x float>, <8 x float>* %402, align 4, !tbaa !12, !llvm.access.group !16
  %403 = fadd <8 x float> %wide.load73.2, %wide.load74.2
  %404 = or i32 %395, 1
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds float, float* %0, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %wide.load75.2 = load <8 x float>, <8 x float>* %407, align 4, !tbaa !12, !llvm.access.group !16
  %408 = fadd <8 x float> %403, %wide.load75.2
  %409 = add nsw i32 %mul15.i.2, %394
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds float, float* %0, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %wide.load76.2 = load <8 x float>, <8 x float>* %412, align 4, !tbaa !12, !llvm.access.group !16
  %413 = fadd <8 x float> %408, %wide.load76.2
  %414 = add nsw i32 %mul21.i.2, %394
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds float, float* %0, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %wide.load77.2 = load <8 x float>, <8 x float>* %417, align 4, !tbaa !12, !llvm.access.group !16
  %418 = fadd <8 x float> %413, %wide.load77.2
  %419 = fmul <8 x float> %418, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %420 = getelementptr inbounds float, float* %1, i64 %396
  %421 = bitcast float* %420 to <8 x float>*
  store <8 x float> %419, <8 x float>* %421, align 4, !tbaa !12, !llvm.access.group !16
  %422 = trunc i64 %mul.i.i to i32
  %423 = or i32 %422, 24
  %424 = add i32 %mul.i.2, %423
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds float, float* %0, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %wide.load73.3 = load <8 x float>, <8 x float>* %427, align 4, !tbaa !12, !llvm.access.group !16
  %428 = add i32 %424, -1
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds float, float* %0, i64 %429
  %431 = bitcast float* %430 to <8 x float>*
  %wide.load74.3 = load <8 x float>, <8 x float>* %431, align 4, !tbaa !12, !llvm.access.group !16
  %432 = fadd <8 x float> %wide.load73.3, %wide.load74.3
  %433 = or i32 %424, 1
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float, float* %0, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %wide.load75.3 = load <8 x float>, <8 x float>* %436, align 4, !tbaa !12, !llvm.access.group !16
  %437 = fadd <8 x float> %432, %wide.load75.3
  %438 = add nsw i32 %mul15.i.2, %423
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds float, float* %0, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %wide.load76.3 = load <8 x float>, <8 x float>* %441, align 4, !tbaa !12, !llvm.access.group !16
  %442 = fadd <8 x float> %437, %wide.load76.3
  %443 = add nsw i32 %mul21.i.2, %423
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds float, float* %0, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %wide.load77.3 = load <8 x float>, <8 x float>* %446, align 4, !tbaa !12, !llvm.access.group !16
  %447 = fadd <8 x float> %442, %wide.load77.3
  %448 = fmul <8 x float> %447, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %449 = getelementptr inbounds float, float* %1, i64 %425
  %450 = bitcast float* %449 to <8 x float>*
  store <8 x float> %448, <8 x float>* %450, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.2

pregion_for_entry.entry.i.2:                      ; preds = %pregion_for_entry.entry.i.2, %pregion_for_entry.entry.i.2.preheader
  %_local_id_x.0.2 = phi i64 [ %462, %pregion_for_entry.entry.i.2 ], [ 0, %pregion_for_entry.entry.i.2.preheader ]
  %add1.i.i.2 = add nuw nsw i64 %_local_id_x.0.2, %mul.i.i
  %conv2.i.2 = trunc i64 %add1.i.i.2 to i32
  %add.i.2 = add i32 %mul.i.2, %conv2.i.2
  %idxprom.i.2 = sext i32 %add.i.2 to i64
  %arrayidx.i.2 = getelementptr inbounds float, float* %0, i64 %idxprom.i.2
  %451 = load float, float* %arrayidx.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.2 = add i32 %add.i.2, -1
  %idxprom5.i.2 = sext i32 %add4.i.2 to i64
  %arrayidx6.i.2 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.2
  %452 = load float, float* %arrayidx6.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.2 = fadd float %451, %452
  %add10.i.2 = or i32 %add.i.2, 1
  %idxprom11.i.2 = sext i32 %add10.i.2 to i64
  %arrayidx12.i.2 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.2
  %453 = load float, float* %arrayidx12.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.2 = fadd float %add7.i.2, %453
  %add16.i.2 = add nsw i32 %mul15.i.2, %conv2.i.2
  %idxprom17.i.2 = sext i32 %add16.i.2 to i64
  %arrayidx18.i.2 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.2
  %454 = load float, float* %arrayidx18.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.2 = fadd float %add13.i.2, %454
  %add22.i.2 = add nsw i32 %mul21.i.2, %conv2.i.2
  %idxprom23.i.2 = sext i32 %add22.i.2 to i64
  %arrayidx24.i.2 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.2
  %455 = load float, float* %arrayidx24.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.2 = fadd float %add19.i.2, %455
  %mul26.i.2 = fmul float %add25.i.2, 0x3FC99999A0000000
  %arrayidx30.i.2 = getelementptr inbounds float, float* %1, i64 %idxprom.i.2
  store float %mul26.i.2, float* %arrayidx30.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %456 = or i64 %_local_id_x.0.2, 1
  %add1.i.i.2.1 = add nuw nsw i64 %456, %mul.i.i
  %conv2.i.2.1 = trunc i64 %add1.i.i.2.1 to i32
  %add.i.2.1 = add i32 %mul.i.2, %conv2.i.2.1
  %idxprom.i.2.1 = sext i32 %add.i.2.1 to i64
  %arrayidx.i.2.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.2.1
  %457 = load float, float* %arrayidx.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.2.1 = add nsw i32 %add.i.2.1, -1
  %idxprom5.i.2.1 = sext i32 %add4.i.2.1 to i64
  %arrayidx6.i.2.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.2.1
  %458 = load float, float* %arrayidx6.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.2.1 = fadd float %457, %458
  %add10.i.2.1 = add i32 %add.i.2.1, 1
  %idxprom11.i.2.1 = sext i32 %add10.i.2.1 to i64
  %arrayidx12.i.2.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.2.1
  %459 = load float, float* %arrayidx12.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.2.1 = fadd float %add7.i.2.1, %459
  %add16.i.2.1 = add nsw i32 %mul15.i.2, %conv2.i.2.1
  %idxprom17.i.2.1 = sext i32 %add16.i.2.1 to i64
  %arrayidx18.i.2.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.2.1
  %460 = load float, float* %arrayidx18.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.2.1 = fadd float %add13.i.2.1, %460
  %add22.i.2.1 = add nsw i32 %mul21.i.2, %conv2.i.2.1
  %idxprom23.i.2.1 = sext i32 %add22.i.2.1 to i64
  %arrayidx24.i.2.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.2.1
  %461 = load float, float* %arrayidx24.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.2.1 = fadd float %add19.i.2.1, %461
  %mul26.i.2.1 = fmul float %add25.i.2.1, 0x3FC99999A0000000
  %arrayidx30.i.2.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.2.1
  store float %mul26.i.2.1, float* %arrayidx30.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %462 = add nuw nsw i64 %_local_id_x.0.2, 2
  %exitcond.2.not.1 = icmp eq i64 %462, 32
  br i1 %exitcond.2.not.1, label %pregion_for_end.i.2.loopexit, label %pregion_for_entry.entry.i.2, !llvm.loop !23

pregion_for_end.i.2.loopexit:                     ; preds = %pregion_for_entry.entry.i.2
  br label %pregion_for_end.i.2

pregion_for_end.i.2:                              ; preds = %pregion_for_end.i.2.loopexit, %vector.body50
  %463 = trunc i64 %mul3.i.i to i32
  %conv.i.3 = or i32 %463, 3
  %mul.i.3 = mul nsw i32 %conv.i.3, %2
  %add14.i.3 = add nuw nsw i32 %conv.i.3, 1
  %mul15.i.3 = mul nsw i32 %add14.i.3, %2
  %sub20.i.3 = add nsw i32 %conv.i.3, -1
  %mul21.i.3 = mul nsw i32 %sub20.i.3, %2
  %464 = mul i32 %add14.i.2, %2
  %465 = trunc i64 %4 to i32
  %466 = shl i32 %465, 5
  %467 = add nsw i32 %464, %466
  %468 = icmp sgt i32 %467, 2147483616
  %469 = add i32 %464, %466
  %470 = add i32 %469, -1
  %471 = add i32 %469, 30
  %472 = icmp slt i32 %471, %470
  %473 = or i1 %468, %472
  %474 = add i32 %464, %466
  %475 = add i32 %474, 1
  %476 = add i32 %474, 32
  %477 = icmp slt i32 %476, %475
  %478 = or i1 %473, %477
  %479 = or i32 %conv.i, 4
  %480 = mul i32 %479, %2
  %481 = add nsw i32 %480, %466
  %482 = icmp sgt i32 %481, 2147483616
  %483 = or i1 %478, %482
  %484 = mul i32 %conv.i.2, %2
  %485 = add nsw i32 %484, %466
  %486 = icmp sgt i32 %485, 2147483616
  %487 = or i1 %483, %486
  br i1 %487, label %pregion_for_entry.entry.i.3.preheader, label %vector.body80

pregion_for_entry.entry.i.3.preheader:            ; preds = %pregion_for_end.i.2
  br label %pregion_for_entry.entry.i.3

vector.body80:                                    ; preds = %pregion_for_end.i.2
  %488 = trunc i64 %mul.i.i to i32
  %489 = add i32 %mul.i.3, %488
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds float, float* %0, i64 %490
  %492 = bitcast float* %491 to <8 x float>*
  %wide.load103 = load <8 x float>, <8 x float>* %492, align 4, !tbaa !12, !llvm.access.group !16
  %493 = add i32 %489, -1
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds float, float* %0, i64 %494
  %496 = bitcast float* %495 to <8 x float>*
  %wide.load104 = load <8 x float>, <8 x float>* %496, align 4, !tbaa !12, !llvm.access.group !16
  %497 = fadd <8 x float> %wide.load103, %wide.load104
  %498 = add i32 %489, 1
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds float, float* %0, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %wide.load105 = load <8 x float>, <8 x float>* %501, align 4, !tbaa !12, !llvm.access.group !16
  %502 = fadd <8 x float> %497, %wide.load105
  %503 = add nsw i32 %mul15.i.3, %488
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds float, float* %0, i64 %504
  %506 = bitcast float* %505 to <8 x float>*
  %wide.load106 = load <8 x float>, <8 x float>* %506, align 4, !tbaa !12, !llvm.access.group !16
  %507 = fadd <8 x float> %502, %wide.load106
  %508 = add nsw i32 %mul21.i.3, %488
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds float, float* %0, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %wide.load107 = load <8 x float>, <8 x float>* %511, align 4, !tbaa !12, !llvm.access.group !16
  %512 = fadd <8 x float> %507, %wide.load107
  %513 = fmul <8 x float> %512, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %514 = getelementptr inbounds float, float* %1, i64 %490
  %515 = bitcast float* %514 to <8 x float>*
  store <8 x float> %513, <8 x float>* %515, align 4, !tbaa !12, !llvm.access.group !16
  %516 = trunc i64 %mul.i.i to i32
  %517 = or i32 %516, 8
  %518 = add i32 %mul.i.3, %517
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds float, float* %0, i64 %519
  %521 = bitcast float* %520 to <8 x float>*
  %wide.load103.1 = load <8 x float>, <8 x float>* %521, align 4, !tbaa !12, !llvm.access.group !16
  %522 = add i32 %518, -1
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds float, float* %0, i64 %523
  %525 = bitcast float* %524 to <8 x float>*
  %wide.load104.1 = load <8 x float>, <8 x float>* %525, align 4, !tbaa !12, !llvm.access.group !16
  %526 = fadd <8 x float> %wide.load103.1, %wide.load104.1
  %527 = add i32 %518, 1
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds float, float* %0, i64 %528
  %530 = bitcast float* %529 to <8 x float>*
  %wide.load105.1 = load <8 x float>, <8 x float>* %530, align 4, !tbaa !12, !llvm.access.group !16
  %531 = fadd <8 x float> %526, %wide.load105.1
  %532 = add nsw i32 %mul15.i.3, %517
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds float, float* %0, i64 %533
  %535 = bitcast float* %534 to <8 x float>*
  %wide.load106.1 = load <8 x float>, <8 x float>* %535, align 4, !tbaa !12, !llvm.access.group !16
  %536 = fadd <8 x float> %531, %wide.load106.1
  %537 = add nsw i32 %mul21.i.3, %517
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds float, float* %0, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %wide.load107.1 = load <8 x float>, <8 x float>* %540, align 4, !tbaa !12, !llvm.access.group !16
  %541 = fadd <8 x float> %536, %wide.load107.1
  %542 = fmul <8 x float> %541, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %543 = getelementptr inbounds float, float* %1, i64 %519
  %544 = bitcast float* %543 to <8 x float>*
  store <8 x float> %542, <8 x float>* %544, align 4, !tbaa !12, !llvm.access.group !16
  %545 = trunc i64 %mul.i.i to i32
  %546 = or i32 %545, 16
  %547 = add i32 %mul.i.3, %546
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds float, float* %0, i64 %548
  %550 = bitcast float* %549 to <8 x float>*
  %wide.load103.2 = load <8 x float>, <8 x float>* %550, align 4, !tbaa !12, !llvm.access.group !16
  %551 = add i32 %547, -1
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds float, float* %0, i64 %552
  %554 = bitcast float* %553 to <8 x float>*
  %wide.load104.2 = load <8 x float>, <8 x float>* %554, align 4, !tbaa !12, !llvm.access.group !16
  %555 = fadd <8 x float> %wide.load103.2, %wide.load104.2
  %556 = add i32 %547, 1
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds float, float* %0, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %wide.load105.2 = load <8 x float>, <8 x float>* %559, align 4, !tbaa !12, !llvm.access.group !16
  %560 = fadd <8 x float> %555, %wide.load105.2
  %561 = add nsw i32 %mul15.i.3, %546
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds float, float* %0, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %wide.load106.2 = load <8 x float>, <8 x float>* %564, align 4, !tbaa !12, !llvm.access.group !16
  %565 = fadd <8 x float> %560, %wide.load106.2
  %566 = add nsw i32 %mul21.i.3, %546
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds float, float* %0, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %wide.load107.2 = load <8 x float>, <8 x float>* %569, align 4, !tbaa !12, !llvm.access.group !16
  %570 = fadd <8 x float> %565, %wide.load107.2
  %571 = fmul <8 x float> %570, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %572 = getelementptr inbounds float, float* %1, i64 %548
  %573 = bitcast float* %572 to <8 x float>*
  store <8 x float> %571, <8 x float>* %573, align 4, !tbaa !12, !llvm.access.group !16
  %574 = trunc i64 %mul.i.i to i32
  %575 = or i32 %574, 24
  %576 = add i32 %mul.i.3, %575
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds float, float* %0, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %wide.load103.3 = load <8 x float>, <8 x float>* %579, align 4, !tbaa !12, !llvm.access.group !16
  %580 = add i32 %576, -1
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds float, float* %0, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %wide.load104.3 = load <8 x float>, <8 x float>* %583, align 4, !tbaa !12, !llvm.access.group !16
  %584 = fadd <8 x float> %wide.load103.3, %wide.load104.3
  %585 = add i32 %576, 1
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds float, float* %0, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %wide.load105.3 = load <8 x float>, <8 x float>* %588, align 4, !tbaa !12, !llvm.access.group !16
  %589 = fadd <8 x float> %584, %wide.load105.3
  %590 = add nsw i32 %mul15.i.3, %575
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds float, float* %0, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %wide.load106.3 = load <8 x float>, <8 x float>* %593, align 4, !tbaa !12, !llvm.access.group !16
  %594 = fadd <8 x float> %589, %wide.load106.3
  %595 = add nsw i32 %mul21.i.3, %575
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds float, float* %0, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %wide.load107.3 = load <8 x float>, <8 x float>* %598, align 4, !tbaa !12, !llvm.access.group !16
  %599 = fadd <8 x float> %594, %wide.load107.3
  %600 = fmul <8 x float> %599, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %601 = getelementptr inbounds float, float* %1, i64 %577
  %602 = bitcast float* %601 to <8 x float>*
  store <8 x float> %600, <8 x float>* %602, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.3

pregion_for_entry.entry.i.3:                      ; preds = %pregion_for_entry.entry.i.3, %pregion_for_entry.entry.i.3.preheader
  %_local_id_x.0.3 = phi i64 [ %614, %pregion_for_entry.entry.i.3 ], [ 0, %pregion_for_entry.entry.i.3.preheader ]
  %add1.i.i.3 = add nuw nsw i64 %_local_id_x.0.3, %mul.i.i
  %conv2.i.3 = trunc i64 %add1.i.i.3 to i32
  %add.i.3 = add i32 %mul.i.3, %conv2.i.3
  %idxprom.i.3 = sext i32 %add.i.3 to i64
  %arrayidx.i.3 = getelementptr inbounds float, float* %0, i64 %idxprom.i.3
  %603 = load float, float* %arrayidx.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.3 = add i32 %add.i.3, -1
  %idxprom5.i.3 = sext i32 %add4.i.3 to i64
  %arrayidx6.i.3 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.3
  %604 = load float, float* %arrayidx6.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.3 = fadd float %603, %604
  %add10.i.3 = add i32 %add.i.3, 1
  %idxprom11.i.3 = sext i32 %add10.i.3 to i64
  %arrayidx12.i.3 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.3
  %605 = load float, float* %arrayidx12.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.3 = fadd float %add7.i.3, %605
  %add16.i.3 = add nsw i32 %mul15.i.3, %conv2.i.3
  %idxprom17.i.3 = sext i32 %add16.i.3 to i64
  %arrayidx18.i.3 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.3
  %606 = load float, float* %arrayidx18.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.3 = fadd float %add13.i.3, %606
  %add22.i.3 = add nsw i32 %mul21.i.3, %conv2.i.3
  %idxprom23.i.3 = sext i32 %add22.i.3 to i64
  %arrayidx24.i.3 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.3
  %607 = load float, float* %arrayidx24.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.3 = fadd float %add19.i.3, %607
  %mul26.i.3 = fmul float %add25.i.3, 0x3FC99999A0000000
  %arrayidx30.i.3 = getelementptr inbounds float, float* %1, i64 %idxprom.i.3
  store float %mul26.i.3, float* %arrayidx30.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %608 = or i64 %_local_id_x.0.3, 1
  %add1.i.i.3.1 = add nuw nsw i64 %608, %mul.i.i
  %conv2.i.3.1 = trunc i64 %add1.i.i.3.1 to i32
  %add.i.3.1 = add i32 %mul.i.3, %conv2.i.3.1
  %idxprom.i.3.1 = sext i32 %add.i.3.1 to i64
  %arrayidx.i.3.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.3.1
  %609 = load float, float* %arrayidx.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.3.1 = add i32 %add.i.3.1, -1
  %idxprom5.i.3.1 = sext i32 %add4.i.3.1 to i64
  %arrayidx6.i.3.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.3.1
  %610 = load float, float* %arrayidx6.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.3.1 = fadd float %609, %610
  %add10.i.3.1 = add i32 %add.i.3.1, 1
  %idxprom11.i.3.1 = sext i32 %add10.i.3.1 to i64
  %arrayidx12.i.3.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.3.1
  %611 = load float, float* %arrayidx12.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.3.1 = fadd float %add7.i.3.1, %611
  %add16.i.3.1 = add nsw i32 %mul15.i.3, %conv2.i.3.1
  %idxprom17.i.3.1 = sext i32 %add16.i.3.1 to i64
  %arrayidx18.i.3.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.3.1
  %612 = load float, float* %arrayidx18.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.3.1 = fadd float %add13.i.3.1, %612
  %add22.i.3.1 = add nsw i32 %mul21.i.3, %conv2.i.3.1
  %idxprom23.i.3.1 = sext i32 %add22.i.3.1 to i64
  %arrayidx24.i.3.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.3.1
  %613 = load float, float* %arrayidx24.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.3.1 = fadd float %add19.i.3.1, %613
  %mul26.i.3.1 = fmul float %add25.i.3.1, 0x3FC99999A0000000
  %arrayidx30.i.3.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.3.1
  store float %mul26.i.3.1, float* %arrayidx30.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %614 = add nuw nsw i64 %_local_id_x.0.3, 2
  %exitcond.3.not.1 = icmp eq i64 %614, 32
  br i1 %exitcond.3.not.1, label %pregion_for_end.i.3.loopexit, label %pregion_for_entry.entry.i.3, !llvm.loop !24

pregion_for_end.i.3.loopexit:                     ; preds = %pregion_for_entry.entry.i.3
  br label %pregion_for_end.i.3

pregion_for_end.i.3:                              ; preds = %pregion_for_end.i.3.loopexit, %vector.body80
  %615 = trunc i64 %mul3.i.i to i32
  %conv.i.4 = or i32 %615, 4
  %mul.i.4 = mul nsw i32 %conv.i.4, %2
  %add14.i.4 = or i32 %615, 5
  %mul15.i.4 = mul nsw i32 %add14.i.4, %2
  %sub20.i.4 = add nsw i32 %conv.i.4, -1
  %mul21.i.4 = mul nsw i32 %sub20.i.4, %2
  %616 = mul i32 %conv.i.4, %2
  %617 = trunc i64 %4 to i32
  %618 = shl i32 %617, 5
  %619 = add nsw i32 %616, %618
  %620 = icmp sgt i32 %619, 2147483616
  %621 = add i32 %616, %618
  %622 = add i32 %621, -1
  %623 = add i32 %621, 30
  %624 = icmp slt i32 %623, %622
  %625 = or i1 %620, %624
  %626 = add i32 %616, %618
  %627 = or i32 %626, 1
  %628 = icmp sgt i32 %627, 2147483616
  %629 = or i1 %625, %628
  %630 = mul i32 %add14.i.4, %2
  %631 = add nsw i32 %630, %618
  %632 = icmp sgt i32 %631, 2147483616
  %633 = or i1 %629, %632
  %634 = mul i32 %add14.i.2, %2
  %635 = add nsw i32 %634, %618
  %636 = icmp sgt i32 %635, 2147483616
  %637 = or i1 %633, %636
  br i1 %637, label %pregion_for_entry.entry.i.4.preheader, label %vector.body110

pregion_for_entry.entry.i.4.preheader:            ; preds = %pregion_for_end.i.3
  br label %pregion_for_entry.entry.i.4

vector.body110:                                   ; preds = %pregion_for_end.i.3
  %638 = trunc i64 %mul.i.i to i32
  %639 = add i32 %mul.i.4, %638
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds float, float* %0, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %wide.load133 = load <8 x float>, <8 x float>* %642, align 4, !tbaa !12, !llvm.access.group !16
  %643 = add i32 %639, -1
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds float, float* %0, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %wide.load134 = load <8 x float>, <8 x float>* %646, align 4, !tbaa !12, !llvm.access.group !16
  %647 = fadd <8 x float> %wide.load133, %wide.load134
  %648 = or i32 %639, 1
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds float, float* %0, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %wide.load135 = load <8 x float>, <8 x float>* %651, align 4, !tbaa !12, !llvm.access.group !16
  %652 = fadd <8 x float> %647, %wide.load135
  %653 = add nsw i32 %mul15.i.4, %638
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds float, float* %0, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %wide.load136 = load <8 x float>, <8 x float>* %656, align 4, !tbaa !12, !llvm.access.group !16
  %657 = fadd <8 x float> %652, %wide.load136
  %658 = add nsw i32 %mul21.i.4, %638
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds float, float* %0, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %wide.load137 = load <8 x float>, <8 x float>* %661, align 4, !tbaa !12, !llvm.access.group !16
  %662 = fadd <8 x float> %657, %wide.load137
  %663 = fmul <8 x float> %662, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %664 = getelementptr inbounds float, float* %1, i64 %640
  %665 = bitcast float* %664 to <8 x float>*
  store <8 x float> %663, <8 x float>* %665, align 4, !tbaa !12, !llvm.access.group !16
  %666 = trunc i64 %mul.i.i to i32
  %667 = or i32 %666, 8
  %668 = add i32 %mul.i.4, %667
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds float, float* %0, i64 %669
  %671 = bitcast float* %670 to <8 x float>*
  %wide.load133.1 = load <8 x float>, <8 x float>* %671, align 4, !tbaa !12, !llvm.access.group !16
  %672 = add i32 %668, -1
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds float, float* %0, i64 %673
  %675 = bitcast float* %674 to <8 x float>*
  %wide.load134.1 = load <8 x float>, <8 x float>* %675, align 4, !tbaa !12, !llvm.access.group !16
  %676 = fadd <8 x float> %wide.load133.1, %wide.load134.1
  %677 = or i32 %668, 1
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds float, float* %0, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %wide.load135.1 = load <8 x float>, <8 x float>* %680, align 4, !tbaa !12, !llvm.access.group !16
  %681 = fadd <8 x float> %676, %wide.load135.1
  %682 = add nsw i32 %mul15.i.4, %667
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds float, float* %0, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %wide.load136.1 = load <8 x float>, <8 x float>* %685, align 4, !tbaa !12, !llvm.access.group !16
  %686 = fadd <8 x float> %681, %wide.load136.1
  %687 = add nsw i32 %mul21.i.4, %667
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float, float* %0, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %wide.load137.1 = load <8 x float>, <8 x float>* %690, align 4, !tbaa !12, !llvm.access.group !16
  %691 = fadd <8 x float> %686, %wide.load137.1
  %692 = fmul <8 x float> %691, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %693 = getelementptr inbounds float, float* %1, i64 %669
  %694 = bitcast float* %693 to <8 x float>*
  store <8 x float> %692, <8 x float>* %694, align 4, !tbaa !12, !llvm.access.group !16
  %695 = trunc i64 %mul.i.i to i32
  %696 = or i32 %695, 16
  %697 = add i32 %mul.i.4, %696
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %0, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %wide.load133.2 = load <8 x float>, <8 x float>* %700, align 4, !tbaa !12, !llvm.access.group !16
  %701 = add i32 %697, -1
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds float, float* %0, i64 %702
  %704 = bitcast float* %703 to <8 x float>*
  %wide.load134.2 = load <8 x float>, <8 x float>* %704, align 4, !tbaa !12, !llvm.access.group !16
  %705 = fadd <8 x float> %wide.load133.2, %wide.load134.2
  %706 = or i32 %697, 1
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds float, float* %0, i64 %707
  %709 = bitcast float* %708 to <8 x float>*
  %wide.load135.2 = load <8 x float>, <8 x float>* %709, align 4, !tbaa !12, !llvm.access.group !16
  %710 = fadd <8 x float> %705, %wide.load135.2
  %711 = add nsw i32 %mul15.i.4, %696
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds float, float* %0, i64 %712
  %714 = bitcast float* %713 to <8 x float>*
  %wide.load136.2 = load <8 x float>, <8 x float>* %714, align 4, !tbaa !12, !llvm.access.group !16
  %715 = fadd <8 x float> %710, %wide.load136.2
  %716 = add nsw i32 %mul21.i.4, %696
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds float, float* %0, i64 %717
  %719 = bitcast float* %718 to <8 x float>*
  %wide.load137.2 = load <8 x float>, <8 x float>* %719, align 4, !tbaa !12, !llvm.access.group !16
  %720 = fadd <8 x float> %715, %wide.load137.2
  %721 = fmul <8 x float> %720, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %722 = getelementptr inbounds float, float* %1, i64 %698
  %723 = bitcast float* %722 to <8 x float>*
  store <8 x float> %721, <8 x float>* %723, align 4, !tbaa !12, !llvm.access.group !16
  %724 = trunc i64 %mul.i.i to i32
  %725 = or i32 %724, 24
  %726 = add i32 %mul.i.4, %725
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds float, float* %0, i64 %727
  %729 = bitcast float* %728 to <8 x float>*
  %wide.load133.3 = load <8 x float>, <8 x float>* %729, align 4, !tbaa !12, !llvm.access.group !16
  %730 = add i32 %726, -1
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds float, float* %0, i64 %731
  %733 = bitcast float* %732 to <8 x float>*
  %wide.load134.3 = load <8 x float>, <8 x float>* %733, align 4, !tbaa !12, !llvm.access.group !16
  %734 = fadd <8 x float> %wide.load133.3, %wide.load134.3
  %735 = or i32 %726, 1
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds float, float* %0, i64 %736
  %738 = bitcast float* %737 to <8 x float>*
  %wide.load135.3 = load <8 x float>, <8 x float>* %738, align 4, !tbaa !12, !llvm.access.group !16
  %739 = fadd <8 x float> %734, %wide.load135.3
  %740 = add nsw i32 %mul15.i.4, %725
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds float, float* %0, i64 %741
  %743 = bitcast float* %742 to <8 x float>*
  %wide.load136.3 = load <8 x float>, <8 x float>* %743, align 4, !tbaa !12, !llvm.access.group !16
  %744 = fadd <8 x float> %739, %wide.load136.3
  %745 = add nsw i32 %mul21.i.4, %725
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds float, float* %0, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %wide.load137.3 = load <8 x float>, <8 x float>* %748, align 4, !tbaa !12, !llvm.access.group !16
  %749 = fadd <8 x float> %744, %wide.load137.3
  %750 = fmul <8 x float> %749, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %751 = getelementptr inbounds float, float* %1, i64 %727
  %752 = bitcast float* %751 to <8 x float>*
  store <8 x float> %750, <8 x float>* %752, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.4

pregion_for_entry.entry.i.4:                      ; preds = %pregion_for_entry.entry.i.4, %pregion_for_entry.entry.i.4.preheader
  %_local_id_x.0.4 = phi i64 [ %764, %pregion_for_entry.entry.i.4 ], [ 0, %pregion_for_entry.entry.i.4.preheader ]
  %add1.i.i.4 = add nuw nsw i64 %_local_id_x.0.4, %mul.i.i
  %conv2.i.4 = trunc i64 %add1.i.i.4 to i32
  %add.i.4 = add i32 %mul.i.4, %conv2.i.4
  %idxprom.i.4 = sext i32 %add.i.4 to i64
  %arrayidx.i.4 = getelementptr inbounds float, float* %0, i64 %idxprom.i.4
  %753 = load float, float* %arrayidx.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.4 = add i32 %add.i.4, -1
  %idxprom5.i.4 = sext i32 %add4.i.4 to i64
  %arrayidx6.i.4 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.4
  %754 = load float, float* %arrayidx6.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.4 = fadd float %753, %754
  %add10.i.4 = or i32 %add.i.4, 1
  %idxprom11.i.4 = sext i32 %add10.i.4 to i64
  %arrayidx12.i.4 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.4
  %755 = load float, float* %arrayidx12.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.4 = fadd float %add7.i.4, %755
  %add16.i.4 = add nsw i32 %mul15.i.4, %conv2.i.4
  %idxprom17.i.4 = sext i32 %add16.i.4 to i64
  %arrayidx18.i.4 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.4
  %756 = load float, float* %arrayidx18.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.4 = fadd float %add13.i.4, %756
  %add22.i.4 = add nsw i32 %mul21.i.4, %conv2.i.4
  %idxprom23.i.4 = sext i32 %add22.i.4 to i64
  %arrayidx24.i.4 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.4
  %757 = load float, float* %arrayidx24.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.4 = fadd float %add19.i.4, %757
  %mul26.i.4 = fmul float %add25.i.4, 0x3FC99999A0000000
  %arrayidx30.i.4 = getelementptr inbounds float, float* %1, i64 %idxprom.i.4
  store float %mul26.i.4, float* %arrayidx30.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %758 = or i64 %_local_id_x.0.4, 1
  %add1.i.i.4.1 = add nuw nsw i64 %758, %mul.i.i
  %conv2.i.4.1 = trunc i64 %add1.i.i.4.1 to i32
  %add.i.4.1 = add i32 %mul.i.4, %conv2.i.4.1
  %idxprom.i.4.1 = sext i32 %add.i.4.1 to i64
  %arrayidx.i.4.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.4.1
  %759 = load float, float* %arrayidx.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.4.1 = add nsw i32 %add.i.4.1, -1
  %idxprom5.i.4.1 = sext i32 %add4.i.4.1 to i64
  %arrayidx6.i.4.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.4.1
  %760 = load float, float* %arrayidx6.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.4.1 = fadd float %759, %760
  %add10.i.4.1 = add i32 %add.i.4.1, 1
  %idxprom11.i.4.1 = sext i32 %add10.i.4.1 to i64
  %arrayidx12.i.4.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.4.1
  %761 = load float, float* %arrayidx12.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.4.1 = fadd float %add7.i.4.1, %761
  %add16.i.4.1 = add nsw i32 %mul15.i.4, %conv2.i.4.1
  %idxprom17.i.4.1 = sext i32 %add16.i.4.1 to i64
  %arrayidx18.i.4.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.4.1
  %762 = load float, float* %arrayidx18.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.4.1 = fadd float %add13.i.4.1, %762
  %add22.i.4.1 = add nsw i32 %mul21.i.4, %conv2.i.4.1
  %idxprom23.i.4.1 = sext i32 %add22.i.4.1 to i64
  %arrayidx24.i.4.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.4.1
  %763 = load float, float* %arrayidx24.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.4.1 = fadd float %add19.i.4.1, %763
  %mul26.i.4.1 = fmul float %add25.i.4.1, 0x3FC99999A0000000
  %arrayidx30.i.4.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.4.1
  store float %mul26.i.4.1, float* %arrayidx30.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %764 = add nuw nsw i64 %_local_id_x.0.4, 2
  %exitcond.4.not.1 = icmp eq i64 %764, 32
  br i1 %exitcond.4.not.1, label %pregion_for_end.i.4.loopexit, label %pregion_for_entry.entry.i.4, !llvm.loop !25

pregion_for_end.i.4.loopexit:                     ; preds = %pregion_for_entry.entry.i.4
  br label %pregion_for_end.i.4

pregion_for_end.i.4:                              ; preds = %pregion_for_end.i.4.loopexit, %vector.body110
  %765 = trunc i64 %mul3.i.i to i32
  %conv.i.5 = or i32 %765, 5
  %mul.i.5 = mul nsw i32 %conv.i.5, %2
  %add14.i.5 = add nuw nsw i32 %conv.i.5, 1
  %mul15.i.5 = mul nsw i32 %add14.i.5, %2
  %sub20.i.5 = add nsw i32 %conv.i.5, -1
  %mul21.i.5 = mul nsw i32 %sub20.i.5, %2
  %766 = mul i32 %add14.i.4, %2
  %767 = trunc i64 %4 to i32
  %768 = shl i32 %767, 5
  %769 = add nsw i32 %766, %768
  %770 = icmp sgt i32 %769, 2147483616
  %771 = add i32 %766, %768
  %772 = add i32 %771, -1
  %773 = add i32 %771, 30
  %774 = icmp slt i32 %773, %772
  %775 = or i1 %770, %774
  %776 = add i32 %766, %768
  %777 = add i32 %776, 1
  %778 = add i32 %776, 32
  %779 = icmp slt i32 %778, %777
  %780 = or i1 %775, %779
  %781 = or i32 %conv.i, 6
  %782 = mul i32 %781, %2
  %783 = add nsw i32 %782, %768
  %784 = icmp sgt i32 %783, 2147483616
  %785 = or i1 %780, %784
  %786 = mul i32 %conv.i.4, %2
  %787 = add nsw i32 %786, %768
  %788 = icmp sgt i32 %787, 2147483616
  %789 = or i1 %785, %788
  br i1 %789, label %pregion_for_entry.entry.i.5.preheader, label %vector.body140

pregion_for_entry.entry.i.5.preheader:            ; preds = %pregion_for_end.i.4
  br label %pregion_for_entry.entry.i.5

vector.body140:                                   ; preds = %pregion_for_end.i.4
  %790 = trunc i64 %mul.i.i to i32
  %791 = add i32 %mul.i.5, %790
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds float, float* %0, i64 %792
  %794 = bitcast float* %793 to <8 x float>*
  %wide.load163 = load <8 x float>, <8 x float>* %794, align 4, !tbaa !12, !llvm.access.group !16
  %795 = add i32 %791, -1
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %0, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %wide.load164 = load <8 x float>, <8 x float>* %798, align 4, !tbaa !12, !llvm.access.group !16
  %799 = fadd <8 x float> %wide.load163, %wide.load164
  %800 = add i32 %791, 1
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %0, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %wide.load165 = load <8 x float>, <8 x float>* %803, align 4, !tbaa !12, !llvm.access.group !16
  %804 = fadd <8 x float> %799, %wide.load165
  %805 = add nsw i32 %mul15.i.5, %790
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %0, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %wide.load166 = load <8 x float>, <8 x float>* %808, align 4, !tbaa !12, !llvm.access.group !16
  %809 = fadd <8 x float> %804, %wide.load166
  %810 = add nsw i32 %mul21.i.5, %790
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %0, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %wide.load167 = load <8 x float>, <8 x float>* %813, align 4, !tbaa !12, !llvm.access.group !16
  %814 = fadd <8 x float> %809, %wide.load167
  %815 = fmul <8 x float> %814, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %816 = getelementptr inbounds float, float* %1, i64 %792
  %817 = bitcast float* %816 to <8 x float>*
  store <8 x float> %815, <8 x float>* %817, align 4, !tbaa !12, !llvm.access.group !16
  %818 = trunc i64 %mul.i.i to i32
  %819 = or i32 %818, 8
  %820 = add i32 %mul.i.5, %819
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %0, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %wide.load163.1 = load <8 x float>, <8 x float>* %823, align 4, !tbaa !12, !llvm.access.group !16
  %824 = add i32 %820, -1
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float* %0, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %wide.load164.1 = load <8 x float>, <8 x float>* %827, align 4, !tbaa !12, !llvm.access.group !16
  %828 = fadd <8 x float> %wide.load163.1, %wide.load164.1
  %829 = add i32 %820, 1
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %0, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %wide.load165.1 = load <8 x float>, <8 x float>* %832, align 4, !tbaa !12, !llvm.access.group !16
  %833 = fadd <8 x float> %828, %wide.load165.1
  %834 = add nsw i32 %mul15.i.5, %819
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float, float* %0, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %wide.load166.1 = load <8 x float>, <8 x float>* %837, align 4, !tbaa !12, !llvm.access.group !16
  %838 = fadd <8 x float> %833, %wide.load166.1
  %839 = add nsw i32 %mul21.i.5, %819
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float, float* %0, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %wide.load167.1 = load <8 x float>, <8 x float>* %842, align 4, !tbaa !12, !llvm.access.group !16
  %843 = fadd <8 x float> %838, %wide.load167.1
  %844 = fmul <8 x float> %843, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %845 = getelementptr inbounds float, float* %1, i64 %821
  %846 = bitcast float* %845 to <8 x float>*
  store <8 x float> %844, <8 x float>* %846, align 4, !tbaa !12, !llvm.access.group !16
  %847 = trunc i64 %mul.i.i to i32
  %848 = or i32 %847, 16
  %849 = add i32 %mul.i.5, %848
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float, float* %0, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %wide.load163.2 = load <8 x float>, <8 x float>* %852, align 4, !tbaa !12, !llvm.access.group !16
  %853 = add i32 %849, -1
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds float, float* %0, i64 %854
  %856 = bitcast float* %855 to <8 x float>*
  %wide.load164.2 = load <8 x float>, <8 x float>* %856, align 4, !tbaa !12, !llvm.access.group !16
  %857 = fadd <8 x float> %wide.load163.2, %wide.load164.2
  %858 = add i32 %849, 1
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float, float* %0, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %wide.load165.2 = load <8 x float>, <8 x float>* %861, align 4, !tbaa !12, !llvm.access.group !16
  %862 = fadd <8 x float> %857, %wide.load165.2
  %863 = add nsw i32 %mul15.i.5, %848
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds float, float* %0, i64 %864
  %866 = bitcast float* %865 to <8 x float>*
  %wide.load166.2 = load <8 x float>, <8 x float>* %866, align 4, !tbaa !12, !llvm.access.group !16
  %867 = fadd <8 x float> %862, %wide.load166.2
  %868 = add nsw i32 %mul21.i.5, %848
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds float, float* %0, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %wide.load167.2 = load <8 x float>, <8 x float>* %871, align 4, !tbaa !12, !llvm.access.group !16
  %872 = fadd <8 x float> %867, %wide.load167.2
  %873 = fmul <8 x float> %872, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %874 = getelementptr inbounds float, float* %1, i64 %850
  %875 = bitcast float* %874 to <8 x float>*
  store <8 x float> %873, <8 x float>* %875, align 4, !tbaa !12, !llvm.access.group !16
  %876 = trunc i64 %mul.i.i to i32
  %877 = or i32 %876, 24
  %878 = add i32 %mul.i.5, %877
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds float, float* %0, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %wide.load163.3 = load <8 x float>, <8 x float>* %881, align 4, !tbaa !12, !llvm.access.group !16
  %882 = add i32 %878, -1
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds float, float* %0, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %wide.load164.3 = load <8 x float>, <8 x float>* %885, align 4, !tbaa !12, !llvm.access.group !16
  %886 = fadd <8 x float> %wide.load163.3, %wide.load164.3
  %887 = add i32 %878, 1
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds float, float* %0, i64 %888
  %890 = bitcast float* %889 to <8 x float>*
  %wide.load165.3 = load <8 x float>, <8 x float>* %890, align 4, !tbaa !12, !llvm.access.group !16
  %891 = fadd <8 x float> %886, %wide.load165.3
  %892 = add nsw i32 %mul15.i.5, %877
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds float, float* %0, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %wide.load166.3 = load <8 x float>, <8 x float>* %895, align 4, !tbaa !12, !llvm.access.group !16
  %896 = fadd <8 x float> %891, %wide.load166.3
  %897 = add nsw i32 %mul21.i.5, %877
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds float, float* %0, i64 %898
  %900 = bitcast float* %899 to <8 x float>*
  %wide.load167.3 = load <8 x float>, <8 x float>* %900, align 4, !tbaa !12, !llvm.access.group !16
  %901 = fadd <8 x float> %896, %wide.load167.3
  %902 = fmul <8 x float> %901, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %903 = getelementptr inbounds float, float* %1, i64 %879
  %904 = bitcast float* %903 to <8 x float>*
  store <8 x float> %902, <8 x float>* %904, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.5

pregion_for_entry.entry.i.5:                      ; preds = %pregion_for_entry.entry.i.5, %pregion_for_entry.entry.i.5.preheader
  %_local_id_x.0.5 = phi i64 [ %916, %pregion_for_entry.entry.i.5 ], [ 0, %pregion_for_entry.entry.i.5.preheader ]
  %add1.i.i.5 = add nuw nsw i64 %_local_id_x.0.5, %mul.i.i
  %conv2.i.5 = trunc i64 %add1.i.i.5 to i32
  %add.i.5 = add i32 %mul.i.5, %conv2.i.5
  %idxprom.i.5 = sext i32 %add.i.5 to i64
  %arrayidx.i.5 = getelementptr inbounds float, float* %0, i64 %idxprom.i.5
  %905 = load float, float* %arrayidx.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.5 = add i32 %add.i.5, -1
  %idxprom5.i.5 = sext i32 %add4.i.5 to i64
  %arrayidx6.i.5 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.5
  %906 = load float, float* %arrayidx6.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.5 = fadd float %905, %906
  %add10.i.5 = add i32 %add.i.5, 1
  %idxprom11.i.5 = sext i32 %add10.i.5 to i64
  %arrayidx12.i.5 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.5
  %907 = load float, float* %arrayidx12.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.5 = fadd float %add7.i.5, %907
  %add16.i.5 = add nsw i32 %mul15.i.5, %conv2.i.5
  %idxprom17.i.5 = sext i32 %add16.i.5 to i64
  %arrayidx18.i.5 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.5
  %908 = load float, float* %arrayidx18.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.5 = fadd float %add13.i.5, %908
  %add22.i.5 = add nsw i32 %mul21.i.5, %conv2.i.5
  %idxprom23.i.5 = sext i32 %add22.i.5 to i64
  %arrayidx24.i.5 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.5
  %909 = load float, float* %arrayidx24.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.5 = fadd float %add19.i.5, %909
  %mul26.i.5 = fmul float %add25.i.5, 0x3FC99999A0000000
  %arrayidx30.i.5 = getelementptr inbounds float, float* %1, i64 %idxprom.i.5
  store float %mul26.i.5, float* %arrayidx30.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %910 = or i64 %_local_id_x.0.5, 1
  %add1.i.i.5.1 = add nuw nsw i64 %910, %mul.i.i
  %conv2.i.5.1 = trunc i64 %add1.i.i.5.1 to i32
  %add.i.5.1 = add i32 %mul.i.5, %conv2.i.5.1
  %idxprom.i.5.1 = sext i32 %add.i.5.1 to i64
  %arrayidx.i.5.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.5.1
  %911 = load float, float* %arrayidx.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.5.1 = add i32 %add.i.5.1, -1
  %idxprom5.i.5.1 = sext i32 %add4.i.5.1 to i64
  %arrayidx6.i.5.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.5.1
  %912 = load float, float* %arrayidx6.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.5.1 = fadd float %911, %912
  %add10.i.5.1 = add i32 %add.i.5.1, 1
  %idxprom11.i.5.1 = sext i32 %add10.i.5.1 to i64
  %arrayidx12.i.5.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.5.1
  %913 = load float, float* %arrayidx12.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.5.1 = fadd float %add7.i.5.1, %913
  %add16.i.5.1 = add nsw i32 %mul15.i.5, %conv2.i.5.1
  %idxprom17.i.5.1 = sext i32 %add16.i.5.1 to i64
  %arrayidx18.i.5.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.5.1
  %914 = load float, float* %arrayidx18.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.5.1 = fadd float %add13.i.5.1, %914
  %add22.i.5.1 = add nsw i32 %mul21.i.5, %conv2.i.5.1
  %idxprom23.i.5.1 = sext i32 %add22.i.5.1 to i64
  %arrayidx24.i.5.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.5.1
  %915 = load float, float* %arrayidx24.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.5.1 = fadd float %add19.i.5.1, %915
  %mul26.i.5.1 = fmul float %add25.i.5.1, 0x3FC99999A0000000
  %arrayidx30.i.5.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.5.1
  store float %mul26.i.5.1, float* %arrayidx30.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %916 = add nuw nsw i64 %_local_id_x.0.5, 2
  %exitcond.5.not.1 = icmp eq i64 %916, 32
  br i1 %exitcond.5.not.1, label %pregion_for_end.i.5.loopexit, label %pregion_for_entry.entry.i.5, !llvm.loop !26

pregion_for_end.i.5.loopexit:                     ; preds = %pregion_for_entry.entry.i.5
  br label %pregion_for_end.i.5

pregion_for_end.i.5:                              ; preds = %pregion_for_end.i.5.loopexit, %vector.body140
  %917 = trunc i64 %mul3.i.i to i32
  %conv.i.6 = or i32 %917, 6
  %mul.i.6 = mul nsw i32 %conv.i.6, %2
  %add14.i.6 = or i32 %917, 7
  %mul15.i.6 = mul nsw i32 %add14.i.6, %2
  %sub20.i.6 = add nsw i32 %conv.i.6, -1
  %mul21.i.6 = mul nsw i32 %sub20.i.6, %2
  %918 = mul i32 %conv.i.6, %2
  %919 = trunc i64 %4 to i32
  %920 = shl i32 %919, 5
  %921 = add nsw i32 %918, %920
  %922 = icmp sgt i32 %921, 2147483616
  %923 = add i32 %918, %920
  %924 = add i32 %923, -1
  %925 = add i32 %923, 30
  %926 = icmp slt i32 %925, %924
  %927 = or i1 %922, %926
  %928 = add i32 %918, %920
  %929 = or i32 %928, 1
  %930 = icmp sgt i32 %929, 2147483616
  %931 = or i1 %927, %930
  %932 = mul i32 %add14.i.6, %2
  %933 = add nsw i32 %932, %920
  %934 = icmp sgt i32 %933, 2147483616
  %935 = or i1 %931, %934
  %936 = mul i32 %add14.i.4, %2
  %937 = add nsw i32 %936, %920
  %938 = icmp sgt i32 %937, 2147483616
  %939 = or i1 %935, %938
  br i1 %939, label %pregion_for_entry.entry.i.6.preheader, label %vector.body170

pregion_for_entry.entry.i.6.preheader:            ; preds = %pregion_for_end.i.5
  br label %pregion_for_entry.entry.i.6

vector.body170:                                   ; preds = %pregion_for_end.i.5
  %940 = trunc i64 %mul.i.i to i32
  %941 = add i32 %mul.i.6, %940
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds float, float* %0, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %wide.load193 = load <8 x float>, <8 x float>* %944, align 4, !tbaa !12, !llvm.access.group !16
  %945 = add i32 %941, -1
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds float, float* %0, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %wide.load194 = load <8 x float>, <8 x float>* %948, align 4, !tbaa !12, !llvm.access.group !16
  %949 = fadd <8 x float> %wide.load193, %wide.load194
  %950 = or i32 %941, 1
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds float, float* %0, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %wide.load195 = load <8 x float>, <8 x float>* %953, align 4, !tbaa !12, !llvm.access.group !16
  %954 = fadd <8 x float> %949, %wide.load195
  %955 = add nsw i32 %mul15.i.6, %940
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds float, float* %0, i64 %956
  %958 = bitcast float* %957 to <8 x float>*
  %wide.load196 = load <8 x float>, <8 x float>* %958, align 4, !tbaa !12, !llvm.access.group !16
  %959 = fadd <8 x float> %954, %wide.load196
  %960 = add nsw i32 %mul21.i.6, %940
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds float, float* %0, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %wide.load197 = load <8 x float>, <8 x float>* %963, align 4, !tbaa !12, !llvm.access.group !16
  %964 = fadd <8 x float> %959, %wide.load197
  %965 = fmul <8 x float> %964, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %966 = getelementptr inbounds float, float* %1, i64 %942
  %967 = bitcast float* %966 to <8 x float>*
  store <8 x float> %965, <8 x float>* %967, align 4, !tbaa !12, !llvm.access.group !16
  %968 = trunc i64 %mul.i.i to i32
  %969 = or i32 %968, 8
  %970 = add i32 %mul.i.6, %969
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds float, float* %0, i64 %971
  %973 = bitcast float* %972 to <8 x float>*
  %wide.load193.1 = load <8 x float>, <8 x float>* %973, align 4, !tbaa !12, !llvm.access.group !16
  %974 = add i32 %970, -1
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds float, float* %0, i64 %975
  %977 = bitcast float* %976 to <8 x float>*
  %wide.load194.1 = load <8 x float>, <8 x float>* %977, align 4, !tbaa !12, !llvm.access.group !16
  %978 = fadd <8 x float> %wide.load193.1, %wide.load194.1
  %979 = or i32 %970, 1
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds float, float* %0, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %wide.load195.1 = load <8 x float>, <8 x float>* %982, align 4, !tbaa !12, !llvm.access.group !16
  %983 = fadd <8 x float> %978, %wide.load195.1
  %984 = add nsw i32 %mul15.i.6, %969
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds float, float* %0, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %wide.load196.1 = load <8 x float>, <8 x float>* %987, align 4, !tbaa !12, !llvm.access.group !16
  %988 = fadd <8 x float> %983, %wide.load196.1
  %989 = add nsw i32 %mul21.i.6, %969
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds float, float* %0, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %wide.load197.1 = load <8 x float>, <8 x float>* %992, align 4, !tbaa !12, !llvm.access.group !16
  %993 = fadd <8 x float> %988, %wide.load197.1
  %994 = fmul <8 x float> %993, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %995 = getelementptr inbounds float, float* %1, i64 %971
  %996 = bitcast float* %995 to <8 x float>*
  store <8 x float> %994, <8 x float>* %996, align 4, !tbaa !12, !llvm.access.group !16
  %997 = trunc i64 %mul.i.i to i32
  %998 = or i32 %997, 16
  %999 = add i32 %mul.i.6, %998
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds float, float* %0, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %wide.load193.2 = load <8 x float>, <8 x float>* %1002, align 4, !tbaa !12, !llvm.access.group !16
  %1003 = add i32 %999, -1
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds float, float* %0, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %wide.load194.2 = load <8 x float>, <8 x float>* %1006, align 4, !tbaa !12, !llvm.access.group !16
  %1007 = fadd <8 x float> %wide.load193.2, %wide.load194.2
  %1008 = or i32 %999, 1
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds float, float* %0, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %wide.load195.2 = load <8 x float>, <8 x float>* %1011, align 4, !tbaa !12, !llvm.access.group !16
  %1012 = fadd <8 x float> %1007, %wide.load195.2
  %1013 = add nsw i32 %mul15.i.6, %998
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds float, float* %0, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %wide.load196.2 = load <8 x float>, <8 x float>* %1016, align 4, !tbaa !12, !llvm.access.group !16
  %1017 = fadd <8 x float> %1012, %wide.load196.2
  %1018 = add nsw i32 %mul21.i.6, %998
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds float, float* %0, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %wide.load197.2 = load <8 x float>, <8 x float>* %1021, align 4, !tbaa !12, !llvm.access.group !16
  %1022 = fadd <8 x float> %1017, %wide.load197.2
  %1023 = fmul <8 x float> %1022, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1024 = getelementptr inbounds float, float* %1, i64 %1000
  %1025 = bitcast float* %1024 to <8 x float>*
  store <8 x float> %1023, <8 x float>* %1025, align 4, !tbaa !12, !llvm.access.group !16
  %1026 = trunc i64 %mul.i.i to i32
  %1027 = or i32 %1026, 24
  %1028 = add i32 %mul.i.6, %1027
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds float, float* %0, i64 %1029
  %1031 = bitcast float* %1030 to <8 x float>*
  %wide.load193.3 = load <8 x float>, <8 x float>* %1031, align 4, !tbaa !12, !llvm.access.group !16
  %1032 = add i32 %1028, -1
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds float, float* %0, i64 %1033
  %1035 = bitcast float* %1034 to <8 x float>*
  %wide.load194.3 = load <8 x float>, <8 x float>* %1035, align 4, !tbaa !12, !llvm.access.group !16
  %1036 = fadd <8 x float> %wide.load193.3, %wide.load194.3
  %1037 = or i32 %1028, 1
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds float, float* %0, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %wide.load195.3 = load <8 x float>, <8 x float>* %1040, align 4, !tbaa !12, !llvm.access.group !16
  %1041 = fadd <8 x float> %1036, %wide.load195.3
  %1042 = add nsw i32 %mul15.i.6, %1027
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds float, float* %0, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %wide.load196.3 = load <8 x float>, <8 x float>* %1045, align 4, !tbaa !12, !llvm.access.group !16
  %1046 = fadd <8 x float> %1041, %wide.load196.3
  %1047 = add nsw i32 %mul21.i.6, %1027
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds float, float* %0, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %wide.load197.3 = load <8 x float>, <8 x float>* %1050, align 4, !tbaa !12, !llvm.access.group !16
  %1051 = fadd <8 x float> %1046, %wide.load197.3
  %1052 = fmul <8 x float> %1051, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1053 = getelementptr inbounds float, float* %1, i64 %1029
  %1054 = bitcast float* %1053 to <8 x float>*
  store <8 x float> %1052, <8 x float>* %1054, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.6

pregion_for_entry.entry.i.6:                      ; preds = %pregion_for_entry.entry.i.6, %pregion_for_entry.entry.i.6.preheader
  %_local_id_x.0.6 = phi i64 [ %1066, %pregion_for_entry.entry.i.6 ], [ 0, %pregion_for_entry.entry.i.6.preheader ]
  %add1.i.i.6 = add nuw nsw i64 %_local_id_x.0.6, %mul.i.i
  %conv2.i.6 = trunc i64 %add1.i.i.6 to i32
  %add.i.6 = add i32 %mul.i.6, %conv2.i.6
  %idxprom.i.6 = sext i32 %add.i.6 to i64
  %arrayidx.i.6 = getelementptr inbounds float, float* %0, i64 %idxprom.i.6
  %1055 = load float, float* %arrayidx.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.6 = add i32 %add.i.6, -1
  %idxprom5.i.6 = sext i32 %add4.i.6 to i64
  %arrayidx6.i.6 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.6
  %1056 = load float, float* %arrayidx6.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.6 = fadd float %1055, %1056
  %add10.i.6 = or i32 %add.i.6, 1
  %idxprom11.i.6 = sext i32 %add10.i.6 to i64
  %arrayidx12.i.6 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.6
  %1057 = load float, float* %arrayidx12.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.6 = fadd float %add7.i.6, %1057
  %add16.i.6 = add nsw i32 %mul15.i.6, %conv2.i.6
  %idxprom17.i.6 = sext i32 %add16.i.6 to i64
  %arrayidx18.i.6 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.6
  %1058 = load float, float* %arrayidx18.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.6 = fadd float %add13.i.6, %1058
  %add22.i.6 = add nsw i32 %mul21.i.6, %conv2.i.6
  %idxprom23.i.6 = sext i32 %add22.i.6 to i64
  %arrayidx24.i.6 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.6
  %1059 = load float, float* %arrayidx24.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.6 = fadd float %add19.i.6, %1059
  %mul26.i.6 = fmul float %add25.i.6, 0x3FC99999A0000000
  %arrayidx30.i.6 = getelementptr inbounds float, float* %1, i64 %idxprom.i.6
  store float %mul26.i.6, float* %arrayidx30.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %1060 = or i64 %_local_id_x.0.6, 1
  %add1.i.i.6.1 = add nuw nsw i64 %1060, %mul.i.i
  %conv2.i.6.1 = trunc i64 %add1.i.i.6.1 to i32
  %add.i.6.1 = add i32 %mul.i.6, %conv2.i.6.1
  %idxprom.i.6.1 = sext i32 %add.i.6.1 to i64
  %arrayidx.i.6.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.6.1
  %1061 = load float, float* %arrayidx.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.6.1 = add nsw i32 %add.i.6.1, -1
  %idxprom5.i.6.1 = sext i32 %add4.i.6.1 to i64
  %arrayidx6.i.6.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.6.1
  %1062 = load float, float* %arrayidx6.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.6.1 = fadd float %1061, %1062
  %add10.i.6.1 = add i32 %add.i.6.1, 1
  %idxprom11.i.6.1 = sext i32 %add10.i.6.1 to i64
  %arrayidx12.i.6.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.6.1
  %1063 = load float, float* %arrayidx12.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.6.1 = fadd float %add7.i.6.1, %1063
  %add16.i.6.1 = add nsw i32 %mul15.i.6, %conv2.i.6.1
  %idxprom17.i.6.1 = sext i32 %add16.i.6.1 to i64
  %arrayidx18.i.6.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.6.1
  %1064 = load float, float* %arrayidx18.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.6.1 = fadd float %add13.i.6.1, %1064
  %add22.i.6.1 = add nsw i32 %mul21.i.6, %conv2.i.6.1
  %idxprom23.i.6.1 = sext i32 %add22.i.6.1 to i64
  %arrayidx24.i.6.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.6.1
  %1065 = load float, float* %arrayidx24.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.6.1 = fadd float %add19.i.6.1, %1065
  %mul26.i.6.1 = fmul float %add25.i.6.1, 0x3FC99999A0000000
  %arrayidx30.i.6.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.6.1
  store float %mul26.i.6.1, float* %arrayidx30.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %1066 = add nuw nsw i64 %_local_id_x.0.6, 2
  %exitcond.6.not.1 = icmp eq i64 %1066, 32
  br i1 %exitcond.6.not.1, label %pregion_for_end.i.6.loopexit, label %pregion_for_entry.entry.i.6, !llvm.loop !27

pregion_for_end.i.6.loopexit:                     ; preds = %pregion_for_entry.entry.i.6
  br label %pregion_for_end.i.6

pregion_for_end.i.6:                              ; preds = %pregion_for_end.i.6.loopexit, %vector.body170
  %1067 = trunc i64 %mul3.i.i to i32
  %conv.i.7 = or i32 %1067, 7
  %mul.i.7 = mul nsw i32 %conv.i.7, %2
  %add14.i.7 = add nsw i32 %conv.i.7, 1
  %mul15.i.7 = mul nsw i32 %add14.i.7, %2
  %sub20.i.7 = add nsw i32 %conv.i.7, -1
  %mul21.i.7 = mul nsw i32 %sub20.i.7, %2
  %1068 = mul i32 %add14.i.6, %2
  %1069 = trunc i64 %4 to i32
  %1070 = shl i32 %1069, 5
  %1071 = add nsw i32 %1068, %1070
  %1072 = icmp sgt i32 %1071, 2147483616
  %1073 = add i32 %1068, %1070
  %1074 = add i32 %1073, -1
  %1075 = add i32 %1073, 30
  %1076 = icmp slt i32 %1075, %1074
  %1077 = or i1 %1072, %1076
  %1078 = add i32 %1068, %1070
  %1079 = add i32 %1078, 1
  %1080 = add i32 %1078, 32
  %1081 = icmp slt i32 %1080, %1079
  %1082 = or i1 %1077, %1081
  %1083 = add i32 %conv.i, 8
  %1084 = mul i32 %1083, %2
  %1085 = add nsw i32 %1084, %1070
  %1086 = icmp sgt i32 %1085, 2147483616
  %1087 = or i1 %1082, %1086
  %1088 = mul i32 %conv.i.6, %2
  %1089 = add nsw i32 %1088, %1070
  %1090 = icmp sgt i32 %1089, 2147483616
  %1091 = or i1 %1087, %1090
  br i1 %1091, label %pregion_for_entry.entry.i.7.preheader, label %vector.body200

pregion_for_entry.entry.i.7.preheader:            ; preds = %pregion_for_end.i.6
  br label %pregion_for_entry.entry.i.7

vector.body200:                                   ; preds = %pregion_for_end.i.6
  %1092 = trunc i64 %mul.i.i to i32
  %1093 = add i32 %mul.i.7, %1092
  %1094 = sext i32 %1093 to i64
  %1095 = getelementptr inbounds float, float* %0, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %wide.load223 = load <8 x float>, <8 x float>* %1096, align 4, !tbaa !12, !llvm.access.group !16
  %1097 = add i32 %1093, -1
  %1098 = sext i32 %1097 to i64
  %1099 = getelementptr inbounds float, float* %0, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %wide.load224 = load <8 x float>, <8 x float>* %1100, align 4, !tbaa !12, !llvm.access.group !16
  %1101 = fadd <8 x float> %wide.load223, %wide.load224
  %1102 = add i32 %1093, 1
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds float, float* %0, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %wide.load225 = load <8 x float>, <8 x float>* %1105, align 4, !tbaa !12, !llvm.access.group !16
  %1106 = fadd <8 x float> %1101, %wide.load225
  %1107 = add nsw i32 %mul15.i.7, %1092
  %1108 = sext i32 %1107 to i64
  %1109 = getelementptr inbounds float, float* %0, i64 %1108
  %1110 = bitcast float* %1109 to <8 x float>*
  %wide.load226 = load <8 x float>, <8 x float>* %1110, align 4, !tbaa !12, !llvm.access.group !16
  %1111 = fadd <8 x float> %1106, %wide.load226
  %1112 = add nsw i32 %mul21.i.7, %1092
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds float, float* %0, i64 %1113
  %1115 = bitcast float* %1114 to <8 x float>*
  %wide.load227 = load <8 x float>, <8 x float>* %1115, align 4, !tbaa !12, !llvm.access.group !16
  %1116 = fadd <8 x float> %1111, %wide.load227
  %1117 = fmul <8 x float> %1116, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1118 = getelementptr inbounds float, float* %1, i64 %1094
  %1119 = bitcast float* %1118 to <8 x float>*
  store <8 x float> %1117, <8 x float>* %1119, align 4, !tbaa !12, !llvm.access.group !16
  %1120 = trunc i64 %mul.i.i to i32
  %1121 = or i32 %1120, 8
  %1122 = add i32 %mul.i.7, %1121
  %1123 = sext i32 %1122 to i64
  %1124 = getelementptr inbounds float, float* %0, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %wide.load223.1 = load <8 x float>, <8 x float>* %1125, align 4, !tbaa !12, !llvm.access.group !16
  %1126 = add i32 %1122, -1
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds float, float* %0, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %wide.load224.1 = load <8 x float>, <8 x float>* %1129, align 4, !tbaa !12, !llvm.access.group !16
  %1130 = fadd <8 x float> %wide.load223.1, %wide.load224.1
  %1131 = add i32 %1122, 1
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds float, float* %0, i64 %1132
  %1134 = bitcast float* %1133 to <8 x float>*
  %wide.load225.1 = load <8 x float>, <8 x float>* %1134, align 4, !tbaa !12, !llvm.access.group !16
  %1135 = fadd <8 x float> %1130, %wide.load225.1
  %1136 = add nsw i32 %mul15.i.7, %1121
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds float, float* %0, i64 %1137
  %1139 = bitcast float* %1138 to <8 x float>*
  %wide.load226.1 = load <8 x float>, <8 x float>* %1139, align 4, !tbaa !12, !llvm.access.group !16
  %1140 = fadd <8 x float> %1135, %wide.load226.1
  %1141 = add nsw i32 %mul21.i.7, %1121
  %1142 = sext i32 %1141 to i64
  %1143 = getelementptr inbounds float, float* %0, i64 %1142
  %1144 = bitcast float* %1143 to <8 x float>*
  %wide.load227.1 = load <8 x float>, <8 x float>* %1144, align 4, !tbaa !12, !llvm.access.group !16
  %1145 = fadd <8 x float> %1140, %wide.load227.1
  %1146 = fmul <8 x float> %1145, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1147 = getelementptr inbounds float, float* %1, i64 %1123
  %1148 = bitcast float* %1147 to <8 x float>*
  store <8 x float> %1146, <8 x float>* %1148, align 4, !tbaa !12, !llvm.access.group !16
  %1149 = trunc i64 %mul.i.i to i32
  %1150 = or i32 %1149, 16
  %1151 = add i32 %mul.i.7, %1150
  %1152 = sext i32 %1151 to i64
  %1153 = getelementptr inbounds float, float* %0, i64 %1152
  %1154 = bitcast float* %1153 to <8 x float>*
  %wide.load223.2 = load <8 x float>, <8 x float>* %1154, align 4, !tbaa !12, !llvm.access.group !16
  %1155 = add i32 %1151, -1
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds float, float* %0, i64 %1156
  %1158 = bitcast float* %1157 to <8 x float>*
  %wide.load224.2 = load <8 x float>, <8 x float>* %1158, align 4, !tbaa !12, !llvm.access.group !16
  %1159 = fadd <8 x float> %wide.load223.2, %wide.load224.2
  %1160 = add i32 %1151, 1
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds float, float* %0, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %wide.load225.2 = load <8 x float>, <8 x float>* %1163, align 4, !tbaa !12, !llvm.access.group !16
  %1164 = fadd <8 x float> %1159, %wide.load225.2
  %1165 = add nsw i32 %mul15.i.7, %1150
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds float, float* %0, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %wide.load226.2 = load <8 x float>, <8 x float>* %1168, align 4, !tbaa !12, !llvm.access.group !16
  %1169 = fadd <8 x float> %1164, %wide.load226.2
  %1170 = add nsw i32 %mul21.i.7, %1150
  %1171 = sext i32 %1170 to i64
  %1172 = getelementptr inbounds float, float* %0, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %wide.load227.2 = load <8 x float>, <8 x float>* %1173, align 4, !tbaa !12, !llvm.access.group !16
  %1174 = fadd <8 x float> %1169, %wide.load227.2
  %1175 = fmul <8 x float> %1174, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1176 = getelementptr inbounds float, float* %1, i64 %1152
  %1177 = bitcast float* %1176 to <8 x float>*
  store <8 x float> %1175, <8 x float>* %1177, align 4, !tbaa !12, !llvm.access.group !16
  %1178 = trunc i64 %mul.i.i to i32
  %1179 = or i32 %1178, 24
  %1180 = add i32 %mul.i.7, %1179
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds float, float* %0, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %wide.load223.3 = load <8 x float>, <8 x float>* %1183, align 4, !tbaa !12, !llvm.access.group !16
  %1184 = add i32 %1180, -1
  %1185 = sext i32 %1184 to i64
  %1186 = getelementptr inbounds float, float* %0, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %wide.load224.3 = load <8 x float>, <8 x float>* %1187, align 4, !tbaa !12, !llvm.access.group !16
  %1188 = fadd <8 x float> %wide.load223.3, %wide.load224.3
  %1189 = add i32 %1180, 1
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds float, float* %0, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %wide.load225.3 = load <8 x float>, <8 x float>* %1192, align 4, !tbaa !12, !llvm.access.group !16
  %1193 = fadd <8 x float> %1188, %wide.load225.3
  %1194 = add nsw i32 %mul15.i.7, %1179
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds float, float* %0, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %wide.load226.3 = load <8 x float>, <8 x float>* %1197, align 4, !tbaa !12, !llvm.access.group !16
  %1198 = fadd <8 x float> %1193, %wide.load226.3
  %1199 = add nsw i32 %mul21.i.7, %1179
  %1200 = sext i32 %1199 to i64
  %1201 = getelementptr inbounds float, float* %0, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %wide.load227.3 = load <8 x float>, <8 x float>* %1202, align 4, !tbaa !12, !llvm.access.group !16
  %1203 = fadd <8 x float> %1198, %wide.load227.3
  %1204 = fmul <8 x float> %1203, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1205 = getelementptr inbounds float, float* %1, i64 %1181
  %1206 = bitcast float* %1205 to <8 x float>*
  store <8 x float> %1204, <8 x float>* %1206, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.7

pregion_for_entry.entry.i.7:                      ; preds = %pregion_for_entry.entry.i.7, %pregion_for_entry.entry.i.7.preheader
  %_local_id_x.0.7 = phi i64 [ %1218, %pregion_for_entry.entry.i.7 ], [ 0, %pregion_for_entry.entry.i.7.preheader ]
  %add1.i.i.7 = add nuw nsw i64 %_local_id_x.0.7, %mul.i.i
  %conv2.i.7 = trunc i64 %add1.i.i.7 to i32
  %add.i.7 = add i32 %mul.i.7, %conv2.i.7
  %idxprom.i.7 = sext i32 %add.i.7 to i64
  %arrayidx.i.7 = getelementptr inbounds float, float* %0, i64 %idxprom.i.7
  %1207 = load float, float* %arrayidx.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.7 = add i32 %add.i.7, -1
  %idxprom5.i.7 = sext i32 %add4.i.7 to i64
  %arrayidx6.i.7 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.7
  %1208 = load float, float* %arrayidx6.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.7 = fadd float %1207, %1208
  %add10.i.7 = add i32 %add.i.7, 1
  %idxprom11.i.7 = sext i32 %add10.i.7 to i64
  %arrayidx12.i.7 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.7
  %1209 = load float, float* %arrayidx12.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.7 = fadd float %add7.i.7, %1209
  %add16.i.7 = add nsw i32 %mul15.i.7, %conv2.i.7
  %idxprom17.i.7 = sext i32 %add16.i.7 to i64
  %arrayidx18.i.7 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.7
  %1210 = load float, float* %arrayidx18.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.7 = fadd float %add13.i.7, %1210
  %add22.i.7 = add nsw i32 %mul21.i.7, %conv2.i.7
  %idxprom23.i.7 = sext i32 %add22.i.7 to i64
  %arrayidx24.i.7 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.7
  %1211 = load float, float* %arrayidx24.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.7 = fadd float %add19.i.7, %1211
  %mul26.i.7 = fmul float %add25.i.7, 0x3FC99999A0000000
  %arrayidx30.i.7 = getelementptr inbounds float, float* %1, i64 %idxprom.i.7
  store float %mul26.i.7, float* %arrayidx30.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %1212 = or i64 %_local_id_x.0.7, 1
  %add1.i.i.7.1 = add nuw nsw i64 %1212, %mul.i.i
  %conv2.i.7.1 = trunc i64 %add1.i.i.7.1 to i32
  %add.i.7.1 = add i32 %mul.i.7, %conv2.i.7.1
  %idxprom.i.7.1 = sext i32 %add.i.7.1 to i64
  %arrayidx.i.7.1 = getelementptr inbounds float, float* %0, i64 %idxprom.i.7.1
  %1213 = load float, float* %arrayidx.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.7.1 = add i32 %add.i.7.1, -1
  %idxprom5.i.7.1 = sext i32 %add4.i.7.1 to i64
  %arrayidx6.i.7.1 = getelementptr inbounds float, float* %0, i64 %idxprom5.i.7.1
  %1214 = load float, float* %arrayidx6.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.7.1 = fadd float %1213, %1214
  %add10.i.7.1 = add i32 %add.i.7.1, 1
  %idxprom11.i.7.1 = sext i32 %add10.i.7.1 to i64
  %arrayidx12.i.7.1 = getelementptr inbounds float, float* %0, i64 %idxprom11.i.7.1
  %1215 = load float, float* %arrayidx12.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.7.1 = fadd float %add7.i.7.1, %1215
  %add16.i.7.1 = add nsw i32 %mul15.i.7, %conv2.i.7.1
  %idxprom17.i.7.1 = sext i32 %add16.i.7.1 to i64
  %arrayidx18.i.7.1 = getelementptr inbounds float, float* %0, i64 %idxprom17.i.7.1
  %1216 = load float, float* %arrayidx18.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.7.1 = fadd float %add13.i.7.1, %1216
  %add22.i.7.1 = add nsw i32 %mul21.i.7, %conv2.i.7.1
  %idxprom23.i.7.1 = sext i32 %add22.i.7.1 to i64
  %arrayidx24.i.7.1 = getelementptr inbounds float, float* %0, i64 %idxprom23.i.7.1
  %1217 = load float, float* %arrayidx24.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.7.1 = fadd float %add19.i.7.1, %1217
  %mul26.i.7.1 = fmul float %add25.i.7.1, 0x3FC99999A0000000
  %arrayidx30.i.7.1 = getelementptr inbounds float, float* %1, i64 %idxprom.i.7.1
  store float %mul26.i.7.1, float* %arrayidx30.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %1218 = add nuw nsw i64 %_local_id_x.0.7, 2
  %exitcond.7.not.1 = icmp eq i64 %1218, 32
  br i1 %exitcond.7.not.1, label %pregion_for_end.i.7.loopexit, label %pregion_for_entry.entry.i.7, !llvm.loop !28

pregion_for_end.i.7.loopexit:                     ; preds = %pregion_for_entry.entry.i.7
  br label %pregion_for_end.i.7

pregion_for_end.i.7:                              ; preds = %pregion_for_end.i.7.loopexit, %vector.body200
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @_pocl_kernel_runJacobi2D_kernel1_workgroup(i8** nocapture readonly %0, { [3 x i64], [3 x i64], [3 x i64], i8*, i32*, i32, i32 }* nocapture readnone %1, i64 %2, i64 %3, i64 %4) local_unnamed_addr #1 {
pregion_for_entry.pregion_for_init.i.i:
  %5 = bitcast i8** %0 to float***
  %6 = load float**, float*** %5, align 8
  %7 = load float*, float** %6, align 8
  %8 = getelementptr i8*, i8** %0, i64 1
  %9 = bitcast i8** %8 to float***
  %10 = load float**, float*** %9, align 8
  %11 = load float*, float** %10, align 8
  %12 = getelementptr i8*, i8** %0, i64 2
  %13 = bitcast i8** %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %mul3.i.i.i = shl i64 %3, 3
  %mul.i.i.i = shl i64 %2, 5
  %conv.i.i = trunc i64 %mul3.i.i.i to i32
  %mul.i.i = mul nsw i32 %15, %conv.i.i
  %add14.i.i = or i32 %conv.i.i, 1
  %mul15.i.i = mul nsw i32 %add14.i.i, %15
  %sub20.i.i = add nsw i32 %conv.i.i, -1
  %mul21.i.i = mul nsw i32 %sub20.i.i, %15
  %16 = trunc i64 %3 to i32
  %17 = mul i32 %15, %16
  %18 = shl i32 %17, 3
  %19 = trunc i64 %2 to i32
  %20 = shl i32 %19, 5
  %21 = add i32 %18, %20
  %22 = icmp sgt i32 %21, 2147483616
  %23 = add i32 %18, %20
  %24 = add i32 %23, -1
  %25 = add i32 %23, 30
  %26 = icmp slt i32 %25, %24
  %27 = or i1 %22, %26
  %28 = add i32 %18, %20
  %29 = or i32 %28, 1
  %30 = icmp sgt i32 %29, 2147483616
  %31 = or i1 %27, %30
  %32 = mul i32 %15, %add14.i.i
  %33 = add nsw i32 %32, %20
  %34 = icmp sgt i32 %33, 2147483616
  %35 = or i1 %31, %34
  %36 = add i32 %conv.i.i, -1
  %37 = mul i32 %15, %36
  %38 = add nsw i32 %37, %20
  %39 = icmp sgt i32 %38, 2147483616
  %40 = or i1 %35, %39
  br i1 %40, label %pregion_for_entry.entry.i.i.preheader, label %vector.body

pregion_for_entry.entry.i.i.preheader:            ; preds = %pregion_for_entry.pregion_for_init.i.i
  br label %pregion_for_entry.entry.i.i

vector.body:                                      ; preds = %pregion_for_entry.pregion_for_init.i.i
  %41 = trunc i64 %mul.i.i.i to i32
  %42 = add i32 %mul.i.i, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float, float* %7, i64 %43
  %45 = bitcast float* %44 to <8 x float>*
  %wide.load = load <8 x float>, <8 x float>* %45, align 4, !tbaa !12, !llvm.access.group !16
  %46 = add i32 %42, -1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float, float* %7, i64 %47
  %49 = bitcast float* %48 to <8 x float>*
  %wide.load14 = load <8 x float>, <8 x float>* %49, align 4, !tbaa !12, !llvm.access.group !16
  %50 = fadd <8 x float> %wide.load, %wide.load14
  %51 = or i32 %42, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float, float* %7, i64 %52
  %54 = bitcast float* %53 to <8 x float>*
  %wide.load15 = load <8 x float>, <8 x float>* %54, align 4, !tbaa !12, !llvm.access.group !16
  %55 = fadd <8 x float> %50, %wide.load15
  %56 = add nsw i32 %mul15.i.i, %41
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float, float* %7, i64 %57
  %59 = bitcast float* %58 to <8 x float>*
  %wide.load16 = load <8 x float>, <8 x float>* %59, align 4, !tbaa !12, !llvm.access.group !16
  %60 = fadd <8 x float> %55, %wide.load16
  %61 = add nsw i32 %mul21.i.i, %41
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, float* %7, i64 %62
  %64 = bitcast float* %63 to <8 x float>*
  %wide.load17 = load <8 x float>, <8 x float>* %64, align 4, !tbaa !12, !llvm.access.group !16
  %65 = fadd <8 x float> %60, %wide.load17
  %66 = fmul <8 x float> %65, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %67 = getelementptr inbounds float, float* %11, i64 %43
  %68 = bitcast float* %67 to <8 x float>*
  store <8 x float> %66, <8 x float>* %68, align 4, !tbaa !12, !llvm.access.group !16
  %69 = trunc i64 %mul.i.i.i to i32
  %70 = or i32 %69, 8
  %71 = add i32 %mul.i.i, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds float, float* %7, i64 %72
  %74 = bitcast float* %73 to <8 x float>*
  %wide.load.1 = load <8 x float>, <8 x float>* %74, align 4, !tbaa !12, !llvm.access.group !16
  %75 = add i32 %71, -1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds float, float* %7, i64 %76
  %78 = bitcast float* %77 to <8 x float>*
  %wide.load14.1 = load <8 x float>, <8 x float>* %78, align 4, !tbaa !12, !llvm.access.group !16
  %79 = fadd <8 x float> %wide.load.1, %wide.load14.1
  %80 = or i32 %71, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float, float* %7, i64 %81
  %83 = bitcast float* %82 to <8 x float>*
  %wide.load15.1 = load <8 x float>, <8 x float>* %83, align 4, !tbaa !12, !llvm.access.group !16
  %84 = fadd <8 x float> %79, %wide.load15.1
  %85 = add nsw i32 %mul15.i.i, %70
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float, float* %7, i64 %86
  %88 = bitcast float* %87 to <8 x float>*
  %wide.load16.1 = load <8 x float>, <8 x float>* %88, align 4, !tbaa !12, !llvm.access.group !16
  %89 = fadd <8 x float> %84, %wide.load16.1
  %90 = add nsw i32 %mul21.i.i, %70
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float, float* %7, i64 %91
  %93 = bitcast float* %92 to <8 x float>*
  %wide.load17.1 = load <8 x float>, <8 x float>* %93, align 4, !tbaa !12, !llvm.access.group !16
  %94 = fadd <8 x float> %89, %wide.load17.1
  %95 = fmul <8 x float> %94, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %96 = getelementptr inbounds float, float* %11, i64 %72
  %97 = bitcast float* %96 to <8 x float>*
  store <8 x float> %95, <8 x float>* %97, align 4, !tbaa !12, !llvm.access.group !16
  %98 = trunc i64 %mul.i.i.i to i32
  %99 = or i32 %98, 16
  %100 = add i32 %mul.i.i, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float, float* %7, i64 %101
  %103 = bitcast float* %102 to <8 x float>*
  %wide.load.2 = load <8 x float>, <8 x float>* %103, align 4, !tbaa !12, !llvm.access.group !16
  %104 = add i32 %100, -1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds float, float* %7, i64 %105
  %107 = bitcast float* %106 to <8 x float>*
  %wide.load14.2 = load <8 x float>, <8 x float>* %107, align 4, !tbaa !12, !llvm.access.group !16
  %108 = fadd <8 x float> %wide.load.2, %wide.load14.2
  %109 = or i32 %100, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds float, float* %7, i64 %110
  %112 = bitcast float* %111 to <8 x float>*
  %wide.load15.2 = load <8 x float>, <8 x float>* %112, align 4, !tbaa !12, !llvm.access.group !16
  %113 = fadd <8 x float> %108, %wide.load15.2
  %114 = add nsw i32 %mul15.i.i, %99
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float, float* %7, i64 %115
  %117 = bitcast float* %116 to <8 x float>*
  %wide.load16.2 = load <8 x float>, <8 x float>* %117, align 4, !tbaa !12, !llvm.access.group !16
  %118 = fadd <8 x float> %113, %wide.load16.2
  %119 = add nsw i32 %mul21.i.i, %99
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds float, float* %7, i64 %120
  %122 = bitcast float* %121 to <8 x float>*
  %wide.load17.2 = load <8 x float>, <8 x float>* %122, align 4, !tbaa !12, !llvm.access.group !16
  %123 = fadd <8 x float> %118, %wide.load17.2
  %124 = fmul <8 x float> %123, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %125 = getelementptr inbounds float, float* %11, i64 %101
  %126 = bitcast float* %125 to <8 x float>*
  store <8 x float> %124, <8 x float>* %126, align 4, !tbaa !12, !llvm.access.group !16
  %127 = trunc i64 %mul.i.i.i to i32
  %128 = or i32 %127, 24
  %129 = add i32 %mul.i.i, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds float, float* %7, i64 %130
  %132 = bitcast float* %131 to <8 x float>*
  %wide.load.3 = load <8 x float>, <8 x float>* %132, align 4, !tbaa !12, !llvm.access.group !16
  %133 = add i32 %129, -1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds float, float* %7, i64 %134
  %136 = bitcast float* %135 to <8 x float>*
  %wide.load14.3 = load <8 x float>, <8 x float>* %136, align 4, !tbaa !12, !llvm.access.group !16
  %137 = fadd <8 x float> %wide.load.3, %wide.load14.3
  %138 = or i32 %129, 1
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds float, float* %7, i64 %139
  %141 = bitcast float* %140 to <8 x float>*
  %wide.load15.3 = load <8 x float>, <8 x float>* %141, align 4, !tbaa !12, !llvm.access.group !16
  %142 = fadd <8 x float> %137, %wide.load15.3
  %143 = add nsw i32 %mul15.i.i, %128
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float, float* %7, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %wide.load16.3 = load <8 x float>, <8 x float>* %146, align 4, !tbaa !12, !llvm.access.group !16
  %147 = fadd <8 x float> %142, %wide.load16.3
  %148 = add nsw i32 %mul21.i.i, %128
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds float, float* %7, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %wide.load17.3 = load <8 x float>, <8 x float>* %151, align 4, !tbaa !12, !llvm.access.group !16
  %152 = fadd <8 x float> %147, %wide.load17.3
  %153 = fmul <8 x float> %152, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %154 = getelementptr inbounds float, float* %11, i64 %130
  %155 = bitcast float* %154 to <8 x float>*
  store <8 x float> %153, <8 x float>* %155, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i

pregion_for_end.i.i.loopexit:                     ; preds = %pregion_for_entry.entry.i.i
  br label %pregion_for_end.i.i

pregion_for_end.i.i:                              ; preds = %pregion_for_end.i.i.loopexit, %vector.body
  %156 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.1 = or i32 %156, 1
  %mul.i.i.1 = mul nsw i32 %15, %conv.i.i.1
  %add14.i.i.1 = add nuw nsw i32 %conv.i.i.1, 1
  %mul15.i.i.1 = mul nsw i32 %add14.i.i.1, %15
  %mul21.i.i.1 = mul nsw i32 %15, %156
  %157 = mul i32 %15, %add14.i.i
  %158 = trunc i64 %2 to i32
  %159 = shl i32 %158, 5
  %160 = add nsw i32 %157, %159
  %161 = icmp sgt i32 %160, 2147483616
  %162 = add i32 %157, %159
  %163 = add i32 %162, -1
  %164 = add i32 %162, 30
  %165 = icmp slt i32 %164, %163
  %166 = or i1 %161, %165
  %167 = add i32 %157, %159
  %168 = add i32 %167, 1
  %169 = add i32 %167, 32
  %170 = icmp slt i32 %169, %168
  %171 = or i1 %166, %170
  %172 = or i32 %conv.i.i, 2
  %173 = mul i32 %15, %172
  %174 = add nsw i32 %173, %159
  %175 = icmp sgt i32 %174, 2147483616
  %176 = or i1 %171, %175
  %177 = trunc i64 %3 to i32
  %178 = mul i32 %15, %177
  %179 = shl i32 %178, 3
  %180 = add nsw i32 %179, %159
  %181 = icmp sgt i32 %180, 2147483616
  %182 = or i1 %176, %181
  br i1 %182, label %pregion_for_entry.entry.i.i.1.preheader, label %vector.body20

pregion_for_entry.entry.i.i.1.preheader:          ; preds = %pregion_for_end.i.i
  br label %pregion_for_entry.entry.i.i.1

vector.body20:                                    ; preds = %pregion_for_end.i.i
  %183 = trunc i64 %mul.i.i.i to i32
  %184 = add i32 %mul.i.i.1, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %7, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %wide.load43 = load <8 x float>, <8 x float>* %187, align 4, !tbaa !12, !llvm.access.group !16
  %188 = add i32 %184, -1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %7, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %wide.load44 = load <8 x float>, <8 x float>* %191, align 4, !tbaa !12, !llvm.access.group !16
  %192 = fadd <8 x float> %wide.load43, %wide.load44
  %193 = add i32 %184, 1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %7, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %wide.load45 = load <8 x float>, <8 x float>* %196, align 4, !tbaa !12, !llvm.access.group !16
  %197 = fadd <8 x float> %192, %wide.load45
  %198 = add nsw i32 %mul15.i.i.1, %183
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %7, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %wide.load46 = load <8 x float>, <8 x float>* %201, align 4, !tbaa !12, !llvm.access.group !16
  %202 = fadd <8 x float> %197, %wide.load46
  %203 = add nsw i32 %mul21.i.i.1, %183
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %7, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %wide.load47 = load <8 x float>, <8 x float>* %206, align 4, !tbaa !12, !llvm.access.group !16
  %207 = fadd <8 x float> %202, %wide.load47
  %208 = fmul <8 x float> %207, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %209 = getelementptr inbounds float, float* %11, i64 %185
  %210 = bitcast float* %209 to <8 x float>*
  store <8 x float> %208, <8 x float>* %210, align 4, !tbaa !12, !llvm.access.group !16
  %211 = trunc i64 %mul.i.i.i to i32
  %212 = or i32 %211, 8
  %213 = add i32 %mul.i.i.1, %212
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %7, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %wide.load43.1 = load <8 x float>, <8 x float>* %216, align 4, !tbaa !12, !llvm.access.group !16
  %217 = add i32 %213, -1
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float* %7, i64 %218
  %220 = bitcast float* %219 to <8 x float>*
  %wide.load44.1 = load <8 x float>, <8 x float>* %220, align 4, !tbaa !12, !llvm.access.group !16
  %221 = fadd <8 x float> %wide.load43.1, %wide.load44.1
  %222 = add i32 %213, 1
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float* %7, i64 %223
  %225 = bitcast float* %224 to <8 x float>*
  %wide.load45.1 = load <8 x float>, <8 x float>* %225, align 4, !tbaa !12, !llvm.access.group !16
  %226 = fadd <8 x float> %221, %wide.load45.1
  %227 = add nsw i32 %mul15.i.i.1, %212
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float* %7, i64 %228
  %230 = bitcast float* %229 to <8 x float>*
  %wide.load46.1 = load <8 x float>, <8 x float>* %230, align 4, !tbaa !12, !llvm.access.group !16
  %231 = fadd <8 x float> %226, %wide.load46.1
  %232 = add nsw i32 %mul21.i.i.1, %212
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float* %7, i64 %233
  %235 = bitcast float* %234 to <8 x float>*
  %wide.load47.1 = load <8 x float>, <8 x float>* %235, align 4, !tbaa !12, !llvm.access.group !16
  %236 = fadd <8 x float> %231, %wide.load47.1
  %237 = fmul <8 x float> %236, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %238 = getelementptr inbounds float, float* %11, i64 %214
  %239 = bitcast float* %238 to <8 x float>*
  store <8 x float> %237, <8 x float>* %239, align 4, !tbaa !12, !llvm.access.group !16
  %240 = trunc i64 %mul.i.i.i to i32
  %241 = or i32 %240, 16
  %242 = add i32 %mul.i.i.1, %241
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %7, i64 %243
  %245 = bitcast float* %244 to <8 x float>*
  %wide.load43.2 = load <8 x float>, <8 x float>* %245, align 4, !tbaa !12, !llvm.access.group !16
  %246 = add i32 %242, -1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds float, float* %7, i64 %247
  %249 = bitcast float* %248 to <8 x float>*
  %wide.load44.2 = load <8 x float>, <8 x float>* %249, align 4, !tbaa !12, !llvm.access.group !16
  %250 = fadd <8 x float> %wide.load43.2, %wide.load44.2
  %251 = add i32 %242, 1
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds float, float* %7, i64 %252
  %254 = bitcast float* %253 to <8 x float>*
  %wide.load45.2 = load <8 x float>, <8 x float>* %254, align 4, !tbaa !12, !llvm.access.group !16
  %255 = fadd <8 x float> %250, %wide.load45.2
  %256 = add nsw i32 %mul15.i.i.1, %241
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds float, float* %7, i64 %257
  %259 = bitcast float* %258 to <8 x float>*
  %wide.load46.2 = load <8 x float>, <8 x float>* %259, align 4, !tbaa !12, !llvm.access.group !16
  %260 = fadd <8 x float> %255, %wide.load46.2
  %261 = add nsw i32 %mul21.i.i.1, %241
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds float, float* %7, i64 %262
  %264 = bitcast float* %263 to <8 x float>*
  %wide.load47.2 = load <8 x float>, <8 x float>* %264, align 4, !tbaa !12, !llvm.access.group !16
  %265 = fadd <8 x float> %260, %wide.load47.2
  %266 = fmul <8 x float> %265, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %267 = getelementptr inbounds float, float* %11, i64 %243
  %268 = bitcast float* %267 to <8 x float>*
  store <8 x float> %266, <8 x float>* %268, align 4, !tbaa !12, !llvm.access.group !16
  %269 = trunc i64 %mul.i.i.i to i32
  %270 = or i32 %269, 24
  %271 = add i32 %mul.i.i.1, %270
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %7, i64 %272
  %274 = bitcast float* %273 to <8 x float>*
  %wide.load43.3 = load <8 x float>, <8 x float>* %274, align 4, !tbaa !12, !llvm.access.group !16
  %275 = add i32 %271, -1
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds float, float* %7, i64 %276
  %278 = bitcast float* %277 to <8 x float>*
  %wide.load44.3 = load <8 x float>, <8 x float>* %278, align 4, !tbaa !12, !llvm.access.group !16
  %279 = fadd <8 x float> %wide.load43.3, %wide.load44.3
  %280 = add i32 %271, 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds float, float* %7, i64 %281
  %283 = bitcast float* %282 to <8 x float>*
  %wide.load45.3 = load <8 x float>, <8 x float>* %283, align 4, !tbaa !12, !llvm.access.group !16
  %284 = fadd <8 x float> %279, %wide.load45.3
  %285 = add nsw i32 %mul15.i.i.1, %270
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds float, float* %7, i64 %286
  %288 = bitcast float* %287 to <8 x float>*
  %wide.load46.3 = load <8 x float>, <8 x float>* %288, align 4, !tbaa !12, !llvm.access.group !16
  %289 = fadd <8 x float> %284, %wide.load46.3
  %290 = add nsw i32 %mul21.i.i.1, %270
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds float, float* %7, i64 %291
  %293 = bitcast float* %292 to <8 x float>*
  %wide.load47.3 = load <8 x float>, <8 x float>* %293, align 4, !tbaa !12, !llvm.access.group !16
  %294 = fadd <8 x float> %289, %wide.load47.3
  %295 = fmul <8 x float> %294, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %296 = getelementptr inbounds float, float* %11, i64 %272
  %297 = bitcast float* %296 to <8 x float>*
  store <8 x float> %295, <8 x float>* %297, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.1

pregion_for_entry.entry.i.i:                      ; preds = %pregion_for_entry.entry.i.i, %pregion_for_entry.entry.i.i.preheader
  %_local_id_x.i.0 = phi i64 [ %309, %pregion_for_entry.entry.i.i ], [ 0, %pregion_for_entry.entry.i.i.preheader ]
  %add1.i.i.i = add nuw nsw i64 %_local_id_x.i.0, %mul.i.i.i
  %conv2.i.i = trunc i64 %add1.i.i.i to i32
  %add.i.i = add i32 %mul.i.i, %conv2.i.i
  %idxprom.i.i = sext i32 %add.i.i to i64
  %arrayidx.i.i = getelementptr inbounds float, float* %7, i64 %idxprom.i.i
  %298 = load float, float* %arrayidx.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i = add i32 %add.i.i, -1
  %idxprom5.i.i = sext i32 %add4.i.i to i64
  %arrayidx6.i.i = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i
  %299 = load float, float* %arrayidx6.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i = fadd float %298, %299
  %add10.i.i = or i32 %add.i.i, 1
  %idxprom11.i.i = sext i32 %add10.i.i to i64
  %arrayidx12.i.i = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i
  %300 = load float, float* %arrayidx12.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i = fadd float %add7.i.i, %300
  %add16.i.i = add nsw i32 %mul15.i.i, %conv2.i.i
  %idxprom17.i.i = sext i32 %add16.i.i to i64
  %arrayidx18.i.i = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i
  %301 = load float, float* %arrayidx18.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i = fadd float %add13.i.i, %301
  %add22.i.i = add nsw i32 %mul21.i.i, %conv2.i.i
  %idxprom23.i.i = sext i32 %add22.i.i to i64
  %arrayidx24.i.i = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i
  %302 = load float, float* %arrayidx24.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i = fadd float %add19.i.i, %302
  %mul26.i.i = fmul float %add25.i.i, 0x3FC99999A0000000
  %arrayidx30.i.i = getelementptr inbounds float, float* %11, i64 %idxprom.i.i
  store float %mul26.i.i, float* %arrayidx30.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %303 = or i64 %_local_id_x.i.0, 1
  %add1.i.i.i.1237 = add nuw nsw i64 %303, %mul.i.i.i
  %conv2.i.i.1238 = trunc i64 %add1.i.i.i.1237 to i32
  %add.i.i.1239 = add i32 %mul.i.i, %conv2.i.i.1238
  %idxprom.i.i.1240 = sext i32 %add.i.i.1239 to i64
  %arrayidx.i.i.1241 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.1240
  %304 = load float, float* %arrayidx.i.i.1241, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1242 = add nsw i32 %add.i.i.1239, -1
  %idxprom5.i.i.1243 = sext i32 %add4.i.i.1242 to i64
  %arrayidx6.i.i.1244 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.1243
  %305 = load float, float* %arrayidx6.i.i.1244, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1245 = fadd float %304, %305
  %add10.i.i.1246 = add i32 %add.i.i.1239, 1
  %idxprom11.i.i.1247 = sext i32 %add10.i.i.1246 to i64
  %arrayidx12.i.i.1248 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.1247
  %306 = load float, float* %arrayidx12.i.i.1248, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1249 = fadd float %add7.i.i.1245, %306
  %add16.i.i.1250 = add nsw i32 %mul15.i.i, %conv2.i.i.1238
  %idxprom17.i.i.1251 = sext i32 %add16.i.i.1250 to i64
  %arrayidx18.i.i.1252 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.1251
  %307 = load float, float* %arrayidx18.i.i.1252, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1253 = fadd float %add13.i.i.1249, %307
  %add22.i.i.1254 = add nsw i32 %mul21.i.i, %conv2.i.i.1238
  %idxprom23.i.i.1255 = sext i32 %add22.i.i.1254 to i64
  %arrayidx24.i.i.1256 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.1255
  %308 = load float, float* %arrayidx24.i.i.1256, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1257 = fadd float %add19.i.i.1253, %308
  %mul26.i.i.1258 = fmul float %add25.i.i.1257, 0x3FC99999A0000000
  %arrayidx30.i.i.1259 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.1240
  store float %mul26.i.i.1258, float* %arrayidx30.i.i.1259, align 4, !tbaa !12, !llvm.access.group !16
  %309 = add nuw nsw i64 %_local_id_x.i.0, 2
  %exitcond.not.1 = icmp eq i64 %309, 32
  br i1 %exitcond.not.1, label %pregion_for_end.i.i.loopexit, label %pregion_for_entry.entry.i.i, !llvm.loop !29

pregion_for_entry.entry.i.i.1:                    ; preds = %pregion_for_entry.entry.i.i.1, %pregion_for_entry.entry.i.i.1.preheader
  %_local_id_x.i.0.1 = phi i64 [ %321, %pregion_for_entry.entry.i.i.1 ], [ 0, %pregion_for_entry.entry.i.i.1.preheader ]
  %add1.i.i.i.1 = add nuw nsw i64 %_local_id_x.i.0.1, %mul.i.i.i
  %conv2.i.i.1 = trunc i64 %add1.i.i.i.1 to i32
  %add.i.i.1 = add i32 %mul.i.i.1, %conv2.i.i.1
  %idxprom.i.i.1 = sext i32 %add.i.i.1 to i64
  %arrayidx.i.i.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.1
  %310 = load float, float* %arrayidx.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1 = add i32 %add.i.i.1, -1
  %idxprom5.i.i.1 = sext i32 %add4.i.i.1 to i64
  %arrayidx6.i.i.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.1
  %311 = load float, float* %arrayidx6.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1 = fadd float %310, %311
  %add10.i.i.1 = add i32 %add.i.i.1, 1
  %idxprom11.i.i.1 = sext i32 %add10.i.i.1 to i64
  %arrayidx12.i.i.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.1
  %312 = load float, float* %arrayidx12.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1 = fadd float %add7.i.i.1, %312
  %add16.i.i.1 = add nsw i32 %mul15.i.i.1, %conv2.i.i.1
  %idxprom17.i.i.1 = sext i32 %add16.i.i.1 to i64
  %arrayidx18.i.i.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.1
  %313 = load float, float* %arrayidx18.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1 = fadd float %add13.i.i.1, %313
  %add22.i.i.1 = add nsw i32 %mul21.i.i.1, %conv2.i.i.1
  %idxprom23.i.i.1 = sext i32 %add22.i.i.1 to i64
  %arrayidx24.i.i.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.1
  %314 = load float, float* %arrayidx24.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1 = fadd float %add19.i.i.1, %314
  %mul26.i.i.1 = fmul float %add25.i.i.1, 0x3FC99999A0000000
  %arrayidx30.i.i.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.1
  store float %mul26.i.i.1, float* %arrayidx30.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %315 = or i64 %_local_id_x.i.0.1, 1
  %add1.i.i.i.1.1 = add nuw nsw i64 %315, %mul.i.i.i
  %conv2.i.i.1.1 = trunc i64 %add1.i.i.i.1.1 to i32
  %add.i.i.1.1 = add i32 %mul.i.i.1, %conv2.i.i.1.1
  %idxprom.i.i.1.1 = sext i32 %add.i.i.1.1 to i64
  %arrayidx.i.i.1.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.1.1
  %316 = load float, float* %arrayidx.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1.1 = add i32 %add.i.i.1.1, -1
  %idxprom5.i.i.1.1 = sext i32 %add4.i.i.1.1 to i64
  %arrayidx6.i.i.1.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.1.1
  %317 = load float, float* %arrayidx6.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1.1 = fadd float %316, %317
  %add10.i.i.1.1 = add i32 %add.i.i.1.1, 1
  %idxprom11.i.i.1.1 = sext i32 %add10.i.i.1.1 to i64
  %arrayidx12.i.i.1.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.1.1
  %318 = load float, float* %arrayidx12.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1.1 = fadd float %add7.i.i.1.1, %318
  %add16.i.i.1.1 = add nsw i32 %mul15.i.i.1, %conv2.i.i.1.1
  %idxprom17.i.i.1.1 = sext i32 %add16.i.i.1.1 to i64
  %arrayidx18.i.i.1.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.1.1
  %319 = load float, float* %arrayidx18.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1.1 = fadd float %add13.i.i.1.1, %319
  %add22.i.i.1.1 = add nsw i32 %mul21.i.i.1, %conv2.i.i.1.1
  %idxprom23.i.i.1.1 = sext i32 %add22.i.i.1.1 to i64
  %arrayidx24.i.i.1.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.1.1
  %320 = load float, float* %arrayidx24.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1.1 = fadd float %add19.i.i.1.1, %320
  %mul26.i.i.1.1 = fmul float %add25.i.i.1.1, 0x3FC99999A0000000
  %arrayidx30.i.i.1.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.1.1
  store float %mul26.i.i.1.1, float* %arrayidx30.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %321 = add nuw nsw i64 %_local_id_x.i.0.1, 2
  %exitcond.1.not.1 = icmp eq i64 %321, 32
  br i1 %exitcond.1.not.1, label %pregion_for_end.i.i.1.loopexit, label %pregion_for_entry.entry.i.i.1, !llvm.loop !30

pregion_for_end.i.i.1.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.1
  br label %pregion_for_end.i.i.1

pregion_for_end.i.i.1:                            ; preds = %pregion_for_end.i.i.1.loopexit, %vector.body20
  %322 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.2 = or i32 %322, 2
  %mul.i.i.2 = mul nsw i32 %15, %conv.i.i.2
  %add14.i.i.2 = or i32 %322, 3
  %mul15.i.i.2 = mul nsw i32 %add14.i.i.2, %15
  %sub20.i.i.2 = add nsw i32 %conv.i.i.2, -1
  %mul21.i.i.2 = mul nsw i32 %sub20.i.i.2, %15
  %323 = mul i32 %15, %conv.i.i.2
  %324 = trunc i64 %2 to i32
  %325 = shl i32 %324, 5
  %326 = add nsw i32 %323, %325
  %327 = icmp sgt i32 %326, 2147483616
  %328 = add i32 %323, %325
  %329 = add i32 %328, -1
  %330 = add i32 %328, 30
  %331 = icmp slt i32 %330, %329
  %332 = or i1 %327, %331
  %333 = add i32 %323, %325
  %334 = or i32 %333, 1
  %335 = icmp sgt i32 %334, 2147483616
  %336 = or i1 %332, %335
  %337 = mul i32 %15, %add14.i.i.2
  %338 = add nsw i32 %337, %325
  %339 = icmp sgt i32 %338, 2147483616
  %340 = or i1 %336, %339
  %341 = mul i32 %15, %add14.i.i
  %342 = add nsw i32 %341, %325
  %343 = icmp sgt i32 %342, 2147483616
  %344 = or i1 %340, %343
  br i1 %344, label %pregion_for_entry.entry.i.i.2.preheader, label %vector.body50

pregion_for_entry.entry.i.i.2.preheader:          ; preds = %pregion_for_end.i.i.1
  br label %pregion_for_entry.entry.i.i.2

vector.body50:                                    ; preds = %pregion_for_end.i.i.1
  %345 = trunc i64 %mul.i.i.i to i32
  %346 = add i32 %mul.i.i.2, %345
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds float, float* %7, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %wide.load73 = load <8 x float>, <8 x float>* %349, align 4, !tbaa !12, !llvm.access.group !16
  %350 = add i32 %346, -1
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds float, float* %7, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %wide.load74 = load <8 x float>, <8 x float>* %353, align 4, !tbaa !12, !llvm.access.group !16
  %354 = fadd <8 x float> %wide.load73, %wide.load74
  %355 = or i32 %346, 1
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds float, float* %7, i64 %356
  %358 = bitcast float* %357 to <8 x float>*
  %wide.load75 = load <8 x float>, <8 x float>* %358, align 4, !tbaa !12, !llvm.access.group !16
  %359 = fadd <8 x float> %354, %wide.load75
  %360 = add nsw i32 %mul15.i.i.2, %345
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds float, float* %7, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %wide.load76 = load <8 x float>, <8 x float>* %363, align 4, !tbaa !12, !llvm.access.group !16
  %364 = fadd <8 x float> %359, %wide.load76
  %365 = add nsw i32 %mul21.i.i.2, %345
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds float, float* %7, i64 %366
  %368 = bitcast float* %367 to <8 x float>*
  %wide.load77 = load <8 x float>, <8 x float>* %368, align 4, !tbaa !12, !llvm.access.group !16
  %369 = fadd <8 x float> %364, %wide.load77
  %370 = fmul <8 x float> %369, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %371 = getelementptr inbounds float, float* %11, i64 %347
  %372 = bitcast float* %371 to <8 x float>*
  store <8 x float> %370, <8 x float>* %372, align 4, !tbaa !12, !llvm.access.group !16
  %373 = trunc i64 %mul.i.i.i to i32
  %374 = or i32 %373, 8
  %375 = add i32 %mul.i.i.2, %374
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds float, float* %7, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %wide.load73.1 = load <8 x float>, <8 x float>* %378, align 4, !tbaa !12, !llvm.access.group !16
  %379 = add i32 %375, -1
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds float, float* %7, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %wide.load74.1 = load <8 x float>, <8 x float>* %382, align 4, !tbaa !12, !llvm.access.group !16
  %383 = fadd <8 x float> %wide.load73.1, %wide.load74.1
  %384 = or i32 %375, 1
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds float, float* %7, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %wide.load75.1 = load <8 x float>, <8 x float>* %387, align 4, !tbaa !12, !llvm.access.group !16
  %388 = fadd <8 x float> %383, %wide.load75.1
  %389 = add nsw i32 %mul15.i.i.2, %374
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds float, float* %7, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %wide.load76.1 = load <8 x float>, <8 x float>* %392, align 4, !tbaa !12, !llvm.access.group !16
  %393 = fadd <8 x float> %388, %wide.load76.1
  %394 = add nsw i32 %mul21.i.i.2, %374
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds float, float* %7, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %wide.load77.1 = load <8 x float>, <8 x float>* %397, align 4, !tbaa !12, !llvm.access.group !16
  %398 = fadd <8 x float> %393, %wide.load77.1
  %399 = fmul <8 x float> %398, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %400 = getelementptr inbounds float, float* %11, i64 %376
  %401 = bitcast float* %400 to <8 x float>*
  store <8 x float> %399, <8 x float>* %401, align 4, !tbaa !12, !llvm.access.group !16
  %402 = trunc i64 %mul.i.i.i to i32
  %403 = or i32 %402, 16
  %404 = add i32 %mul.i.i.2, %403
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds float, float* %7, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %wide.load73.2 = load <8 x float>, <8 x float>* %407, align 4, !tbaa !12, !llvm.access.group !16
  %408 = add i32 %404, -1
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds float, float* %7, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %wide.load74.2 = load <8 x float>, <8 x float>* %411, align 4, !tbaa !12, !llvm.access.group !16
  %412 = fadd <8 x float> %wide.load73.2, %wide.load74.2
  %413 = or i32 %404, 1
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds float, float* %7, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %wide.load75.2 = load <8 x float>, <8 x float>* %416, align 4, !tbaa !12, !llvm.access.group !16
  %417 = fadd <8 x float> %412, %wide.load75.2
  %418 = add nsw i32 %mul15.i.i.2, %403
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds float, float* %7, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %wide.load76.2 = load <8 x float>, <8 x float>* %421, align 4, !tbaa !12, !llvm.access.group !16
  %422 = fadd <8 x float> %417, %wide.load76.2
  %423 = add nsw i32 %mul21.i.i.2, %403
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds float, float* %7, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %wide.load77.2 = load <8 x float>, <8 x float>* %426, align 4, !tbaa !12, !llvm.access.group !16
  %427 = fadd <8 x float> %422, %wide.load77.2
  %428 = fmul <8 x float> %427, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %429 = getelementptr inbounds float, float* %11, i64 %405
  %430 = bitcast float* %429 to <8 x float>*
  store <8 x float> %428, <8 x float>* %430, align 4, !tbaa !12, !llvm.access.group !16
  %431 = trunc i64 %mul.i.i.i to i32
  %432 = or i32 %431, 24
  %433 = add i32 %mul.i.i.2, %432
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float, float* %7, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %wide.load73.3 = load <8 x float>, <8 x float>* %436, align 4, !tbaa !12, !llvm.access.group !16
  %437 = add i32 %433, -1
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds float, float* %7, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %wide.load74.3 = load <8 x float>, <8 x float>* %440, align 4, !tbaa !12, !llvm.access.group !16
  %441 = fadd <8 x float> %wide.load73.3, %wide.load74.3
  %442 = or i32 %433, 1
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds float, float* %7, i64 %443
  %445 = bitcast float* %444 to <8 x float>*
  %wide.load75.3 = load <8 x float>, <8 x float>* %445, align 4, !tbaa !12, !llvm.access.group !16
  %446 = fadd <8 x float> %441, %wide.load75.3
  %447 = add nsw i32 %mul15.i.i.2, %432
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds float, float* %7, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %wide.load76.3 = load <8 x float>, <8 x float>* %450, align 4, !tbaa !12, !llvm.access.group !16
  %451 = fadd <8 x float> %446, %wide.load76.3
  %452 = add nsw i32 %mul21.i.i.2, %432
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds float, float* %7, i64 %453
  %455 = bitcast float* %454 to <8 x float>*
  %wide.load77.3 = load <8 x float>, <8 x float>* %455, align 4, !tbaa !12, !llvm.access.group !16
  %456 = fadd <8 x float> %451, %wide.load77.3
  %457 = fmul <8 x float> %456, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %458 = getelementptr inbounds float, float* %11, i64 %434
  %459 = bitcast float* %458 to <8 x float>*
  store <8 x float> %457, <8 x float>* %459, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.2

pregion_for_entry.entry.i.i.2:                    ; preds = %pregion_for_entry.entry.i.i.2, %pregion_for_entry.entry.i.i.2.preheader
  %_local_id_x.i.0.2 = phi i64 [ %471, %pregion_for_entry.entry.i.i.2 ], [ 0, %pregion_for_entry.entry.i.i.2.preheader ]
  %add1.i.i.i.2 = add nuw nsw i64 %_local_id_x.i.0.2, %mul.i.i.i
  %conv2.i.i.2 = trunc i64 %add1.i.i.i.2 to i32
  %add.i.i.2 = add i32 %mul.i.i.2, %conv2.i.i.2
  %idxprom.i.i.2 = sext i32 %add.i.i.2 to i64
  %arrayidx.i.i.2 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.2
  %460 = load float, float* %arrayidx.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.2 = add i32 %add.i.i.2, -1
  %idxprom5.i.i.2 = sext i32 %add4.i.i.2 to i64
  %arrayidx6.i.i.2 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.2
  %461 = load float, float* %arrayidx6.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.2 = fadd float %460, %461
  %add10.i.i.2 = or i32 %add.i.i.2, 1
  %idxprom11.i.i.2 = sext i32 %add10.i.i.2 to i64
  %arrayidx12.i.i.2 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.2
  %462 = load float, float* %arrayidx12.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.2 = fadd float %add7.i.i.2, %462
  %add16.i.i.2 = add nsw i32 %mul15.i.i.2, %conv2.i.i.2
  %idxprom17.i.i.2 = sext i32 %add16.i.i.2 to i64
  %arrayidx18.i.i.2 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.2
  %463 = load float, float* %arrayidx18.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.2 = fadd float %add13.i.i.2, %463
  %add22.i.i.2 = add nsw i32 %mul21.i.i.2, %conv2.i.i.2
  %idxprom23.i.i.2 = sext i32 %add22.i.i.2 to i64
  %arrayidx24.i.i.2 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.2
  %464 = load float, float* %arrayidx24.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.2 = fadd float %add19.i.i.2, %464
  %mul26.i.i.2 = fmul float %add25.i.i.2, 0x3FC99999A0000000
  %arrayidx30.i.i.2 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.2
  store float %mul26.i.i.2, float* %arrayidx30.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %465 = or i64 %_local_id_x.i.0.2, 1
  %add1.i.i.i.2.1 = add nuw nsw i64 %465, %mul.i.i.i
  %conv2.i.i.2.1 = trunc i64 %add1.i.i.i.2.1 to i32
  %add.i.i.2.1 = add i32 %mul.i.i.2, %conv2.i.i.2.1
  %idxprom.i.i.2.1 = sext i32 %add.i.i.2.1 to i64
  %arrayidx.i.i.2.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.2.1
  %466 = load float, float* %arrayidx.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.2.1 = add nsw i32 %add.i.i.2.1, -1
  %idxprom5.i.i.2.1 = sext i32 %add4.i.i.2.1 to i64
  %arrayidx6.i.i.2.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.2.1
  %467 = load float, float* %arrayidx6.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.2.1 = fadd float %466, %467
  %add10.i.i.2.1 = add i32 %add.i.i.2.1, 1
  %idxprom11.i.i.2.1 = sext i32 %add10.i.i.2.1 to i64
  %arrayidx12.i.i.2.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.2.1
  %468 = load float, float* %arrayidx12.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.2.1 = fadd float %add7.i.i.2.1, %468
  %add16.i.i.2.1 = add nsw i32 %mul15.i.i.2, %conv2.i.i.2.1
  %idxprom17.i.i.2.1 = sext i32 %add16.i.i.2.1 to i64
  %arrayidx18.i.i.2.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.2.1
  %469 = load float, float* %arrayidx18.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.2.1 = fadd float %add13.i.i.2.1, %469
  %add22.i.i.2.1 = add nsw i32 %mul21.i.i.2, %conv2.i.i.2.1
  %idxprom23.i.i.2.1 = sext i32 %add22.i.i.2.1 to i64
  %arrayidx24.i.i.2.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.2.1
  %470 = load float, float* %arrayidx24.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.2.1 = fadd float %add19.i.i.2.1, %470
  %mul26.i.i.2.1 = fmul float %add25.i.i.2.1, 0x3FC99999A0000000
  %arrayidx30.i.i.2.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.2.1
  store float %mul26.i.i.2.1, float* %arrayidx30.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %471 = add nuw nsw i64 %_local_id_x.i.0.2, 2
  %exitcond.2.not.1 = icmp eq i64 %471, 32
  br i1 %exitcond.2.not.1, label %pregion_for_end.i.i.2.loopexit, label %pregion_for_entry.entry.i.i.2, !llvm.loop !31

pregion_for_end.i.i.2.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.2
  br label %pregion_for_end.i.i.2

pregion_for_end.i.i.2:                            ; preds = %pregion_for_end.i.i.2.loopexit, %vector.body50
  %472 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.3 = or i32 %472, 3
  %mul.i.i.3 = mul nsw i32 %15, %conv.i.i.3
  %add14.i.i.3 = add nuw nsw i32 %conv.i.i.3, 1
  %mul15.i.i.3 = mul nsw i32 %add14.i.i.3, %15
  %sub20.i.i.3 = add nsw i32 %conv.i.i.3, -1
  %mul21.i.i.3 = mul nsw i32 %sub20.i.i.3, %15
  %473 = mul i32 %15, %add14.i.i.2
  %474 = trunc i64 %2 to i32
  %475 = shl i32 %474, 5
  %476 = add nsw i32 %473, %475
  %477 = icmp sgt i32 %476, 2147483616
  %478 = add i32 %473, %475
  %479 = add i32 %478, -1
  %480 = add i32 %478, 30
  %481 = icmp slt i32 %480, %479
  %482 = or i1 %477, %481
  %483 = add i32 %473, %475
  %484 = add i32 %483, 1
  %485 = add i32 %483, 32
  %486 = icmp slt i32 %485, %484
  %487 = or i1 %482, %486
  %488 = or i32 %conv.i.i, 4
  %489 = mul i32 %15, %488
  %490 = add nsw i32 %489, %475
  %491 = icmp sgt i32 %490, 2147483616
  %492 = or i1 %487, %491
  %493 = mul i32 %15, %conv.i.i.2
  %494 = add nsw i32 %493, %475
  %495 = icmp sgt i32 %494, 2147483616
  %496 = or i1 %492, %495
  br i1 %496, label %pregion_for_entry.entry.i.i.3.preheader, label %vector.body80

pregion_for_entry.entry.i.i.3.preheader:          ; preds = %pregion_for_end.i.i.2
  br label %pregion_for_entry.entry.i.i.3

vector.body80:                                    ; preds = %pregion_for_end.i.i.2
  %497 = trunc i64 %mul.i.i.i to i32
  %498 = add i32 %mul.i.i.3, %497
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds float, float* %7, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %wide.load103 = load <8 x float>, <8 x float>* %501, align 4, !tbaa !12, !llvm.access.group !16
  %502 = add i32 %498, -1
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds float, float* %7, i64 %503
  %505 = bitcast float* %504 to <8 x float>*
  %wide.load104 = load <8 x float>, <8 x float>* %505, align 4, !tbaa !12, !llvm.access.group !16
  %506 = fadd <8 x float> %wide.load103, %wide.load104
  %507 = add i32 %498, 1
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds float, float* %7, i64 %508
  %510 = bitcast float* %509 to <8 x float>*
  %wide.load105 = load <8 x float>, <8 x float>* %510, align 4, !tbaa !12, !llvm.access.group !16
  %511 = fadd <8 x float> %506, %wide.load105
  %512 = add nsw i32 %mul15.i.i.3, %497
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds float, float* %7, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %wide.load106 = load <8 x float>, <8 x float>* %515, align 4, !tbaa !12, !llvm.access.group !16
  %516 = fadd <8 x float> %511, %wide.load106
  %517 = add nsw i32 %mul21.i.i.3, %497
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds float, float* %7, i64 %518
  %520 = bitcast float* %519 to <8 x float>*
  %wide.load107 = load <8 x float>, <8 x float>* %520, align 4, !tbaa !12, !llvm.access.group !16
  %521 = fadd <8 x float> %516, %wide.load107
  %522 = fmul <8 x float> %521, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %523 = getelementptr inbounds float, float* %11, i64 %499
  %524 = bitcast float* %523 to <8 x float>*
  store <8 x float> %522, <8 x float>* %524, align 4, !tbaa !12, !llvm.access.group !16
  %525 = trunc i64 %mul.i.i.i to i32
  %526 = or i32 %525, 8
  %527 = add i32 %mul.i.i.3, %526
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds float, float* %7, i64 %528
  %530 = bitcast float* %529 to <8 x float>*
  %wide.load103.1 = load <8 x float>, <8 x float>* %530, align 4, !tbaa !12, !llvm.access.group !16
  %531 = add i32 %527, -1
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds float, float* %7, i64 %532
  %534 = bitcast float* %533 to <8 x float>*
  %wide.load104.1 = load <8 x float>, <8 x float>* %534, align 4, !tbaa !12, !llvm.access.group !16
  %535 = fadd <8 x float> %wide.load103.1, %wide.load104.1
  %536 = add i32 %527, 1
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds float, float* %7, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %wide.load105.1 = load <8 x float>, <8 x float>* %539, align 4, !tbaa !12, !llvm.access.group !16
  %540 = fadd <8 x float> %535, %wide.load105.1
  %541 = add nsw i32 %mul15.i.i.3, %526
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds float, float* %7, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %wide.load106.1 = load <8 x float>, <8 x float>* %544, align 4, !tbaa !12, !llvm.access.group !16
  %545 = fadd <8 x float> %540, %wide.load106.1
  %546 = add nsw i32 %mul21.i.i.3, %526
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds float, float* %7, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %wide.load107.1 = load <8 x float>, <8 x float>* %549, align 4, !tbaa !12, !llvm.access.group !16
  %550 = fadd <8 x float> %545, %wide.load107.1
  %551 = fmul <8 x float> %550, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %552 = getelementptr inbounds float, float* %11, i64 %528
  %553 = bitcast float* %552 to <8 x float>*
  store <8 x float> %551, <8 x float>* %553, align 4, !tbaa !12, !llvm.access.group !16
  %554 = trunc i64 %mul.i.i.i to i32
  %555 = or i32 %554, 16
  %556 = add i32 %mul.i.i.3, %555
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds float, float* %7, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %wide.load103.2 = load <8 x float>, <8 x float>* %559, align 4, !tbaa !12, !llvm.access.group !16
  %560 = add i32 %556, -1
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds float, float* %7, i64 %561
  %563 = bitcast float* %562 to <8 x float>*
  %wide.load104.2 = load <8 x float>, <8 x float>* %563, align 4, !tbaa !12, !llvm.access.group !16
  %564 = fadd <8 x float> %wide.load103.2, %wide.load104.2
  %565 = add i32 %556, 1
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds float, float* %7, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %wide.load105.2 = load <8 x float>, <8 x float>* %568, align 4, !tbaa !12, !llvm.access.group !16
  %569 = fadd <8 x float> %564, %wide.load105.2
  %570 = add nsw i32 %mul15.i.i.3, %555
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds float, float* %7, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %wide.load106.2 = load <8 x float>, <8 x float>* %573, align 4, !tbaa !12, !llvm.access.group !16
  %574 = fadd <8 x float> %569, %wide.load106.2
  %575 = add nsw i32 %mul21.i.i.3, %555
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds float, float* %7, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %wide.load107.2 = load <8 x float>, <8 x float>* %578, align 4, !tbaa !12, !llvm.access.group !16
  %579 = fadd <8 x float> %574, %wide.load107.2
  %580 = fmul <8 x float> %579, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %581 = getelementptr inbounds float, float* %11, i64 %557
  %582 = bitcast float* %581 to <8 x float>*
  store <8 x float> %580, <8 x float>* %582, align 4, !tbaa !12, !llvm.access.group !16
  %583 = trunc i64 %mul.i.i.i to i32
  %584 = or i32 %583, 24
  %585 = add i32 %mul.i.i.3, %584
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds float, float* %7, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %wide.load103.3 = load <8 x float>, <8 x float>* %588, align 4, !tbaa !12, !llvm.access.group !16
  %589 = add i32 %585, -1
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds float, float* %7, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %wide.load104.3 = load <8 x float>, <8 x float>* %592, align 4, !tbaa !12, !llvm.access.group !16
  %593 = fadd <8 x float> %wide.load103.3, %wide.load104.3
  %594 = add i32 %585, 1
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds float, float* %7, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %wide.load105.3 = load <8 x float>, <8 x float>* %597, align 4, !tbaa !12, !llvm.access.group !16
  %598 = fadd <8 x float> %593, %wide.load105.3
  %599 = add nsw i32 %mul15.i.i.3, %584
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds float, float* %7, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %wide.load106.3 = load <8 x float>, <8 x float>* %602, align 4, !tbaa !12, !llvm.access.group !16
  %603 = fadd <8 x float> %598, %wide.load106.3
  %604 = add nsw i32 %mul21.i.i.3, %584
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds float, float* %7, i64 %605
  %607 = bitcast float* %606 to <8 x float>*
  %wide.load107.3 = load <8 x float>, <8 x float>* %607, align 4, !tbaa !12, !llvm.access.group !16
  %608 = fadd <8 x float> %603, %wide.load107.3
  %609 = fmul <8 x float> %608, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %610 = getelementptr inbounds float, float* %11, i64 %586
  %611 = bitcast float* %610 to <8 x float>*
  store <8 x float> %609, <8 x float>* %611, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.3

pregion_for_entry.entry.i.i.3:                    ; preds = %pregion_for_entry.entry.i.i.3, %pregion_for_entry.entry.i.i.3.preheader
  %_local_id_x.i.0.3 = phi i64 [ %623, %pregion_for_entry.entry.i.i.3 ], [ 0, %pregion_for_entry.entry.i.i.3.preheader ]
  %add1.i.i.i.3 = add nuw nsw i64 %_local_id_x.i.0.3, %mul.i.i.i
  %conv2.i.i.3 = trunc i64 %add1.i.i.i.3 to i32
  %add.i.i.3 = add i32 %mul.i.i.3, %conv2.i.i.3
  %idxprom.i.i.3 = sext i32 %add.i.i.3 to i64
  %arrayidx.i.i.3 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.3
  %612 = load float, float* %arrayidx.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.3 = add i32 %add.i.i.3, -1
  %idxprom5.i.i.3 = sext i32 %add4.i.i.3 to i64
  %arrayidx6.i.i.3 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.3
  %613 = load float, float* %arrayidx6.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.3 = fadd float %612, %613
  %add10.i.i.3 = add i32 %add.i.i.3, 1
  %idxprom11.i.i.3 = sext i32 %add10.i.i.3 to i64
  %arrayidx12.i.i.3 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.3
  %614 = load float, float* %arrayidx12.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.3 = fadd float %add7.i.i.3, %614
  %add16.i.i.3 = add nsw i32 %mul15.i.i.3, %conv2.i.i.3
  %idxprom17.i.i.3 = sext i32 %add16.i.i.3 to i64
  %arrayidx18.i.i.3 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.3
  %615 = load float, float* %arrayidx18.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.3 = fadd float %add13.i.i.3, %615
  %add22.i.i.3 = add nsw i32 %mul21.i.i.3, %conv2.i.i.3
  %idxprom23.i.i.3 = sext i32 %add22.i.i.3 to i64
  %arrayidx24.i.i.3 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.3
  %616 = load float, float* %arrayidx24.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.3 = fadd float %add19.i.i.3, %616
  %mul26.i.i.3 = fmul float %add25.i.i.3, 0x3FC99999A0000000
  %arrayidx30.i.i.3 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.3
  store float %mul26.i.i.3, float* %arrayidx30.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %617 = or i64 %_local_id_x.i.0.3, 1
  %add1.i.i.i.3.1 = add nuw nsw i64 %617, %mul.i.i.i
  %conv2.i.i.3.1 = trunc i64 %add1.i.i.i.3.1 to i32
  %add.i.i.3.1 = add i32 %mul.i.i.3, %conv2.i.i.3.1
  %idxprom.i.i.3.1 = sext i32 %add.i.i.3.1 to i64
  %arrayidx.i.i.3.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.3.1
  %618 = load float, float* %arrayidx.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.3.1 = add i32 %add.i.i.3.1, -1
  %idxprom5.i.i.3.1 = sext i32 %add4.i.i.3.1 to i64
  %arrayidx6.i.i.3.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.3.1
  %619 = load float, float* %arrayidx6.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.3.1 = fadd float %618, %619
  %add10.i.i.3.1 = add i32 %add.i.i.3.1, 1
  %idxprom11.i.i.3.1 = sext i32 %add10.i.i.3.1 to i64
  %arrayidx12.i.i.3.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.3.1
  %620 = load float, float* %arrayidx12.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.3.1 = fadd float %add7.i.i.3.1, %620
  %add16.i.i.3.1 = add nsw i32 %mul15.i.i.3, %conv2.i.i.3.1
  %idxprom17.i.i.3.1 = sext i32 %add16.i.i.3.1 to i64
  %arrayidx18.i.i.3.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.3.1
  %621 = load float, float* %arrayidx18.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.3.1 = fadd float %add13.i.i.3.1, %621
  %add22.i.i.3.1 = add nsw i32 %mul21.i.i.3, %conv2.i.i.3.1
  %idxprom23.i.i.3.1 = sext i32 %add22.i.i.3.1 to i64
  %arrayidx24.i.i.3.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.3.1
  %622 = load float, float* %arrayidx24.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.3.1 = fadd float %add19.i.i.3.1, %622
  %mul26.i.i.3.1 = fmul float %add25.i.i.3.1, 0x3FC99999A0000000
  %arrayidx30.i.i.3.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.3.1
  store float %mul26.i.i.3.1, float* %arrayidx30.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %623 = add nuw nsw i64 %_local_id_x.i.0.3, 2
  %exitcond.3.not.1 = icmp eq i64 %623, 32
  br i1 %exitcond.3.not.1, label %pregion_for_end.i.i.3.loopexit, label %pregion_for_entry.entry.i.i.3, !llvm.loop !32

pregion_for_end.i.i.3.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.3
  br label %pregion_for_end.i.i.3

pregion_for_end.i.i.3:                            ; preds = %pregion_for_end.i.i.3.loopexit, %vector.body80
  %624 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.4 = or i32 %624, 4
  %mul.i.i.4 = mul nsw i32 %15, %conv.i.i.4
  %add14.i.i.4 = or i32 %624, 5
  %mul15.i.i.4 = mul nsw i32 %add14.i.i.4, %15
  %sub20.i.i.4 = add nsw i32 %conv.i.i.4, -1
  %mul21.i.i.4 = mul nsw i32 %sub20.i.i.4, %15
  %625 = mul i32 %15, %conv.i.i.4
  %626 = trunc i64 %2 to i32
  %627 = shl i32 %626, 5
  %628 = add nsw i32 %625, %627
  %629 = icmp sgt i32 %628, 2147483616
  %630 = add i32 %625, %627
  %631 = add i32 %630, -1
  %632 = add i32 %630, 30
  %633 = icmp slt i32 %632, %631
  %634 = or i1 %629, %633
  %635 = add i32 %625, %627
  %636 = or i32 %635, 1
  %637 = icmp sgt i32 %636, 2147483616
  %638 = or i1 %634, %637
  %639 = mul i32 %15, %add14.i.i.4
  %640 = add nsw i32 %639, %627
  %641 = icmp sgt i32 %640, 2147483616
  %642 = or i1 %638, %641
  %643 = mul i32 %15, %add14.i.i.2
  %644 = add nsw i32 %643, %627
  %645 = icmp sgt i32 %644, 2147483616
  %646 = or i1 %642, %645
  br i1 %646, label %pregion_for_entry.entry.i.i.4.preheader, label %vector.body110

pregion_for_entry.entry.i.i.4.preheader:          ; preds = %pregion_for_end.i.i.3
  br label %pregion_for_entry.entry.i.i.4

vector.body110:                                   ; preds = %pregion_for_end.i.i.3
  %647 = trunc i64 %mul.i.i.i to i32
  %648 = add i32 %mul.i.i.4, %647
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds float, float* %7, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %wide.load133 = load <8 x float>, <8 x float>* %651, align 4, !tbaa !12, !llvm.access.group !16
  %652 = add i32 %648, -1
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds float, float* %7, i64 %653
  %655 = bitcast float* %654 to <8 x float>*
  %wide.load134 = load <8 x float>, <8 x float>* %655, align 4, !tbaa !12, !llvm.access.group !16
  %656 = fadd <8 x float> %wide.load133, %wide.load134
  %657 = or i32 %648, 1
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds float, float* %7, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %wide.load135 = load <8 x float>, <8 x float>* %660, align 4, !tbaa !12, !llvm.access.group !16
  %661 = fadd <8 x float> %656, %wide.load135
  %662 = add nsw i32 %mul15.i.i.4, %647
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds float, float* %7, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %wide.load136 = load <8 x float>, <8 x float>* %665, align 4, !tbaa !12, !llvm.access.group !16
  %666 = fadd <8 x float> %661, %wide.load136
  %667 = add nsw i32 %mul21.i.i.4, %647
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds float, float* %7, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %wide.load137 = load <8 x float>, <8 x float>* %670, align 4, !tbaa !12, !llvm.access.group !16
  %671 = fadd <8 x float> %666, %wide.load137
  %672 = fmul <8 x float> %671, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %673 = getelementptr inbounds float, float* %11, i64 %649
  %674 = bitcast float* %673 to <8 x float>*
  store <8 x float> %672, <8 x float>* %674, align 4, !tbaa !12, !llvm.access.group !16
  %675 = trunc i64 %mul.i.i.i to i32
  %676 = or i32 %675, 8
  %677 = add i32 %mul.i.i.4, %676
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds float, float* %7, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %wide.load133.1 = load <8 x float>, <8 x float>* %680, align 4, !tbaa !12, !llvm.access.group !16
  %681 = add i32 %677, -1
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds float, float* %7, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %wide.load134.1 = load <8 x float>, <8 x float>* %684, align 4, !tbaa !12, !llvm.access.group !16
  %685 = fadd <8 x float> %wide.load133.1, %wide.load134.1
  %686 = or i32 %677, 1
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds float, float* %7, i64 %687
  %689 = bitcast float* %688 to <8 x float>*
  %wide.load135.1 = load <8 x float>, <8 x float>* %689, align 4, !tbaa !12, !llvm.access.group !16
  %690 = fadd <8 x float> %685, %wide.load135.1
  %691 = add nsw i32 %mul15.i.i.4, %676
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds float, float* %7, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %wide.load136.1 = load <8 x float>, <8 x float>* %694, align 4, !tbaa !12, !llvm.access.group !16
  %695 = fadd <8 x float> %690, %wide.load136.1
  %696 = add nsw i32 %mul21.i.i.4, %676
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds float, float* %7, i64 %697
  %699 = bitcast float* %698 to <8 x float>*
  %wide.load137.1 = load <8 x float>, <8 x float>* %699, align 4, !tbaa !12, !llvm.access.group !16
  %700 = fadd <8 x float> %695, %wide.load137.1
  %701 = fmul <8 x float> %700, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %702 = getelementptr inbounds float, float* %11, i64 %678
  %703 = bitcast float* %702 to <8 x float>*
  store <8 x float> %701, <8 x float>* %703, align 4, !tbaa !12, !llvm.access.group !16
  %704 = trunc i64 %mul.i.i.i to i32
  %705 = or i32 %704, 16
  %706 = add i32 %mul.i.i.4, %705
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds float, float* %7, i64 %707
  %709 = bitcast float* %708 to <8 x float>*
  %wide.load133.2 = load <8 x float>, <8 x float>* %709, align 4, !tbaa !12, !llvm.access.group !16
  %710 = add i32 %706, -1
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds float, float* %7, i64 %711
  %713 = bitcast float* %712 to <8 x float>*
  %wide.load134.2 = load <8 x float>, <8 x float>* %713, align 4, !tbaa !12, !llvm.access.group !16
  %714 = fadd <8 x float> %wide.load133.2, %wide.load134.2
  %715 = or i32 %706, 1
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds float, float* %7, i64 %716
  %718 = bitcast float* %717 to <8 x float>*
  %wide.load135.2 = load <8 x float>, <8 x float>* %718, align 4, !tbaa !12, !llvm.access.group !16
  %719 = fadd <8 x float> %714, %wide.load135.2
  %720 = add nsw i32 %mul15.i.i.4, %705
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds float, float* %7, i64 %721
  %723 = bitcast float* %722 to <8 x float>*
  %wide.load136.2 = load <8 x float>, <8 x float>* %723, align 4, !tbaa !12, !llvm.access.group !16
  %724 = fadd <8 x float> %719, %wide.load136.2
  %725 = add nsw i32 %mul21.i.i.4, %705
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds float, float* %7, i64 %726
  %728 = bitcast float* %727 to <8 x float>*
  %wide.load137.2 = load <8 x float>, <8 x float>* %728, align 4, !tbaa !12, !llvm.access.group !16
  %729 = fadd <8 x float> %724, %wide.load137.2
  %730 = fmul <8 x float> %729, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %731 = getelementptr inbounds float, float* %11, i64 %707
  %732 = bitcast float* %731 to <8 x float>*
  store <8 x float> %730, <8 x float>* %732, align 4, !tbaa !12, !llvm.access.group !16
  %733 = trunc i64 %mul.i.i.i to i32
  %734 = or i32 %733, 24
  %735 = add i32 %mul.i.i.4, %734
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds float, float* %7, i64 %736
  %738 = bitcast float* %737 to <8 x float>*
  %wide.load133.3 = load <8 x float>, <8 x float>* %738, align 4, !tbaa !12, !llvm.access.group !16
  %739 = add i32 %735, -1
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float, float* %7, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %wide.load134.3 = load <8 x float>, <8 x float>* %742, align 4, !tbaa !12, !llvm.access.group !16
  %743 = fadd <8 x float> %wide.load133.3, %wide.load134.3
  %744 = or i32 %735, 1
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds float, float* %7, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %wide.load135.3 = load <8 x float>, <8 x float>* %747, align 4, !tbaa !12, !llvm.access.group !16
  %748 = fadd <8 x float> %743, %wide.load135.3
  %749 = add nsw i32 %mul15.i.i.4, %734
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float, float* %7, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %wide.load136.3 = load <8 x float>, <8 x float>* %752, align 4, !tbaa !12, !llvm.access.group !16
  %753 = fadd <8 x float> %748, %wide.load136.3
  %754 = add nsw i32 %mul21.i.i.4, %734
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float, float* %7, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %wide.load137.3 = load <8 x float>, <8 x float>* %757, align 4, !tbaa !12, !llvm.access.group !16
  %758 = fadd <8 x float> %753, %wide.load137.3
  %759 = fmul <8 x float> %758, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %760 = getelementptr inbounds float, float* %11, i64 %736
  %761 = bitcast float* %760 to <8 x float>*
  store <8 x float> %759, <8 x float>* %761, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.4

pregion_for_entry.entry.i.i.4:                    ; preds = %pregion_for_entry.entry.i.i.4, %pregion_for_entry.entry.i.i.4.preheader
  %_local_id_x.i.0.4 = phi i64 [ %773, %pregion_for_entry.entry.i.i.4 ], [ 0, %pregion_for_entry.entry.i.i.4.preheader ]
  %add1.i.i.i.4 = add nuw nsw i64 %_local_id_x.i.0.4, %mul.i.i.i
  %conv2.i.i.4 = trunc i64 %add1.i.i.i.4 to i32
  %add.i.i.4 = add i32 %mul.i.i.4, %conv2.i.i.4
  %idxprom.i.i.4 = sext i32 %add.i.i.4 to i64
  %arrayidx.i.i.4 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.4
  %762 = load float, float* %arrayidx.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.4 = add i32 %add.i.i.4, -1
  %idxprom5.i.i.4 = sext i32 %add4.i.i.4 to i64
  %arrayidx6.i.i.4 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.4
  %763 = load float, float* %arrayidx6.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.4 = fadd float %762, %763
  %add10.i.i.4 = or i32 %add.i.i.4, 1
  %idxprom11.i.i.4 = sext i32 %add10.i.i.4 to i64
  %arrayidx12.i.i.4 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.4
  %764 = load float, float* %arrayidx12.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.4 = fadd float %add7.i.i.4, %764
  %add16.i.i.4 = add nsw i32 %mul15.i.i.4, %conv2.i.i.4
  %idxprom17.i.i.4 = sext i32 %add16.i.i.4 to i64
  %arrayidx18.i.i.4 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.4
  %765 = load float, float* %arrayidx18.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.4 = fadd float %add13.i.i.4, %765
  %add22.i.i.4 = add nsw i32 %mul21.i.i.4, %conv2.i.i.4
  %idxprom23.i.i.4 = sext i32 %add22.i.i.4 to i64
  %arrayidx24.i.i.4 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.4
  %766 = load float, float* %arrayidx24.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.4 = fadd float %add19.i.i.4, %766
  %mul26.i.i.4 = fmul float %add25.i.i.4, 0x3FC99999A0000000
  %arrayidx30.i.i.4 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.4
  store float %mul26.i.i.4, float* %arrayidx30.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %767 = or i64 %_local_id_x.i.0.4, 1
  %add1.i.i.i.4.1 = add nuw nsw i64 %767, %mul.i.i.i
  %conv2.i.i.4.1 = trunc i64 %add1.i.i.i.4.1 to i32
  %add.i.i.4.1 = add i32 %mul.i.i.4, %conv2.i.i.4.1
  %idxprom.i.i.4.1 = sext i32 %add.i.i.4.1 to i64
  %arrayidx.i.i.4.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.4.1
  %768 = load float, float* %arrayidx.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.4.1 = add nsw i32 %add.i.i.4.1, -1
  %idxprom5.i.i.4.1 = sext i32 %add4.i.i.4.1 to i64
  %arrayidx6.i.i.4.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.4.1
  %769 = load float, float* %arrayidx6.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.4.1 = fadd float %768, %769
  %add10.i.i.4.1 = add i32 %add.i.i.4.1, 1
  %idxprom11.i.i.4.1 = sext i32 %add10.i.i.4.1 to i64
  %arrayidx12.i.i.4.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.4.1
  %770 = load float, float* %arrayidx12.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.4.1 = fadd float %add7.i.i.4.1, %770
  %add16.i.i.4.1 = add nsw i32 %mul15.i.i.4, %conv2.i.i.4.1
  %idxprom17.i.i.4.1 = sext i32 %add16.i.i.4.1 to i64
  %arrayidx18.i.i.4.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.4.1
  %771 = load float, float* %arrayidx18.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.4.1 = fadd float %add13.i.i.4.1, %771
  %add22.i.i.4.1 = add nsw i32 %mul21.i.i.4, %conv2.i.i.4.1
  %idxprom23.i.i.4.1 = sext i32 %add22.i.i.4.1 to i64
  %arrayidx24.i.i.4.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.4.1
  %772 = load float, float* %arrayidx24.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.4.1 = fadd float %add19.i.i.4.1, %772
  %mul26.i.i.4.1 = fmul float %add25.i.i.4.1, 0x3FC99999A0000000
  %arrayidx30.i.i.4.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.4.1
  store float %mul26.i.i.4.1, float* %arrayidx30.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %773 = add nuw nsw i64 %_local_id_x.i.0.4, 2
  %exitcond.4.not.1 = icmp eq i64 %773, 32
  br i1 %exitcond.4.not.1, label %pregion_for_end.i.i.4.loopexit, label %pregion_for_entry.entry.i.i.4, !llvm.loop !33

pregion_for_end.i.i.4.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.4
  br label %pregion_for_end.i.i.4

pregion_for_end.i.i.4:                            ; preds = %pregion_for_end.i.i.4.loopexit, %vector.body110
  %774 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.5 = or i32 %774, 5
  %mul.i.i.5 = mul nsw i32 %15, %conv.i.i.5
  %add14.i.i.5 = add nuw nsw i32 %conv.i.i.5, 1
  %mul15.i.i.5 = mul nsw i32 %add14.i.i.5, %15
  %sub20.i.i.5 = add nsw i32 %conv.i.i.5, -1
  %mul21.i.i.5 = mul nsw i32 %sub20.i.i.5, %15
  %775 = mul i32 %15, %add14.i.i.4
  %776 = trunc i64 %2 to i32
  %777 = shl i32 %776, 5
  %778 = add nsw i32 %775, %777
  %779 = icmp sgt i32 %778, 2147483616
  %780 = add i32 %775, %777
  %781 = add i32 %780, -1
  %782 = add i32 %780, 30
  %783 = icmp slt i32 %782, %781
  %784 = or i1 %779, %783
  %785 = add i32 %775, %777
  %786 = add i32 %785, 1
  %787 = add i32 %785, 32
  %788 = icmp slt i32 %787, %786
  %789 = or i1 %784, %788
  %790 = or i32 %conv.i.i, 6
  %791 = mul i32 %15, %790
  %792 = add nsw i32 %791, %777
  %793 = icmp sgt i32 %792, 2147483616
  %794 = or i1 %789, %793
  %795 = mul i32 %15, %conv.i.i.4
  %796 = add nsw i32 %795, %777
  %797 = icmp sgt i32 %796, 2147483616
  %798 = or i1 %794, %797
  br i1 %798, label %pregion_for_entry.entry.i.i.5.preheader, label %vector.body140

pregion_for_entry.entry.i.i.5.preheader:          ; preds = %pregion_for_end.i.i.4
  br label %pregion_for_entry.entry.i.i.5

vector.body140:                                   ; preds = %pregion_for_end.i.i.4
  %799 = trunc i64 %mul.i.i.i to i32
  %800 = add i32 %mul.i.i.5, %799
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %7, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %wide.load163 = load <8 x float>, <8 x float>* %803, align 4, !tbaa !12, !llvm.access.group !16
  %804 = add i32 %800, -1
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds float, float* %7, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %wide.load164 = load <8 x float>, <8 x float>* %807, align 4, !tbaa !12, !llvm.access.group !16
  %808 = fadd <8 x float> %wide.load163, %wide.load164
  %809 = add i32 %800, 1
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float, float* %7, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %wide.load165 = load <8 x float>, <8 x float>* %812, align 4, !tbaa !12, !llvm.access.group !16
  %813 = fadd <8 x float> %808, %wide.load165
  %814 = add nsw i32 %mul15.i.i.5, %799
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float, float* %7, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %wide.load166 = load <8 x float>, <8 x float>* %817, align 4, !tbaa !12, !llvm.access.group !16
  %818 = fadd <8 x float> %813, %wide.load166
  %819 = add nsw i32 %mul21.i.i.5, %799
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float* %7, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %wide.load167 = load <8 x float>, <8 x float>* %822, align 4, !tbaa !12, !llvm.access.group !16
  %823 = fadd <8 x float> %818, %wide.load167
  %824 = fmul <8 x float> %823, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %825 = getelementptr inbounds float, float* %11, i64 %801
  %826 = bitcast float* %825 to <8 x float>*
  store <8 x float> %824, <8 x float>* %826, align 4, !tbaa !12, !llvm.access.group !16
  %827 = trunc i64 %mul.i.i.i to i32
  %828 = or i32 %827, 8
  %829 = add i32 %mul.i.i.5, %828
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %7, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %wide.load163.1 = load <8 x float>, <8 x float>* %832, align 4, !tbaa !12, !llvm.access.group !16
  %833 = add i32 %829, -1
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds float, float* %7, i64 %834
  %836 = bitcast float* %835 to <8 x float>*
  %wide.load164.1 = load <8 x float>, <8 x float>* %836, align 4, !tbaa !12, !llvm.access.group !16
  %837 = fadd <8 x float> %wide.load163.1, %wide.load164.1
  %838 = add i32 %829, 1
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float, float* %7, i64 %839
  %841 = bitcast float* %840 to <8 x float>*
  %wide.load165.1 = load <8 x float>, <8 x float>* %841, align 4, !tbaa !12, !llvm.access.group !16
  %842 = fadd <8 x float> %837, %wide.load165.1
  %843 = add nsw i32 %mul15.i.i.5, %828
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds float, float* %7, i64 %844
  %846 = bitcast float* %845 to <8 x float>*
  %wide.load166.1 = load <8 x float>, <8 x float>* %846, align 4, !tbaa !12, !llvm.access.group !16
  %847 = fadd <8 x float> %842, %wide.load166.1
  %848 = add nsw i32 %mul21.i.i.5, %828
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds float, float* %7, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %wide.load167.1 = load <8 x float>, <8 x float>* %851, align 4, !tbaa !12, !llvm.access.group !16
  %852 = fadd <8 x float> %847, %wide.load167.1
  %853 = fmul <8 x float> %852, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %854 = getelementptr inbounds float, float* %11, i64 %830
  %855 = bitcast float* %854 to <8 x float>*
  store <8 x float> %853, <8 x float>* %855, align 4, !tbaa !12, !llvm.access.group !16
  %856 = trunc i64 %mul.i.i.i to i32
  %857 = or i32 %856, 16
  %858 = add i32 %mul.i.i.5, %857
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float, float* %7, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %wide.load163.2 = load <8 x float>, <8 x float>* %861, align 4, !tbaa !12, !llvm.access.group !16
  %862 = add i32 %858, -1
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds float, float* %7, i64 %863
  %865 = bitcast float* %864 to <8 x float>*
  %wide.load164.2 = load <8 x float>, <8 x float>* %865, align 4, !tbaa !12, !llvm.access.group !16
  %866 = fadd <8 x float> %wide.load163.2, %wide.load164.2
  %867 = add i32 %858, 1
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds float, float* %7, i64 %868
  %870 = bitcast float* %869 to <8 x float>*
  %wide.load165.2 = load <8 x float>, <8 x float>* %870, align 4, !tbaa !12, !llvm.access.group !16
  %871 = fadd <8 x float> %866, %wide.load165.2
  %872 = add nsw i32 %mul15.i.i.5, %857
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds float, float* %7, i64 %873
  %875 = bitcast float* %874 to <8 x float>*
  %wide.load166.2 = load <8 x float>, <8 x float>* %875, align 4, !tbaa !12, !llvm.access.group !16
  %876 = fadd <8 x float> %871, %wide.load166.2
  %877 = add nsw i32 %mul21.i.i.5, %857
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds float, float* %7, i64 %878
  %880 = bitcast float* %879 to <8 x float>*
  %wide.load167.2 = load <8 x float>, <8 x float>* %880, align 4, !tbaa !12, !llvm.access.group !16
  %881 = fadd <8 x float> %876, %wide.load167.2
  %882 = fmul <8 x float> %881, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %883 = getelementptr inbounds float, float* %11, i64 %859
  %884 = bitcast float* %883 to <8 x float>*
  store <8 x float> %882, <8 x float>* %884, align 4, !tbaa !12, !llvm.access.group !16
  %885 = trunc i64 %mul.i.i.i to i32
  %886 = or i32 %885, 24
  %887 = add i32 %mul.i.i.5, %886
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds float, float* %7, i64 %888
  %890 = bitcast float* %889 to <8 x float>*
  %wide.load163.3 = load <8 x float>, <8 x float>* %890, align 4, !tbaa !12, !llvm.access.group !16
  %891 = add i32 %887, -1
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds float, float* %7, i64 %892
  %894 = bitcast float* %893 to <8 x float>*
  %wide.load164.3 = load <8 x float>, <8 x float>* %894, align 4, !tbaa !12, !llvm.access.group !16
  %895 = fadd <8 x float> %wide.load163.3, %wide.load164.3
  %896 = add i32 %887, 1
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds float, float* %7, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %wide.load165.3 = load <8 x float>, <8 x float>* %899, align 4, !tbaa !12, !llvm.access.group !16
  %900 = fadd <8 x float> %895, %wide.load165.3
  %901 = add nsw i32 %mul15.i.i.5, %886
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds float, float* %7, i64 %902
  %904 = bitcast float* %903 to <8 x float>*
  %wide.load166.3 = load <8 x float>, <8 x float>* %904, align 4, !tbaa !12, !llvm.access.group !16
  %905 = fadd <8 x float> %900, %wide.load166.3
  %906 = add nsw i32 %mul21.i.i.5, %886
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds float, float* %7, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %wide.load167.3 = load <8 x float>, <8 x float>* %909, align 4, !tbaa !12, !llvm.access.group !16
  %910 = fadd <8 x float> %905, %wide.load167.3
  %911 = fmul <8 x float> %910, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %912 = getelementptr inbounds float, float* %11, i64 %888
  %913 = bitcast float* %912 to <8 x float>*
  store <8 x float> %911, <8 x float>* %913, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.5

pregion_for_entry.entry.i.i.5:                    ; preds = %pregion_for_entry.entry.i.i.5, %pregion_for_entry.entry.i.i.5.preheader
  %_local_id_x.i.0.5 = phi i64 [ %925, %pregion_for_entry.entry.i.i.5 ], [ 0, %pregion_for_entry.entry.i.i.5.preheader ]
  %add1.i.i.i.5 = add nuw nsw i64 %_local_id_x.i.0.5, %mul.i.i.i
  %conv2.i.i.5 = trunc i64 %add1.i.i.i.5 to i32
  %add.i.i.5 = add i32 %mul.i.i.5, %conv2.i.i.5
  %idxprom.i.i.5 = sext i32 %add.i.i.5 to i64
  %arrayidx.i.i.5 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.5
  %914 = load float, float* %arrayidx.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.5 = add i32 %add.i.i.5, -1
  %idxprom5.i.i.5 = sext i32 %add4.i.i.5 to i64
  %arrayidx6.i.i.5 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.5
  %915 = load float, float* %arrayidx6.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.5 = fadd float %914, %915
  %add10.i.i.5 = add i32 %add.i.i.5, 1
  %idxprom11.i.i.5 = sext i32 %add10.i.i.5 to i64
  %arrayidx12.i.i.5 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.5
  %916 = load float, float* %arrayidx12.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.5 = fadd float %add7.i.i.5, %916
  %add16.i.i.5 = add nsw i32 %mul15.i.i.5, %conv2.i.i.5
  %idxprom17.i.i.5 = sext i32 %add16.i.i.5 to i64
  %arrayidx18.i.i.5 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.5
  %917 = load float, float* %arrayidx18.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.5 = fadd float %add13.i.i.5, %917
  %add22.i.i.5 = add nsw i32 %mul21.i.i.5, %conv2.i.i.5
  %idxprom23.i.i.5 = sext i32 %add22.i.i.5 to i64
  %arrayidx24.i.i.5 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.5
  %918 = load float, float* %arrayidx24.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.5 = fadd float %add19.i.i.5, %918
  %mul26.i.i.5 = fmul float %add25.i.i.5, 0x3FC99999A0000000
  %arrayidx30.i.i.5 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.5
  store float %mul26.i.i.5, float* %arrayidx30.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %919 = or i64 %_local_id_x.i.0.5, 1
  %add1.i.i.i.5.1 = add nuw nsw i64 %919, %mul.i.i.i
  %conv2.i.i.5.1 = trunc i64 %add1.i.i.i.5.1 to i32
  %add.i.i.5.1 = add i32 %mul.i.i.5, %conv2.i.i.5.1
  %idxprom.i.i.5.1 = sext i32 %add.i.i.5.1 to i64
  %arrayidx.i.i.5.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.5.1
  %920 = load float, float* %arrayidx.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.5.1 = add i32 %add.i.i.5.1, -1
  %idxprom5.i.i.5.1 = sext i32 %add4.i.i.5.1 to i64
  %arrayidx6.i.i.5.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.5.1
  %921 = load float, float* %arrayidx6.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.5.1 = fadd float %920, %921
  %add10.i.i.5.1 = add i32 %add.i.i.5.1, 1
  %idxprom11.i.i.5.1 = sext i32 %add10.i.i.5.1 to i64
  %arrayidx12.i.i.5.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.5.1
  %922 = load float, float* %arrayidx12.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.5.1 = fadd float %add7.i.i.5.1, %922
  %add16.i.i.5.1 = add nsw i32 %mul15.i.i.5, %conv2.i.i.5.1
  %idxprom17.i.i.5.1 = sext i32 %add16.i.i.5.1 to i64
  %arrayidx18.i.i.5.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.5.1
  %923 = load float, float* %arrayidx18.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.5.1 = fadd float %add13.i.i.5.1, %923
  %add22.i.i.5.1 = add nsw i32 %mul21.i.i.5, %conv2.i.i.5.1
  %idxprom23.i.i.5.1 = sext i32 %add22.i.i.5.1 to i64
  %arrayidx24.i.i.5.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.5.1
  %924 = load float, float* %arrayidx24.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.5.1 = fadd float %add19.i.i.5.1, %924
  %mul26.i.i.5.1 = fmul float %add25.i.i.5.1, 0x3FC99999A0000000
  %arrayidx30.i.i.5.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.5.1
  store float %mul26.i.i.5.1, float* %arrayidx30.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %925 = add nuw nsw i64 %_local_id_x.i.0.5, 2
  %exitcond.5.not.1 = icmp eq i64 %925, 32
  br i1 %exitcond.5.not.1, label %pregion_for_end.i.i.5.loopexit, label %pregion_for_entry.entry.i.i.5, !llvm.loop !34

pregion_for_end.i.i.5.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.5
  br label %pregion_for_end.i.i.5

pregion_for_end.i.i.5:                            ; preds = %pregion_for_end.i.i.5.loopexit, %vector.body140
  %926 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.6 = or i32 %926, 6
  %mul.i.i.6 = mul nsw i32 %15, %conv.i.i.6
  %add14.i.i.6 = or i32 %926, 7
  %mul15.i.i.6 = mul nsw i32 %add14.i.i.6, %15
  %sub20.i.i.6 = add nsw i32 %conv.i.i.6, -1
  %mul21.i.i.6 = mul nsw i32 %sub20.i.i.6, %15
  %927 = mul i32 %15, %conv.i.i.6
  %928 = trunc i64 %2 to i32
  %929 = shl i32 %928, 5
  %930 = add nsw i32 %927, %929
  %931 = icmp sgt i32 %930, 2147483616
  %932 = add i32 %927, %929
  %933 = add i32 %932, -1
  %934 = add i32 %932, 30
  %935 = icmp slt i32 %934, %933
  %936 = or i1 %931, %935
  %937 = add i32 %927, %929
  %938 = or i32 %937, 1
  %939 = icmp sgt i32 %938, 2147483616
  %940 = or i1 %936, %939
  %941 = mul i32 %15, %add14.i.i.6
  %942 = add nsw i32 %941, %929
  %943 = icmp sgt i32 %942, 2147483616
  %944 = or i1 %940, %943
  %945 = mul i32 %15, %add14.i.i.4
  %946 = add nsw i32 %945, %929
  %947 = icmp sgt i32 %946, 2147483616
  %948 = or i1 %944, %947
  br i1 %948, label %pregion_for_entry.entry.i.i.6.preheader, label %vector.body170

pregion_for_entry.entry.i.i.6.preheader:          ; preds = %pregion_for_end.i.i.5
  br label %pregion_for_entry.entry.i.i.6

vector.body170:                                   ; preds = %pregion_for_end.i.i.5
  %949 = trunc i64 %mul.i.i.i to i32
  %950 = add i32 %mul.i.i.6, %949
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds float, float* %7, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %wide.load193 = load <8 x float>, <8 x float>* %953, align 4, !tbaa !12, !llvm.access.group !16
  %954 = add i32 %950, -1
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds float, float* %7, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %wide.load194 = load <8 x float>, <8 x float>* %957, align 4, !tbaa !12, !llvm.access.group !16
  %958 = fadd <8 x float> %wide.load193, %wide.load194
  %959 = or i32 %950, 1
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds float, float* %7, i64 %960
  %962 = bitcast float* %961 to <8 x float>*
  %wide.load195 = load <8 x float>, <8 x float>* %962, align 4, !tbaa !12, !llvm.access.group !16
  %963 = fadd <8 x float> %958, %wide.load195
  %964 = add nsw i32 %mul15.i.i.6, %949
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds float, float* %7, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %wide.load196 = load <8 x float>, <8 x float>* %967, align 4, !tbaa !12, !llvm.access.group !16
  %968 = fadd <8 x float> %963, %wide.load196
  %969 = add nsw i32 %mul21.i.i.6, %949
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds float, float* %7, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %wide.load197 = load <8 x float>, <8 x float>* %972, align 4, !tbaa !12, !llvm.access.group !16
  %973 = fadd <8 x float> %968, %wide.load197
  %974 = fmul <8 x float> %973, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %975 = getelementptr inbounds float, float* %11, i64 %951
  %976 = bitcast float* %975 to <8 x float>*
  store <8 x float> %974, <8 x float>* %976, align 4, !tbaa !12, !llvm.access.group !16
  %977 = trunc i64 %mul.i.i.i to i32
  %978 = or i32 %977, 8
  %979 = add i32 %mul.i.i.6, %978
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds float, float* %7, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %wide.load193.1 = load <8 x float>, <8 x float>* %982, align 4, !tbaa !12, !llvm.access.group !16
  %983 = add i32 %979, -1
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds float, float* %7, i64 %984
  %986 = bitcast float* %985 to <8 x float>*
  %wide.load194.1 = load <8 x float>, <8 x float>* %986, align 4, !tbaa !12, !llvm.access.group !16
  %987 = fadd <8 x float> %wide.load193.1, %wide.load194.1
  %988 = or i32 %979, 1
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds float, float* %7, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %wide.load195.1 = load <8 x float>, <8 x float>* %991, align 4, !tbaa !12, !llvm.access.group !16
  %992 = fadd <8 x float> %987, %wide.load195.1
  %993 = add nsw i32 %mul15.i.i.6, %978
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds float, float* %7, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %wide.load196.1 = load <8 x float>, <8 x float>* %996, align 4, !tbaa !12, !llvm.access.group !16
  %997 = fadd <8 x float> %992, %wide.load196.1
  %998 = add nsw i32 %mul21.i.i.6, %978
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds float, float* %7, i64 %999
  %1001 = bitcast float* %1000 to <8 x float>*
  %wide.load197.1 = load <8 x float>, <8 x float>* %1001, align 4, !tbaa !12, !llvm.access.group !16
  %1002 = fadd <8 x float> %997, %wide.load197.1
  %1003 = fmul <8 x float> %1002, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1004 = getelementptr inbounds float, float* %11, i64 %980
  %1005 = bitcast float* %1004 to <8 x float>*
  store <8 x float> %1003, <8 x float>* %1005, align 4, !tbaa !12, !llvm.access.group !16
  %1006 = trunc i64 %mul.i.i.i to i32
  %1007 = or i32 %1006, 16
  %1008 = add i32 %mul.i.i.6, %1007
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds float, float* %7, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %wide.load193.2 = load <8 x float>, <8 x float>* %1011, align 4, !tbaa !12, !llvm.access.group !16
  %1012 = add i32 %1008, -1
  %1013 = sext i32 %1012 to i64
  %1014 = getelementptr inbounds float, float* %7, i64 %1013
  %1015 = bitcast float* %1014 to <8 x float>*
  %wide.load194.2 = load <8 x float>, <8 x float>* %1015, align 4, !tbaa !12, !llvm.access.group !16
  %1016 = fadd <8 x float> %wide.load193.2, %wide.load194.2
  %1017 = or i32 %1008, 1
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds float, float* %7, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %wide.load195.2 = load <8 x float>, <8 x float>* %1020, align 4, !tbaa !12, !llvm.access.group !16
  %1021 = fadd <8 x float> %1016, %wide.load195.2
  %1022 = add nsw i32 %mul15.i.i.6, %1007
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds float, float* %7, i64 %1023
  %1025 = bitcast float* %1024 to <8 x float>*
  %wide.load196.2 = load <8 x float>, <8 x float>* %1025, align 4, !tbaa !12, !llvm.access.group !16
  %1026 = fadd <8 x float> %1021, %wide.load196.2
  %1027 = add nsw i32 %mul21.i.i.6, %1007
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds float, float* %7, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %wide.load197.2 = load <8 x float>, <8 x float>* %1030, align 4, !tbaa !12, !llvm.access.group !16
  %1031 = fadd <8 x float> %1026, %wide.load197.2
  %1032 = fmul <8 x float> %1031, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1033 = getelementptr inbounds float, float* %11, i64 %1009
  %1034 = bitcast float* %1033 to <8 x float>*
  store <8 x float> %1032, <8 x float>* %1034, align 4, !tbaa !12, !llvm.access.group !16
  %1035 = trunc i64 %mul.i.i.i to i32
  %1036 = or i32 %1035, 24
  %1037 = add i32 %mul.i.i.6, %1036
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds float, float* %7, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %wide.load193.3 = load <8 x float>, <8 x float>* %1040, align 4, !tbaa !12, !llvm.access.group !16
  %1041 = add i32 %1037, -1
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds float, float* %7, i64 %1042
  %1044 = bitcast float* %1043 to <8 x float>*
  %wide.load194.3 = load <8 x float>, <8 x float>* %1044, align 4, !tbaa !12, !llvm.access.group !16
  %1045 = fadd <8 x float> %wide.load193.3, %wide.load194.3
  %1046 = or i32 %1037, 1
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds float, float* %7, i64 %1047
  %1049 = bitcast float* %1048 to <8 x float>*
  %wide.load195.3 = load <8 x float>, <8 x float>* %1049, align 4, !tbaa !12, !llvm.access.group !16
  %1050 = fadd <8 x float> %1045, %wide.load195.3
  %1051 = add nsw i32 %mul15.i.i.6, %1036
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds float, float* %7, i64 %1052
  %1054 = bitcast float* %1053 to <8 x float>*
  %wide.load196.3 = load <8 x float>, <8 x float>* %1054, align 4, !tbaa !12, !llvm.access.group !16
  %1055 = fadd <8 x float> %1050, %wide.load196.3
  %1056 = add nsw i32 %mul21.i.i.6, %1036
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds float, float* %7, i64 %1057
  %1059 = bitcast float* %1058 to <8 x float>*
  %wide.load197.3 = load <8 x float>, <8 x float>* %1059, align 4, !tbaa !12, !llvm.access.group !16
  %1060 = fadd <8 x float> %1055, %wide.load197.3
  %1061 = fmul <8 x float> %1060, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1062 = getelementptr inbounds float, float* %11, i64 %1038
  %1063 = bitcast float* %1062 to <8 x float>*
  store <8 x float> %1061, <8 x float>* %1063, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.6

pregion_for_entry.entry.i.i.6:                    ; preds = %pregion_for_entry.entry.i.i.6, %pregion_for_entry.entry.i.i.6.preheader
  %_local_id_x.i.0.6 = phi i64 [ %1075, %pregion_for_entry.entry.i.i.6 ], [ 0, %pregion_for_entry.entry.i.i.6.preheader ]
  %add1.i.i.i.6 = add nuw nsw i64 %_local_id_x.i.0.6, %mul.i.i.i
  %conv2.i.i.6 = trunc i64 %add1.i.i.i.6 to i32
  %add.i.i.6 = add i32 %mul.i.i.6, %conv2.i.i.6
  %idxprom.i.i.6 = sext i32 %add.i.i.6 to i64
  %arrayidx.i.i.6 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.6
  %1064 = load float, float* %arrayidx.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.6 = add i32 %add.i.i.6, -1
  %idxprom5.i.i.6 = sext i32 %add4.i.i.6 to i64
  %arrayidx6.i.i.6 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.6
  %1065 = load float, float* %arrayidx6.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.6 = fadd float %1064, %1065
  %add10.i.i.6 = or i32 %add.i.i.6, 1
  %idxprom11.i.i.6 = sext i32 %add10.i.i.6 to i64
  %arrayidx12.i.i.6 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.6
  %1066 = load float, float* %arrayidx12.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.6 = fadd float %add7.i.i.6, %1066
  %add16.i.i.6 = add nsw i32 %mul15.i.i.6, %conv2.i.i.6
  %idxprom17.i.i.6 = sext i32 %add16.i.i.6 to i64
  %arrayidx18.i.i.6 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.6
  %1067 = load float, float* %arrayidx18.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.6 = fadd float %add13.i.i.6, %1067
  %add22.i.i.6 = add nsw i32 %mul21.i.i.6, %conv2.i.i.6
  %idxprom23.i.i.6 = sext i32 %add22.i.i.6 to i64
  %arrayidx24.i.i.6 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.6
  %1068 = load float, float* %arrayidx24.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.6 = fadd float %add19.i.i.6, %1068
  %mul26.i.i.6 = fmul float %add25.i.i.6, 0x3FC99999A0000000
  %arrayidx30.i.i.6 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.6
  store float %mul26.i.i.6, float* %arrayidx30.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %1069 = or i64 %_local_id_x.i.0.6, 1
  %add1.i.i.i.6.1 = add nuw nsw i64 %1069, %mul.i.i.i
  %conv2.i.i.6.1 = trunc i64 %add1.i.i.i.6.1 to i32
  %add.i.i.6.1 = add i32 %mul.i.i.6, %conv2.i.i.6.1
  %idxprom.i.i.6.1 = sext i32 %add.i.i.6.1 to i64
  %arrayidx.i.i.6.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.6.1
  %1070 = load float, float* %arrayidx.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.6.1 = add nsw i32 %add.i.i.6.1, -1
  %idxprom5.i.i.6.1 = sext i32 %add4.i.i.6.1 to i64
  %arrayidx6.i.i.6.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.6.1
  %1071 = load float, float* %arrayidx6.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.6.1 = fadd float %1070, %1071
  %add10.i.i.6.1 = add i32 %add.i.i.6.1, 1
  %idxprom11.i.i.6.1 = sext i32 %add10.i.i.6.1 to i64
  %arrayidx12.i.i.6.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.6.1
  %1072 = load float, float* %arrayidx12.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.6.1 = fadd float %add7.i.i.6.1, %1072
  %add16.i.i.6.1 = add nsw i32 %mul15.i.i.6, %conv2.i.i.6.1
  %idxprom17.i.i.6.1 = sext i32 %add16.i.i.6.1 to i64
  %arrayidx18.i.i.6.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.6.1
  %1073 = load float, float* %arrayidx18.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.6.1 = fadd float %add13.i.i.6.1, %1073
  %add22.i.i.6.1 = add nsw i32 %mul21.i.i.6, %conv2.i.i.6.1
  %idxprom23.i.i.6.1 = sext i32 %add22.i.i.6.1 to i64
  %arrayidx24.i.i.6.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.6.1
  %1074 = load float, float* %arrayidx24.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.6.1 = fadd float %add19.i.i.6.1, %1074
  %mul26.i.i.6.1 = fmul float %add25.i.i.6.1, 0x3FC99999A0000000
  %arrayidx30.i.i.6.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.6.1
  store float %mul26.i.i.6.1, float* %arrayidx30.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %1075 = add nuw nsw i64 %_local_id_x.i.0.6, 2
  %exitcond.6.not.1 = icmp eq i64 %1075, 32
  br i1 %exitcond.6.not.1, label %pregion_for_end.i.i.6.loopexit, label %pregion_for_entry.entry.i.i.6, !llvm.loop !35

pregion_for_end.i.i.6.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.6
  br label %pregion_for_end.i.i.6

pregion_for_end.i.i.6:                            ; preds = %pregion_for_end.i.i.6.loopexit, %vector.body170
  %1076 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.7 = or i32 %1076, 7
  %mul.i.i.7 = mul nsw i32 %15, %conv.i.i.7
  %add14.i.i.7 = add nsw i32 %conv.i.i.7, 1
  %mul15.i.i.7 = mul nsw i32 %add14.i.i.7, %15
  %sub20.i.i.7 = add nsw i32 %conv.i.i.7, -1
  %mul21.i.i.7 = mul nsw i32 %sub20.i.i.7, %15
  %1077 = mul i32 %15, %add14.i.i.6
  %1078 = trunc i64 %2 to i32
  %1079 = shl i32 %1078, 5
  %1080 = add nsw i32 %1077, %1079
  %1081 = icmp sgt i32 %1080, 2147483616
  %1082 = add i32 %1077, %1079
  %1083 = add i32 %1082, -1
  %1084 = add i32 %1082, 30
  %1085 = icmp slt i32 %1084, %1083
  %1086 = or i1 %1081, %1085
  %1087 = add i32 %1077, %1079
  %1088 = add i32 %1087, 1
  %1089 = add i32 %1087, 32
  %1090 = icmp slt i32 %1089, %1088
  %1091 = or i1 %1086, %1090
  %1092 = add i32 %conv.i.i, 8
  %1093 = mul i32 %15, %1092
  %1094 = add nsw i32 %1093, %1079
  %1095 = icmp sgt i32 %1094, 2147483616
  %1096 = or i1 %1091, %1095
  %1097 = mul i32 %15, %conv.i.i.6
  %1098 = add nsw i32 %1097, %1079
  %1099 = icmp sgt i32 %1098, 2147483616
  %1100 = or i1 %1096, %1099
  br i1 %1100, label %pregion_for_entry.entry.i.i.7.preheader, label %vector.body200

pregion_for_entry.entry.i.i.7.preheader:          ; preds = %pregion_for_end.i.i.6
  br label %pregion_for_entry.entry.i.i.7

vector.body200:                                   ; preds = %pregion_for_end.i.i.6
  %1101 = trunc i64 %mul.i.i.i to i32
  %1102 = add i32 %mul.i.i.7, %1101
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds float, float* %7, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %wide.load223 = load <8 x float>, <8 x float>* %1105, align 4, !tbaa !12, !llvm.access.group !16
  %1106 = add i32 %1102, -1
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds float, float* %7, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %wide.load224 = load <8 x float>, <8 x float>* %1109, align 4, !tbaa !12, !llvm.access.group !16
  %1110 = fadd <8 x float> %wide.load223, %wide.load224
  %1111 = add i32 %1102, 1
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds float, float* %7, i64 %1112
  %1114 = bitcast float* %1113 to <8 x float>*
  %wide.load225 = load <8 x float>, <8 x float>* %1114, align 4, !tbaa !12, !llvm.access.group !16
  %1115 = fadd <8 x float> %1110, %wide.load225
  %1116 = add nsw i32 %mul15.i.i.7, %1101
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds float, float* %7, i64 %1117
  %1119 = bitcast float* %1118 to <8 x float>*
  %wide.load226 = load <8 x float>, <8 x float>* %1119, align 4, !tbaa !12, !llvm.access.group !16
  %1120 = fadd <8 x float> %1115, %wide.load226
  %1121 = add nsw i32 %mul21.i.i.7, %1101
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds float, float* %7, i64 %1122
  %1124 = bitcast float* %1123 to <8 x float>*
  %wide.load227 = load <8 x float>, <8 x float>* %1124, align 4, !tbaa !12, !llvm.access.group !16
  %1125 = fadd <8 x float> %1120, %wide.load227
  %1126 = fmul <8 x float> %1125, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1127 = getelementptr inbounds float, float* %11, i64 %1103
  %1128 = bitcast float* %1127 to <8 x float>*
  store <8 x float> %1126, <8 x float>* %1128, align 4, !tbaa !12, !llvm.access.group !16
  %1129 = trunc i64 %mul.i.i.i to i32
  %1130 = or i32 %1129, 8
  %1131 = add i32 %mul.i.i.7, %1130
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds float, float* %7, i64 %1132
  %1134 = bitcast float* %1133 to <8 x float>*
  %wide.load223.1 = load <8 x float>, <8 x float>* %1134, align 4, !tbaa !12, !llvm.access.group !16
  %1135 = add i32 %1131, -1
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds float, float* %7, i64 %1136
  %1138 = bitcast float* %1137 to <8 x float>*
  %wide.load224.1 = load <8 x float>, <8 x float>* %1138, align 4, !tbaa !12, !llvm.access.group !16
  %1139 = fadd <8 x float> %wide.load223.1, %wide.load224.1
  %1140 = add i32 %1131, 1
  %1141 = sext i32 %1140 to i64
  %1142 = getelementptr inbounds float, float* %7, i64 %1141
  %1143 = bitcast float* %1142 to <8 x float>*
  %wide.load225.1 = load <8 x float>, <8 x float>* %1143, align 4, !tbaa !12, !llvm.access.group !16
  %1144 = fadd <8 x float> %1139, %wide.load225.1
  %1145 = add nsw i32 %mul15.i.i.7, %1130
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds float, float* %7, i64 %1146
  %1148 = bitcast float* %1147 to <8 x float>*
  %wide.load226.1 = load <8 x float>, <8 x float>* %1148, align 4, !tbaa !12, !llvm.access.group !16
  %1149 = fadd <8 x float> %1144, %wide.load226.1
  %1150 = add nsw i32 %mul21.i.i.7, %1130
  %1151 = sext i32 %1150 to i64
  %1152 = getelementptr inbounds float, float* %7, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %wide.load227.1 = load <8 x float>, <8 x float>* %1153, align 4, !tbaa !12, !llvm.access.group !16
  %1154 = fadd <8 x float> %1149, %wide.load227.1
  %1155 = fmul <8 x float> %1154, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1156 = getelementptr inbounds float, float* %11, i64 %1132
  %1157 = bitcast float* %1156 to <8 x float>*
  store <8 x float> %1155, <8 x float>* %1157, align 4, !tbaa !12, !llvm.access.group !16
  %1158 = trunc i64 %mul.i.i.i to i32
  %1159 = or i32 %1158, 16
  %1160 = add i32 %mul.i.i.7, %1159
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds float, float* %7, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %wide.load223.2 = load <8 x float>, <8 x float>* %1163, align 4, !tbaa !12, !llvm.access.group !16
  %1164 = add i32 %1160, -1
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds float, float* %7, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %wide.load224.2 = load <8 x float>, <8 x float>* %1167, align 4, !tbaa !12, !llvm.access.group !16
  %1168 = fadd <8 x float> %wide.load223.2, %wide.load224.2
  %1169 = add i32 %1160, 1
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds float, float* %7, i64 %1170
  %1172 = bitcast float* %1171 to <8 x float>*
  %wide.load225.2 = load <8 x float>, <8 x float>* %1172, align 4, !tbaa !12, !llvm.access.group !16
  %1173 = fadd <8 x float> %1168, %wide.load225.2
  %1174 = add nsw i32 %mul15.i.i.7, %1159
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds float, float* %7, i64 %1175
  %1177 = bitcast float* %1176 to <8 x float>*
  %wide.load226.2 = load <8 x float>, <8 x float>* %1177, align 4, !tbaa !12, !llvm.access.group !16
  %1178 = fadd <8 x float> %1173, %wide.load226.2
  %1179 = add nsw i32 %mul21.i.i.7, %1159
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds float, float* %7, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %wide.load227.2 = load <8 x float>, <8 x float>* %1182, align 4, !tbaa !12, !llvm.access.group !16
  %1183 = fadd <8 x float> %1178, %wide.load227.2
  %1184 = fmul <8 x float> %1183, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1185 = getelementptr inbounds float, float* %11, i64 %1161
  %1186 = bitcast float* %1185 to <8 x float>*
  store <8 x float> %1184, <8 x float>* %1186, align 4, !tbaa !12, !llvm.access.group !16
  %1187 = trunc i64 %mul.i.i.i to i32
  %1188 = or i32 %1187, 24
  %1189 = add i32 %mul.i.i.7, %1188
  %1190 = sext i32 %1189 to i64
  %1191 = getelementptr inbounds float, float* %7, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %wide.load223.3 = load <8 x float>, <8 x float>* %1192, align 4, !tbaa !12, !llvm.access.group !16
  %1193 = add i32 %1189, -1
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds float, float* %7, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %wide.load224.3 = load <8 x float>, <8 x float>* %1196, align 4, !tbaa !12, !llvm.access.group !16
  %1197 = fadd <8 x float> %wide.load223.3, %wide.load224.3
  %1198 = add i32 %1189, 1
  %1199 = sext i32 %1198 to i64
  %1200 = getelementptr inbounds float, float* %7, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %wide.load225.3 = load <8 x float>, <8 x float>* %1201, align 4, !tbaa !12, !llvm.access.group !16
  %1202 = fadd <8 x float> %1197, %wide.load225.3
  %1203 = add nsw i32 %mul15.i.i.7, %1188
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds float, float* %7, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %wide.load226.3 = load <8 x float>, <8 x float>* %1206, align 4, !tbaa !12, !llvm.access.group !16
  %1207 = fadd <8 x float> %1202, %wide.load226.3
  %1208 = add nsw i32 %mul21.i.i.7, %1188
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds float, float* %7, i64 %1209
  %1211 = bitcast float* %1210 to <8 x float>*
  %wide.load227.3 = load <8 x float>, <8 x float>* %1211, align 4, !tbaa !12, !llvm.access.group !16
  %1212 = fadd <8 x float> %1207, %wide.load227.3
  %1213 = fmul <8 x float> %1212, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1214 = getelementptr inbounds float, float* %11, i64 %1190
  %1215 = bitcast float* %1214 to <8 x float>*
  store <8 x float> %1213, <8 x float>* %1215, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.7

pregion_for_entry.entry.i.i.7:                    ; preds = %pregion_for_entry.entry.i.i.7, %pregion_for_entry.entry.i.i.7.preheader
  %_local_id_x.i.0.7 = phi i64 [ %1227, %pregion_for_entry.entry.i.i.7 ], [ 0, %pregion_for_entry.entry.i.i.7.preheader ]
  %add1.i.i.i.7 = add nuw nsw i64 %_local_id_x.i.0.7, %mul.i.i.i
  %conv2.i.i.7 = trunc i64 %add1.i.i.i.7 to i32
  %add.i.i.7 = add i32 %mul.i.i.7, %conv2.i.i.7
  %idxprom.i.i.7 = sext i32 %add.i.i.7 to i64
  %arrayidx.i.i.7 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.7
  %1216 = load float, float* %arrayidx.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.7 = add i32 %add.i.i.7, -1
  %idxprom5.i.i.7 = sext i32 %add4.i.i.7 to i64
  %arrayidx6.i.i.7 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.7
  %1217 = load float, float* %arrayidx6.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.7 = fadd float %1216, %1217
  %add10.i.i.7 = add i32 %add.i.i.7, 1
  %idxprom11.i.i.7 = sext i32 %add10.i.i.7 to i64
  %arrayidx12.i.i.7 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.7
  %1218 = load float, float* %arrayidx12.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.7 = fadd float %add7.i.i.7, %1218
  %add16.i.i.7 = add nsw i32 %mul15.i.i.7, %conv2.i.i.7
  %idxprom17.i.i.7 = sext i32 %add16.i.i.7 to i64
  %arrayidx18.i.i.7 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.7
  %1219 = load float, float* %arrayidx18.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.7 = fadd float %add13.i.i.7, %1219
  %add22.i.i.7 = add nsw i32 %mul21.i.i.7, %conv2.i.i.7
  %idxprom23.i.i.7 = sext i32 %add22.i.i.7 to i64
  %arrayidx24.i.i.7 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.7
  %1220 = load float, float* %arrayidx24.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.7 = fadd float %add19.i.i.7, %1220
  %mul26.i.i.7 = fmul float %add25.i.i.7, 0x3FC99999A0000000
  %arrayidx30.i.i.7 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.7
  store float %mul26.i.i.7, float* %arrayidx30.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %1221 = or i64 %_local_id_x.i.0.7, 1
  %add1.i.i.i.7.1 = add nuw nsw i64 %1221, %mul.i.i.i
  %conv2.i.i.7.1 = trunc i64 %add1.i.i.i.7.1 to i32
  %add.i.i.7.1 = add i32 %mul.i.i.7, %conv2.i.i.7.1
  %idxprom.i.i.7.1 = sext i32 %add.i.i.7.1 to i64
  %arrayidx.i.i.7.1 = getelementptr inbounds float, float* %7, i64 %idxprom.i.i.7.1
  %1222 = load float, float* %arrayidx.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.7.1 = add i32 %add.i.i.7.1, -1
  %idxprom5.i.i.7.1 = sext i32 %add4.i.i.7.1 to i64
  %arrayidx6.i.i.7.1 = getelementptr inbounds float, float* %7, i64 %idxprom5.i.i.7.1
  %1223 = load float, float* %arrayidx6.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.7.1 = fadd float %1222, %1223
  %add10.i.i.7.1 = add i32 %add.i.i.7.1, 1
  %idxprom11.i.i.7.1 = sext i32 %add10.i.i.7.1 to i64
  %arrayidx12.i.i.7.1 = getelementptr inbounds float, float* %7, i64 %idxprom11.i.i.7.1
  %1224 = load float, float* %arrayidx12.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.7.1 = fadd float %add7.i.i.7.1, %1224
  %add16.i.i.7.1 = add nsw i32 %mul15.i.i.7, %conv2.i.i.7.1
  %idxprom17.i.i.7.1 = sext i32 %add16.i.i.7.1 to i64
  %arrayidx18.i.i.7.1 = getelementptr inbounds float, float* %7, i64 %idxprom17.i.i.7.1
  %1225 = load float, float* %arrayidx18.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.7.1 = fadd float %add13.i.i.7.1, %1225
  %add22.i.i.7.1 = add nsw i32 %mul21.i.i.7, %conv2.i.i.7.1
  %idxprom23.i.i.7.1 = sext i32 %add22.i.i.7.1 to i64
  %arrayidx24.i.i.7.1 = getelementptr inbounds float, float* %7, i64 %idxprom23.i.i.7.1
  %1226 = load float, float* %arrayidx24.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.7.1 = fadd float %add19.i.i.7.1, %1226
  %mul26.i.i.7.1 = fmul float %add25.i.i.7.1, 0x3FC99999A0000000
  %arrayidx30.i.i.7.1 = getelementptr inbounds float, float* %11, i64 %idxprom.i.i.7.1
  store float %mul26.i.i.7.1, float* %arrayidx30.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %1227 = add nuw nsw i64 %_local_id_x.i.0.7, 2
  %exitcond.7.not.1 = icmp eq i64 %1227, 32
  br i1 %exitcond.7.not.1, label %pregion_for_end.i.i.7.loopexit, label %pregion_for_entry.entry.i.i.7, !llvm.loop !36

pregion_for_end.i.i.7.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.7
  br label %pregion_for_end.i.i.7

pregion_for_end.i.i.7:                            ; preds = %pregion_for_end.i.i.7.loopexit, %vector.body200
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @_pocl_kernel_runJacobi2D_kernel1_workgroup_fast(i8** nocapture readonly %0, { [3 x i64], [3 x i64], [3 x i64], i8*, i32*, i32, i32 }* nocapture readnone %1, i64 %2, i64 %3, i64 %4) local_unnamed_addr #1 {
pregion_for_entry.pregion_for_init.i.i:
  %5 = bitcast i8** %0 to float**
  %6 = load float*, float** %5, align 8
  %7 = getelementptr i8*, i8** %0, i64 1
  %8 = bitcast i8** %7 to float**
  %9 = load float*, float** %8, align 8
  %10 = getelementptr i8*, i8** %0, i64 2
  %11 = bitcast i8** %10 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = load i32, i32* %12, align 4
  %mul3.i.i.i = shl i64 %3, 3
  %mul.i.i.i = shl i64 %2, 5
  %conv.i.i = trunc i64 %mul3.i.i.i to i32
  %mul.i.i = mul nsw i32 %13, %conv.i.i
  %add14.i.i = or i32 %conv.i.i, 1
  %mul15.i.i = mul nsw i32 %add14.i.i, %13
  %sub20.i.i = add nsw i32 %conv.i.i, -1
  %mul21.i.i = mul nsw i32 %sub20.i.i, %13
  %14 = trunc i64 %3 to i32
  %15 = mul i32 %13, %14
  %16 = shl i32 %15, 3
  %17 = trunc i64 %2 to i32
  %18 = shl i32 %17, 5
  %19 = add i32 %16, %18
  %20 = icmp sgt i32 %19, 2147483616
  %21 = add i32 %16, %18
  %22 = add i32 %21, -1
  %23 = add i32 %21, 30
  %24 = icmp slt i32 %23, %22
  %25 = or i1 %20, %24
  %26 = add i32 %16, %18
  %27 = or i32 %26, 1
  %28 = icmp sgt i32 %27, 2147483616
  %29 = or i1 %25, %28
  %30 = mul i32 %13, %add14.i.i
  %31 = add nsw i32 %30, %18
  %32 = icmp sgt i32 %31, 2147483616
  %33 = or i1 %29, %32
  %34 = add i32 %conv.i.i, -1
  %35 = mul i32 %13, %34
  %36 = add nsw i32 %35, %18
  %37 = icmp sgt i32 %36, 2147483616
  %38 = or i1 %33, %37
  br i1 %38, label %pregion_for_entry.entry.i.i.preheader, label %vector.body

pregion_for_entry.entry.i.i.preheader:            ; preds = %pregion_for_entry.pregion_for_init.i.i
  br label %pregion_for_entry.entry.i.i

vector.body:                                      ; preds = %pregion_for_entry.pregion_for_init.i.i
  %39 = trunc i64 %mul.i.i.i to i32
  %40 = add i32 %mul.i.i, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float* %6, i64 %41
  %43 = bitcast float* %42 to <8 x float>*
  %wide.load = load <8 x float>, <8 x float>* %43, align 4, !tbaa !12, !llvm.access.group !16
  %44 = add i32 %40, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %6, i64 %45
  %47 = bitcast float* %46 to <8 x float>*
  %wide.load14 = load <8 x float>, <8 x float>* %47, align 4, !tbaa !12, !llvm.access.group !16
  %48 = fadd <8 x float> %wide.load, %wide.load14
  %49 = or i32 %40, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float, float* %6, i64 %50
  %52 = bitcast float* %51 to <8 x float>*
  %wide.load15 = load <8 x float>, <8 x float>* %52, align 4, !tbaa !12, !llvm.access.group !16
  %53 = fadd <8 x float> %48, %wide.load15
  %54 = add nsw i32 %mul15.i.i, %39
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float, float* %6, i64 %55
  %57 = bitcast float* %56 to <8 x float>*
  %wide.load16 = load <8 x float>, <8 x float>* %57, align 4, !tbaa !12, !llvm.access.group !16
  %58 = fadd <8 x float> %53, %wide.load16
  %59 = add nsw i32 %mul21.i.i, %39
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds float, float* %6, i64 %60
  %62 = bitcast float* %61 to <8 x float>*
  %wide.load17 = load <8 x float>, <8 x float>* %62, align 4, !tbaa !12, !llvm.access.group !16
  %63 = fadd <8 x float> %58, %wide.load17
  %64 = fmul <8 x float> %63, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %65 = getelementptr inbounds float, float* %9, i64 %41
  %66 = bitcast float* %65 to <8 x float>*
  store <8 x float> %64, <8 x float>* %66, align 4, !tbaa !12, !llvm.access.group !16
  %67 = trunc i64 %mul.i.i.i to i32
  %68 = or i32 %67, 8
  %69 = add i32 %mul.i.i, %68
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds float, float* %6, i64 %70
  %72 = bitcast float* %71 to <8 x float>*
  %wide.load.1 = load <8 x float>, <8 x float>* %72, align 4, !tbaa !12, !llvm.access.group !16
  %73 = add i32 %69, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, float* %6, i64 %74
  %76 = bitcast float* %75 to <8 x float>*
  %wide.load14.1 = load <8 x float>, <8 x float>* %76, align 4, !tbaa !12, !llvm.access.group !16
  %77 = fadd <8 x float> %wide.load.1, %wide.load14.1
  %78 = or i32 %69, 1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %6, i64 %79
  %81 = bitcast float* %80 to <8 x float>*
  %wide.load15.1 = load <8 x float>, <8 x float>* %81, align 4, !tbaa !12, !llvm.access.group !16
  %82 = fadd <8 x float> %77, %wide.load15.1
  %83 = add nsw i32 %mul15.i.i, %68
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds float, float* %6, i64 %84
  %86 = bitcast float* %85 to <8 x float>*
  %wide.load16.1 = load <8 x float>, <8 x float>* %86, align 4, !tbaa !12, !llvm.access.group !16
  %87 = fadd <8 x float> %82, %wide.load16.1
  %88 = add nsw i32 %mul21.i.i, %68
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds float, float* %6, i64 %89
  %91 = bitcast float* %90 to <8 x float>*
  %wide.load17.1 = load <8 x float>, <8 x float>* %91, align 4, !tbaa !12, !llvm.access.group !16
  %92 = fadd <8 x float> %87, %wide.load17.1
  %93 = fmul <8 x float> %92, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %94 = getelementptr inbounds float, float* %9, i64 %70
  %95 = bitcast float* %94 to <8 x float>*
  store <8 x float> %93, <8 x float>* %95, align 4, !tbaa !12, !llvm.access.group !16
  %96 = trunc i64 %mul.i.i.i to i32
  %97 = or i32 %96, 16
  %98 = add i32 %mul.i.i, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds float, float* %6, i64 %99
  %101 = bitcast float* %100 to <8 x float>*
  %wide.load.2 = load <8 x float>, <8 x float>* %101, align 4, !tbaa !12, !llvm.access.group !16
  %102 = add i32 %98, -1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float, float* %6, i64 %103
  %105 = bitcast float* %104 to <8 x float>*
  %wide.load14.2 = load <8 x float>, <8 x float>* %105, align 4, !tbaa !12, !llvm.access.group !16
  %106 = fadd <8 x float> %wide.load.2, %wide.load14.2
  %107 = or i32 %98, 1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds float, float* %6, i64 %108
  %110 = bitcast float* %109 to <8 x float>*
  %wide.load15.2 = load <8 x float>, <8 x float>* %110, align 4, !tbaa !12, !llvm.access.group !16
  %111 = fadd <8 x float> %106, %wide.load15.2
  %112 = add nsw i32 %mul15.i.i, %97
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds float, float* %6, i64 %113
  %115 = bitcast float* %114 to <8 x float>*
  %wide.load16.2 = load <8 x float>, <8 x float>* %115, align 4, !tbaa !12, !llvm.access.group !16
  %116 = fadd <8 x float> %111, %wide.load16.2
  %117 = add nsw i32 %mul21.i.i, %97
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float, float* %6, i64 %118
  %120 = bitcast float* %119 to <8 x float>*
  %wide.load17.2 = load <8 x float>, <8 x float>* %120, align 4, !tbaa !12, !llvm.access.group !16
  %121 = fadd <8 x float> %116, %wide.load17.2
  %122 = fmul <8 x float> %121, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %123 = getelementptr inbounds float, float* %9, i64 %99
  %124 = bitcast float* %123 to <8 x float>*
  store <8 x float> %122, <8 x float>* %124, align 4, !tbaa !12, !llvm.access.group !16
  %125 = trunc i64 %mul.i.i.i to i32
  %126 = or i32 %125, 24
  %127 = add i32 %mul.i.i, %126
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds float, float* %6, i64 %128
  %130 = bitcast float* %129 to <8 x float>*
  %wide.load.3 = load <8 x float>, <8 x float>* %130, align 4, !tbaa !12, !llvm.access.group !16
  %131 = add i32 %127, -1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds float, float* %6, i64 %132
  %134 = bitcast float* %133 to <8 x float>*
  %wide.load14.3 = load <8 x float>, <8 x float>* %134, align 4, !tbaa !12, !llvm.access.group !16
  %135 = fadd <8 x float> %wide.load.3, %wide.load14.3
  %136 = or i32 %127, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds float, float* %6, i64 %137
  %139 = bitcast float* %138 to <8 x float>*
  %wide.load15.3 = load <8 x float>, <8 x float>* %139, align 4, !tbaa !12, !llvm.access.group !16
  %140 = fadd <8 x float> %135, %wide.load15.3
  %141 = add nsw i32 %mul15.i.i, %126
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds float, float* %6, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %wide.load16.3 = load <8 x float>, <8 x float>* %144, align 4, !tbaa !12, !llvm.access.group !16
  %145 = fadd <8 x float> %140, %wide.load16.3
  %146 = add nsw i32 %mul21.i.i, %126
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds float, float* %6, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %wide.load17.3 = load <8 x float>, <8 x float>* %149, align 4, !tbaa !12, !llvm.access.group !16
  %150 = fadd <8 x float> %145, %wide.load17.3
  %151 = fmul <8 x float> %150, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %152 = getelementptr inbounds float, float* %9, i64 %128
  %153 = bitcast float* %152 to <8 x float>*
  store <8 x float> %151, <8 x float>* %153, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i

pregion_for_end.i.i.loopexit:                     ; preds = %pregion_for_entry.entry.i.i
  br label %pregion_for_end.i.i

pregion_for_end.i.i:                              ; preds = %pregion_for_end.i.i.loopexit, %vector.body
  %154 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.1 = or i32 %154, 1
  %mul.i.i.1 = mul nsw i32 %13, %conv.i.i.1
  %add14.i.i.1 = add nuw nsw i32 %conv.i.i.1, 1
  %mul15.i.i.1 = mul nsw i32 %add14.i.i.1, %13
  %mul21.i.i.1 = mul nsw i32 %13, %154
  %155 = mul i32 %13, %add14.i.i
  %156 = trunc i64 %2 to i32
  %157 = shl i32 %156, 5
  %158 = add nsw i32 %155, %157
  %159 = icmp sgt i32 %158, 2147483616
  %160 = add i32 %155, %157
  %161 = add i32 %160, -1
  %162 = add i32 %160, 30
  %163 = icmp slt i32 %162, %161
  %164 = or i1 %159, %163
  %165 = add i32 %155, %157
  %166 = add i32 %165, 1
  %167 = add i32 %165, 32
  %168 = icmp slt i32 %167, %166
  %169 = or i1 %164, %168
  %170 = or i32 %conv.i.i, 2
  %171 = mul i32 %13, %170
  %172 = add nsw i32 %171, %157
  %173 = icmp sgt i32 %172, 2147483616
  %174 = or i1 %169, %173
  %175 = trunc i64 %3 to i32
  %176 = mul i32 %13, %175
  %177 = shl i32 %176, 3
  %178 = add nsw i32 %177, %157
  %179 = icmp sgt i32 %178, 2147483616
  %180 = or i1 %174, %179
  br i1 %180, label %pregion_for_entry.entry.i.i.1.preheader, label %vector.body20

pregion_for_entry.entry.i.i.1.preheader:          ; preds = %pregion_for_end.i.i
  br label %pregion_for_entry.entry.i.i.1

vector.body20:                                    ; preds = %pregion_for_end.i.i
  %181 = trunc i64 %mul.i.i.i to i32
  %182 = add i32 %mul.i.i.1, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float* %6, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %wide.load43 = load <8 x float>, <8 x float>* %185, align 4, !tbaa !12, !llvm.access.group !16
  %186 = add i32 %182, -1
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float* %6, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %wide.load44 = load <8 x float>, <8 x float>* %189, align 4, !tbaa !12, !llvm.access.group !16
  %190 = fadd <8 x float> %wide.load43, %wide.load44
  %191 = add i32 %182, 1
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %6, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %wide.load45 = load <8 x float>, <8 x float>* %194, align 4, !tbaa !12, !llvm.access.group !16
  %195 = fadd <8 x float> %190, %wide.load45
  %196 = add nsw i32 %mul15.i.i.1, %181
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %6, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %wide.load46 = load <8 x float>, <8 x float>* %199, align 4, !tbaa !12, !llvm.access.group !16
  %200 = fadd <8 x float> %195, %wide.load46
  %201 = add nsw i32 %mul21.i.i.1, %181
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %6, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %wide.load47 = load <8 x float>, <8 x float>* %204, align 4, !tbaa !12, !llvm.access.group !16
  %205 = fadd <8 x float> %200, %wide.load47
  %206 = fmul <8 x float> %205, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %207 = getelementptr inbounds float, float* %9, i64 %183
  %208 = bitcast float* %207 to <8 x float>*
  store <8 x float> %206, <8 x float>* %208, align 4, !tbaa !12, !llvm.access.group !16
  %209 = trunc i64 %mul.i.i.i to i32
  %210 = or i32 %209, 8
  %211 = add i32 %mul.i.i.1, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %6, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %wide.load43.1 = load <8 x float>, <8 x float>* %214, align 4, !tbaa !12, !llvm.access.group !16
  %215 = add i32 %211, -1
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %6, i64 %216
  %218 = bitcast float* %217 to <8 x float>*
  %wide.load44.1 = load <8 x float>, <8 x float>* %218, align 4, !tbaa !12, !llvm.access.group !16
  %219 = fadd <8 x float> %wide.load43.1, %wide.load44.1
  %220 = add i32 %211, 1
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float* %6, i64 %221
  %223 = bitcast float* %222 to <8 x float>*
  %wide.load45.1 = load <8 x float>, <8 x float>* %223, align 4, !tbaa !12, !llvm.access.group !16
  %224 = fadd <8 x float> %219, %wide.load45.1
  %225 = add nsw i32 %mul15.i.i.1, %210
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %6, i64 %226
  %228 = bitcast float* %227 to <8 x float>*
  %wide.load46.1 = load <8 x float>, <8 x float>* %228, align 4, !tbaa !12, !llvm.access.group !16
  %229 = fadd <8 x float> %224, %wide.load46.1
  %230 = add nsw i32 %mul21.i.i.1, %210
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %6, i64 %231
  %233 = bitcast float* %232 to <8 x float>*
  %wide.load47.1 = load <8 x float>, <8 x float>* %233, align 4, !tbaa !12, !llvm.access.group !16
  %234 = fadd <8 x float> %229, %wide.load47.1
  %235 = fmul <8 x float> %234, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %236 = getelementptr inbounds float, float* %9, i64 %212
  %237 = bitcast float* %236 to <8 x float>*
  store <8 x float> %235, <8 x float>* %237, align 4, !tbaa !12, !llvm.access.group !16
  %238 = trunc i64 %mul.i.i.i to i32
  %239 = or i32 %238, 16
  %240 = add i32 %mul.i.i.1, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float, float* %6, i64 %241
  %243 = bitcast float* %242 to <8 x float>*
  %wide.load43.2 = load <8 x float>, <8 x float>* %243, align 4, !tbaa !12, !llvm.access.group !16
  %244 = add i32 %240, -1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds float, float* %6, i64 %245
  %247 = bitcast float* %246 to <8 x float>*
  %wide.load44.2 = load <8 x float>, <8 x float>* %247, align 4, !tbaa !12, !llvm.access.group !16
  %248 = fadd <8 x float> %wide.load43.2, %wide.load44.2
  %249 = add i32 %240, 1
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds float, float* %6, i64 %250
  %252 = bitcast float* %251 to <8 x float>*
  %wide.load45.2 = load <8 x float>, <8 x float>* %252, align 4, !tbaa !12, !llvm.access.group !16
  %253 = fadd <8 x float> %248, %wide.load45.2
  %254 = add nsw i32 %mul15.i.i.1, %239
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds float, float* %6, i64 %255
  %257 = bitcast float* %256 to <8 x float>*
  %wide.load46.2 = load <8 x float>, <8 x float>* %257, align 4, !tbaa !12, !llvm.access.group !16
  %258 = fadd <8 x float> %253, %wide.load46.2
  %259 = add nsw i32 %mul21.i.i.1, %239
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds float, float* %6, i64 %260
  %262 = bitcast float* %261 to <8 x float>*
  %wide.load47.2 = load <8 x float>, <8 x float>* %262, align 4, !tbaa !12, !llvm.access.group !16
  %263 = fadd <8 x float> %258, %wide.load47.2
  %264 = fmul <8 x float> %263, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %265 = getelementptr inbounds float, float* %9, i64 %241
  %266 = bitcast float* %265 to <8 x float>*
  store <8 x float> %264, <8 x float>* %266, align 4, !tbaa !12, !llvm.access.group !16
  %267 = trunc i64 %mul.i.i.i to i32
  %268 = or i32 %267, 24
  %269 = add i32 %mul.i.i.1, %268
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds float, float* %6, i64 %270
  %272 = bitcast float* %271 to <8 x float>*
  %wide.load43.3 = load <8 x float>, <8 x float>* %272, align 4, !tbaa !12, !llvm.access.group !16
  %273 = add i32 %269, -1
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds float, float* %6, i64 %274
  %276 = bitcast float* %275 to <8 x float>*
  %wide.load44.3 = load <8 x float>, <8 x float>* %276, align 4, !tbaa !12, !llvm.access.group !16
  %277 = fadd <8 x float> %wide.load43.3, %wide.load44.3
  %278 = add i32 %269, 1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds float, float* %6, i64 %279
  %281 = bitcast float* %280 to <8 x float>*
  %wide.load45.3 = load <8 x float>, <8 x float>* %281, align 4, !tbaa !12, !llvm.access.group !16
  %282 = fadd <8 x float> %277, %wide.load45.3
  %283 = add nsw i32 %mul15.i.i.1, %268
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds float, float* %6, i64 %284
  %286 = bitcast float* %285 to <8 x float>*
  %wide.load46.3 = load <8 x float>, <8 x float>* %286, align 4, !tbaa !12, !llvm.access.group !16
  %287 = fadd <8 x float> %282, %wide.load46.3
  %288 = add nsw i32 %mul21.i.i.1, %268
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds float, float* %6, i64 %289
  %291 = bitcast float* %290 to <8 x float>*
  %wide.load47.3 = load <8 x float>, <8 x float>* %291, align 4, !tbaa !12, !llvm.access.group !16
  %292 = fadd <8 x float> %287, %wide.load47.3
  %293 = fmul <8 x float> %292, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %294 = getelementptr inbounds float, float* %9, i64 %270
  %295 = bitcast float* %294 to <8 x float>*
  store <8 x float> %293, <8 x float>* %295, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.1

pregion_for_entry.entry.i.i:                      ; preds = %pregion_for_entry.entry.i.i, %pregion_for_entry.entry.i.i.preheader
  %_local_id_x.i.0 = phi i64 [ %307, %pregion_for_entry.entry.i.i ], [ 0, %pregion_for_entry.entry.i.i.preheader ]
  %add1.i.i.i = add nuw nsw i64 %_local_id_x.i.0, %mul.i.i.i
  %conv2.i.i = trunc i64 %add1.i.i.i to i32
  %add.i.i = add i32 %mul.i.i, %conv2.i.i
  %idxprom.i.i = sext i32 %add.i.i to i64
  %arrayidx.i.i = getelementptr inbounds float, float* %6, i64 %idxprom.i.i
  %296 = load float, float* %arrayidx.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i = add i32 %add.i.i, -1
  %idxprom5.i.i = sext i32 %add4.i.i to i64
  %arrayidx6.i.i = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i
  %297 = load float, float* %arrayidx6.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i = fadd float %296, %297
  %add10.i.i = or i32 %add.i.i, 1
  %idxprom11.i.i = sext i32 %add10.i.i to i64
  %arrayidx12.i.i = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i
  %298 = load float, float* %arrayidx12.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i = fadd float %add7.i.i, %298
  %add16.i.i = add nsw i32 %mul15.i.i, %conv2.i.i
  %idxprom17.i.i = sext i32 %add16.i.i to i64
  %arrayidx18.i.i = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i
  %299 = load float, float* %arrayidx18.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i = fadd float %add13.i.i, %299
  %add22.i.i = add nsw i32 %mul21.i.i, %conv2.i.i
  %idxprom23.i.i = sext i32 %add22.i.i to i64
  %arrayidx24.i.i = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i
  %300 = load float, float* %arrayidx24.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i = fadd float %add19.i.i, %300
  %mul26.i.i = fmul float %add25.i.i, 0x3FC99999A0000000
  %arrayidx30.i.i = getelementptr inbounds float, float* %9, i64 %idxprom.i.i
  store float %mul26.i.i, float* %arrayidx30.i.i, align 4, !tbaa !12, !llvm.access.group !16
  %301 = or i64 %_local_id_x.i.0, 1
  %add1.i.i.i.1237 = add nuw nsw i64 %301, %mul.i.i.i
  %conv2.i.i.1238 = trunc i64 %add1.i.i.i.1237 to i32
  %add.i.i.1239 = add i32 %mul.i.i, %conv2.i.i.1238
  %idxprom.i.i.1240 = sext i32 %add.i.i.1239 to i64
  %arrayidx.i.i.1241 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.1240
  %302 = load float, float* %arrayidx.i.i.1241, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1242 = add nsw i32 %add.i.i.1239, -1
  %idxprom5.i.i.1243 = sext i32 %add4.i.i.1242 to i64
  %arrayidx6.i.i.1244 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.1243
  %303 = load float, float* %arrayidx6.i.i.1244, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1245 = fadd float %302, %303
  %add10.i.i.1246 = add i32 %add.i.i.1239, 1
  %idxprom11.i.i.1247 = sext i32 %add10.i.i.1246 to i64
  %arrayidx12.i.i.1248 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.1247
  %304 = load float, float* %arrayidx12.i.i.1248, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1249 = fadd float %add7.i.i.1245, %304
  %add16.i.i.1250 = add nsw i32 %mul15.i.i, %conv2.i.i.1238
  %idxprom17.i.i.1251 = sext i32 %add16.i.i.1250 to i64
  %arrayidx18.i.i.1252 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.1251
  %305 = load float, float* %arrayidx18.i.i.1252, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1253 = fadd float %add13.i.i.1249, %305
  %add22.i.i.1254 = add nsw i32 %mul21.i.i, %conv2.i.i.1238
  %idxprom23.i.i.1255 = sext i32 %add22.i.i.1254 to i64
  %arrayidx24.i.i.1256 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.1255
  %306 = load float, float* %arrayidx24.i.i.1256, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1257 = fadd float %add19.i.i.1253, %306
  %mul26.i.i.1258 = fmul float %add25.i.i.1257, 0x3FC99999A0000000
  %arrayidx30.i.i.1259 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.1240
  store float %mul26.i.i.1258, float* %arrayidx30.i.i.1259, align 4, !tbaa !12, !llvm.access.group !16
  %307 = add nuw nsw i64 %_local_id_x.i.0, 2
  %exitcond.not.1 = icmp eq i64 %307, 32
  br i1 %exitcond.not.1, label %pregion_for_end.i.i.loopexit, label %pregion_for_entry.entry.i.i, !llvm.loop !37

pregion_for_entry.entry.i.i.1:                    ; preds = %pregion_for_entry.entry.i.i.1, %pregion_for_entry.entry.i.i.1.preheader
  %_local_id_x.i.0.1 = phi i64 [ %319, %pregion_for_entry.entry.i.i.1 ], [ 0, %pregion_for_entry.entry.i.i.1.preheader ]
  %add1.i.i.i.1 = add nuw nsw i64 %_local_id_x.i.0.1, %mul.i.i.i
  %conv2.i.i.1 = trunc i64 %add1.i.i.i.1 to i32
  %add.i.i.1 = add i32 %mul.i.i.1, %conv2.i.i.1
  %idxprom.i.i.1 = sext i32 %add.i.i.1 to i64
  %arrayidx.i.i.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.1
  %308 = load float, float* %arrayidx.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1 = add i32 %add.i.i.1, -1
  %idxprom5.i.i.1 = sext i32 %add4.i.i.1 to i64
  %arrayidx6.i.i.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.1
  %309 = load float, float* %arrayidx6.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1 = fadd float %308, %309
  %add10.i.i.1 = add i32 %add.i.i.1, 1
  %idxprom11.i.i.1 = sext i32 %add10.i.i.1 to i64
  %arrayidx12.i.i.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.1
  %310 = load float, float* %arrayidx12.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1 = fadd float %add7.i.i.1, %310
  %add16.i.i.1 = add nsw i32 %mul15.i.i.1, %conv2.i.i.1
  %idxprom17.i.i.1 = sext i32 %add16.i.i.1 to i64
  %arrayidx18.i.i.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.1
  %311 = load float, float* %arrayidx18.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1 = fadd float %add13.i.i.1, %311
  %add22.i.i.1 = add nsw i32 %mul21.i.i.1, %conv2.i.i.1
  %idxprom23.i.i.1 = sext i32 %add22.i.i.1 to i64
  %arrayidx24.i.i.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.1
  %312 = load float, float* %arrayidx24.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1 = fadd float %add19.i.i.1, %312
  %mul26.i.i.1 = fmul float %add25.i.i.1, 0x3FC99999A0000000
  %arrayidx30.i.i.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.1
  store float %mul26.i.i.1, float* %arrayidx30.i.i.1, align 4, !tbaa !12, !llvm.access.group !16
  %313 = or i64 %_local_id_x.i.0.1, 1
  %add1.i.i.i.1.1 = add nuw nsw i64 %313, %mul.i.i.i
  %conv2.i.i.1.1 = trunc i64 %add1.i.i.i.1.1 to i32
  %add.i.i.1.1 = add i32 %mul.i.i.1, %conv2.i.i.1.1
  %idxprom.i.i.1.1 = sext i32 %add.i.i.1.1 to i64
  %arrayidx.i.i.1.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.1.1
  %314 = load float, float* %arrayidx.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.1.1 = add i32 %add.i.i.1.1, -1
  %idxprom5.i.i.1.1 = sext i32 %add4.i.i.1.1 to i64
  %arrayidx6.i.i.1.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.1.1
  %315 = load float, float* %arrayidx6.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.1.1 = fadd float %314, %315
  %add10.i.i.1.1 = add i32 %add.i.i.1.1, 1
  %idxprom11.i.i.1.1 = sext i32 %add10.i.i.1.1 to i64
  %arrayidx12.i.i.1.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.1.1
  %316 = load float, float* %arrayidx12.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.1.1 = fadd float %add7.i.i.1.1, %316
  %add16.i.i.1.1 = add nsw i32 %mul15.i.i.1, %conv2.i.i.1.1
  %idxprom17.i.i.1.1 = sext i32 %add16.i.i.1.1 to i64
  %arrayidx18.i.i.1.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.1.1
  %317 = load float, float* %arrayidx18.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.1.1 = fadd float %add13.i.i.1.1, %317
  %add22.i.i.1.1 = add nsw i32 %mul21.i.i.1, %conv2.i.i.1.1
  %idxprom23.i.i.1.1 = sext i32 %add22.i.i.1.1 to i64
  %arrayidx24.i.i.1.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.1.1
  %318 = load float, float* %arrayidx24.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.1.1 = fadd float %add19.i.i.1.1, %318
  %mul26.i.i.1.1 = fmul float %add25.i.i.1.1, 0x3FC99999A0000000
  %arrayidx30.i.i.1.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.1.1
  store float %mul26.i.i.1.1, float* %arrayidx30.i.i.1.1, align 4, !tbaa !12, !llvm.access.group !16
  %319 = add nuw nsw i64 %_local_id_x.i.0.1, 2
  %exitcond.1.not.1 = icmp eq i64 %319, 32
  br i1 %exitcond.1.not.1, label %pregion_for_end.i.i.1.loopexit, label %pregion_for_entry.entry.i.i.1, !llvm.loop !38

pregion_for_end.i.i.1.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.1
  br label %pregion_for_end.i.i.1

pregion_for_end.i.i.1:                            ; preds = %pregion_for_end.i.i.1.loopexit, %vector.body20
  %320 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.2 = or i32 %320, 2
  %mul.i.i.2 = mul nsw i32 %13, %conv.i.i.2
  %add14.i.i.2 = or i32 %320, 3
  %mul15.i.i.2 = mul nsw i32 %add14.i.i.2, %13
  %sub20.i.i.2 = add nsw i32 %conv.i.i.2, -1
  %mul21.i.i.2 = mul nsw i32 %sub20.i.i.2, %13
  %321 = mul i32 %13, %conv.i.i.2
  %322 = trunc i64 %2 to i32
  %323 = shl i32 %322, 5
  %324 = add nsw i32 %321, %323
  %325 = icmp sgt i32 %324, 2147483616
  %326 = add i32 %321, %323
  %327 = add i32 %326, -1
  %328 = add i32 %326, 30
  %329 = icmp slt i32 %328, %327
  %330 = or i1 %325, %329
  %331 = add i32 %321, %323
  %332 = or i32 %331, 1
  %333 = icmp sgt i32 %332, 2147483616
  %334 = or i1 %330, %333
  %335 = mul i32 %13, %add14.i.i.2
  %336 = add nsw i32 %335, %323
  %337 = icmp sgt i32 %336, 2147483616
  %338 = or i1 %334, %337
  %339 = mul i32 %13, %add14.i.i
  %340 = add nsw i32 %339, %323
  %341 = icmp sgt i32 %340, 2147483616
  %342 = or i1 %338, %341
  br i1 %342, label %pregion_for_entry.entry.i.i.2.preheader, label %vector.body50

pregion_for_entry.entry.i.i.2.preheader:          ; preds = %pregion_for_end.i.i.1
  br label %pregion_for_entry.entry.i.i.2

vector.body50:                                    ; preds = %pregion_for_end.i.i.1
  %343 = trunc i64 %mul.i.i.i to i32
  %344 = add i32 %mul.i.i.2, %343
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds float, float* %6, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %wide.load73 = load <8 x float>, <8 x float>* %347, align 4, !tbaa !12, !llvm.access.group !16
  %348 = add i32 %344, -1
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds float, float* %6, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %wide.load74 = load <8 x float>, <8 x float>* %351, align 4, !tbaa !12, !llvm.access.group !16
  %352 = fadd <8 x float> %wide.load73, %wide.load74
  %353 = or i32 %344, 1
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds float, float* %6, i64 %354
  %356 = bitcast float* %355 to <8 x float>*
  %wide.load75 = load <8 x float>, <8 x float>* %356, align 4, !tbaa !12, !llvm.access.group !16
  %357 = fadd <8 x float> %352, %wide.load75
  %358 = add nsw i32 %mul15.i.i.2, %343
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds float, float* %6, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %wide.load76 = load <8 x float>, <8 x float>* %361, align 4, !tbaa !12, !llvm.access.group !16
  %362 = fadd <8 x float> %357, %wide.load76
  %363 = add nsw i32 %mul21.i.i.2, %343
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds float, float* %6, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %wide.load77 = load <8 x float>, <8 x float>* %366, align 4, !tbaa !12, !llvm.access.group !16
  %367 = fadd <8 x float> %362, %wide.load77
  %368 = fmul <8 x float> %367, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %369 = getelementptr inbounds float, float* %9, i64 %345
  %370 = bitcast float* %369 to <8 x float>*
  store <8 x float> %368, <8 x float>* %370, align 4, !tbaa !12, !llvm.access.group !16
  %371 = trunc i64 %mul.i.i.i to i32
  %372 = or i32 %371, 8
  %373 = add i32 %mul.i.i.2, %372
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds float, float* %6, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %wide.load73.1 = load <8 x float>, <8 x float>* %376, align 4, !tbaa !12, !llvm.access.group !16
  %377 = add i32 %373, -1
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds float, float* %6, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %wide.load74.1 = load <8 x float>, <8 x float>* %380, align 4, !tbaa !12, !llvm.access.group !16
  %381 = fadd <8 x float> %wide.load73.1, %wide.load74.1
  %382 = or i32 %373, 1
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds float, float* %6, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %wide.load75.1 = load <8 x float>, <8 x float>* %385, align 4, !tbaa !12, !llvm.access.group !16
  %386 = fadd <8 x float> %381, %wide.load75.1
  %387 = add nsw i32 %mul15.i.i.2, %372
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds float, float* %6, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %wide.load76.1 = load <8 x float>, <8 x float>* %390, align 4, !tbaa !12, !llvm.access.group !16
  %391 = fadd <8 x float> %386, %wide.load76.1
  %392 = add nsw i32 %mul21.i.i.2, %372
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds float, float* %6, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %wide.load77.1 = load <8 x float>, <8 x float>* %395, align 4, !tbaa !12, !llvm.access.group !16
  %396 = fadd <8 x float> %391, %wide.load77.1
  %397 = fmul <8 x float> %396, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %398 = getelementptr inbounds float, float* %9, i64 %374
  %399 = bitcast float* %398 to <8 x float>*
  store <8 x float> %397, <8 x float>* %399, align 4, !tbaa !12, !llvm.access.group !16
  %400 = trunc i64 %mul.i.i.i to i32
  %401 = or i32 %400, 16
  %402 = add i32 %mul.i.i.2, %401
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds float, float* %6, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %wide.load73.2 = load <8 x float>, <8 x float>* %405, align 4, !tbaa !12, !llvm.access.group !16
  %406 = add i32 %402, -1
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds float, float* %6, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %wide.load74.2 = load <8 x float>, <8 x float>* %409, align 4, !tbaa !12, !llvm.access.group !16
  %410 = fadd <8 x float> %wide.load73.2, %wide.load74.2
  %411 = or i32 %402, 1
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds float, float* %6, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %wide.load75.2 = load <8 x float>, <8 x float>* %414, align 4, !tbaa !12, !llvm.access.group !16
  %415 = fadd <8 x float> %410, %wide.load75.2
  %416 = add nsw i32 %mul15.i.i.2, %401
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds float, float* %6, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %wide.load76.2 = load <8 x float>, <8 x float>* %419, align 4, !tbaa !12, !llvm.access.group !16
  %420 = fadd <8 x float> %415, %wide.load76.2
  %421 = add nsw i32 %mul21.i.i.2, %401
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds float, float* %6, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %wide.load77.2 = load <8 x float>, <8 x float>* %424, align 4, !tbaa !12, !llvm.access.group !16
  %425 = fadd <8 x float> %420, %wide.load77.2
  %426 = fmul <8 x float> %425, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %427 = getelementptr inbounds float, float* %9, i64 %403
  %428 = bitcast float* %427 to <8 x float>*
  store <8 x float> %426, <8 x float>* %428, align 4, !tbaa !12, !llvm.access.group !16
  %429 = trunc i64 %mul.i.i.i to i32
  %430 = or i32 %429, 24
  %431 = add i32 %mul.i.i.2, %430
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds float, float* %6, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %wide.load73.3 = load <8 x float>, <8 x float>* %434, align 4, !tbaa !12, !llvm.access.group !16
  %435 = add i32 %431, -1
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds float, float* %6, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %wide.load74.3 = load <8 x float>, <8 x float>* %438, align 4, !tbaa !12, !llvm.access.group !16
  %439 = fadd <8 x float> %wide.load73.3, %wide.load74.3
  %440 = or i32 %431, 1
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds float, float* %6, i64 %441
  %443 = bitcast float* %442 to <8 x float>*
  %wide.load75.3 = load <8 x float>, <8 x float>* %443, align 4, !tbaa !12, !llvm.access.group !16
  %444 = fadd <8 x float> %439, %wide.load75.3
  %445 = add nsw i32 %mul15.i.i.2, %430
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds float, float* %6, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %wide.load76.3 = load <8 x float>, <8 x float>* %448, align 4, !tbaa !12, !llvm.access.group !16
  %449 = fadd <8 x float> %444, %wide.load76.3
  %450 = add nsw i32 %mul21.i.i.2, %430
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds float, float* %6, i64 %451
  %453 = bitcast float* %452 to <8 x float>*
  %wide.load77.3 = load <8 x float>, <8 x float>* %453, align 4, !tbaa !12, !llvm.access.group !16
  %454 = fadd <8 x float> %449, %wide.load77.3
  %455 = fmul <8 x float> %454, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %456 = getelementptr inbounds float, float* %9, i64 %432
  %457 = bitcast float* %456 to <8 x float>*
  store <8 x float> %455, <8 x float>* %457, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.2

pregion_for_entry.entry.i.i.2:                    ; preds = %pregion_for_entry.entry.i.i.2, %pregion_for_entry.entry.i.i.2.preheader
  %_local_id_x.i.0.2 = phi i64 [ %469, %pregion_for_entry.entry.i.i.2 ], [ 0, %pregion_for_entry.entry.i.i.2.preheader ]
  %add1.i.i.i.2 = add nuw nsw i64 %_local_id_x.i.0.2, %mul.i.i.i
  %conv2.i.i.2 = trunc i64 %add1.i.i.i.2 to i32
  %add.i.i.2 = add i32 %mul.i.i.2, %conv2.i.i.2
  %idxprom.i.i.2 = sext i32 %add.i.i.2 to i64
  %arrayidx.i.i.2 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.2
  %458 = load float, float* %arrayidx.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.2 = add i32 %add.i.i.2, -1
  %idxprom5.i.i.2 = sext i32 %add4.i.i.2 to i64
  %arrayidx6.i.i.2 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.2
  %459 = load float, float* %arrayidx6.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.2 = fadd float %458, %459
  %add10.i.i.2 = or i32 %add.i.i.2, 1
  %idxprom11.i.i.2 = sext i32 %add10.i.i.2 to i64
  %arrayidx12.i.i.2 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.2
  %460 = load float, float* %arrayidx12.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.2 = fadd float %add7.i.i.2, %460
  %add16.i.i.2 = add nsw i32 %mul15.i.i.2, %conv2.i.i.2
  %idxprom17.i.i.2 = sext i32 %add16.i.i.2 to i64
  %arrayidx18.i.i.2 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.2
  %461 = load float, float* %arrayidx18.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.2 = fadd float %add13.i.i.2, %461
  %add22.i.i.2 = add nsw i32 %mul21.i.i.2, %conv2.i.i.2
  %idxprom23.i.i.2 = sext i32 %add22.i.i.2 to i64
  %arrayidx24.i.i.2 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.2
  %462 = load float, float* %arrayidx24.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.2 = fadd float %add19.i.i.2, %462
  %mul26.i.i.2 = fmul float %add25.i.i.2, 0x3FC99999A0000000
  %arrayidx30.i.i.2 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.2
  store float %mul26.i.i.2, float* %arrayidx30.i.i.2, align 4, !tbaa !12, !llvm.access.group !16
  %463 = or i64 %_local_id_x.i.0.2, 1
  %add1.i.i.i.2.1 = add nuw nsw i64 %463, %mul.i.i.i
  %conv2.i.i.2.1 = trunc i64 %add1.i.i.i.2.1 to i32
  %add.i.i.2.1 = add i32 %mul.i.i.2, %conv2.i.i.2.1
  %idxprom.i.i.2.1 = sext i32 %add.i.i.2.1 to i64
  %arrayidx.i.i.2.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.2.1
  %464 = load float, float* %arrayidx.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.2.1 = add nsw i32 %add.i.i.2.1, -1
  %idxprom5.i.i.2.1 = sext i32 %add4.i.i.2.1 to i64
  %arrayidx6.i.i.2.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.2.1
  %465 = load float, float* %arrayidx6.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.2.1 = fadd float %464, %465
  %add10.i.i.2.1 = add i32 %add.i.i.2.1, 1
  %idxprom11.i.i.2.1 = sext i32 %add10.i.i.2.1 to i64
  %arrayidx12.i.i.2.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.2.1
  %466 = load float, float* %arrayidx12.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.2.1 = fadd float %add7.i.i.2.1, %466
  %add16.i.i.2.1 = add nsw i32 %mul15.i.i.2, %conv2.i.i.2.1
  %idxprom17.i.i.2.1 = sext i32 %add16.i.i.2.1 to i64
  %arrayidx18.i.i.2.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.2.1
  %467 = load float, float* %arrayidx18.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.2.1 = fadd float %add13.i.i.2.1, %467
  %add22.i.i.2.1 = add nsw i32 %mul21.i.i.2, %conv2.i.i.2.1
  %idxprom23.i.i.2.1 = sext i32 %add22.i.i.2.1 to i64
  %arrayidx24.i.i.2.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.2.1
  %468 = load float, float* %arrayidx24.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.2.1 = fadd float %add19.i.i.2.1, %468
  %mul26.i.i.2.1 = fmul float %add25.i.i.2.1, 0x3FC99999A0000000
  %arrayidx30.i.i.2.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.2.1
  store float %mul26.i.i.2.1, float* %arrayidx30.i.i.2.1, align 4, !tbaa !12, !llvm.access.group !16
  %469 = add nuw nsw i64 %_local_id_x.i.0.2, 2
  %exitcond.2.not.1 = icmp eq i64 %469, 32
  br i1 %exitcond.2.not.1, label %pregion_for_end.i.i.2.loopexit, label %pregion_for_entry.entry.i.i.2, !llvm.loop !39

pregion_for_end.i.i.2.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.2
  br label %pregion_for_end.i.i.2

pregion_for_end.i.i.2:                            ; preds = %pregion_for_end.i.i.2.loopexit, %vector.body50
  %470 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.3 = or i32 %470, 3
  %mul.i.i.3 = mul nsw i32 %13, %conv.i.i.3
  %add14.i.i.3 = add nuw nsw i32 %conv.i.i.3, 1
  %mul15.i.i.3 = mul nsw i32 %add14.i.i.3, %13
  %sub20.i.i.3 = add nsw i32 %conv.i.i.3, -1
  %mul21.i.i.3 = mul nsw i32 %sub20.i.i.3, %13
  %471 = mul i32 %13, %add14.i.i.2
  %472 = trunc i64 %2 to i32
  %473 = shl i32 %472, 5
  %474 = add nsw i32 %471, %473
  %475 = icmp sgt i32 %474, 2147483616
  %476 = add i32 %471, %473
  %477 = add i32 %476, -1
  %478 = add i32 %476, 30
  %479 = icmp slt i32 %478, %477
  %480 = or i1 %475, %479
  %481 = add i32 %471, %473
  %482 = add i32 %481, 1
  %483 = add i32 %481, 32
  %484 = icmp slt i32 %483, %482
  %485 = or i1 %480, %484
  %486 = or i32 %conv.i.i, 4
  %487 = mul i32 %13, %486
  %488 = add nsw i32 %487, %473
  %489 = icmp sgt i32 %488, 2147483616
  %490 = or i1 %485, %489
  %491 = mul i32 %13, %conv.i.i.2
  %492 = add nsw i32 %491, %473
  %493 = icmp sgt i32 %492, 2147483616
  %494 = or i1 %490, %493
  br i1 %494, label %pregion_for_entry.entry.i.i.3.preheader, label %vector.body80

pregion_for_entry.entry.i.i.3.preheader:          ; preds = %pregion_for_end.i.i.2
  br label %pregion_for_entry.entry.i.i.3

vector.body80:                                    ; preds = %pregion_for_end.i.i.2
  %495 = trunc i64 %mul.i.i.i to i32
  %496 = add i32 %mul.i.i.3, %495
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds float, float* %6, i64 %497
  %499 = bitcast float* %498 to <8 x float>*
  %wide.load103 = load <8 x float>, <8 x float>* %499, align 4, !tbaa !12, !llvm.access.group !16
  %500 = add i32 %496, -1
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds float, float* %6, i64 %501
  %503 = bitcast float* %502 to <8 x float>*
  %wide.load104 = load <8 x float>, <8 x float>* %503, align 4, !tbaa !12, !llvm.access.group !16
  %504 = fadd <8 x float> %wide.load103, %wide.load104
  %505 = add i32 %496, 1
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds float, float* %6, i64 %506
  %508 = bitcast float* %507 to <8 x float>*
  %wide.load105 = load <8 x float>, <8 x float>* %508, align 4, !tbaa !12, !llvm.access.group !16
  %509 = fadd <8 x float> %504, %wide.load105
  %510 = add nsw i32 %mul15.i.i.3, %495
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds float, float* %6, i64 %511
  %513 = bitcast float* %512 to <8 x float>*
  %wide.load106 = load <8 x float>, <8 x float>* %513, align 4, !tbaa !12, !llvm.access.group !16
  %514 = fadd <8 x float> %509, %wide.load106
  %515 = add nsw i32 %mul21.i.i.3, %495
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds float, float* %6, i64 %516
  %518 = bitcast float* %517 to <8 x float>*
  %wide.load107 = load <8 x float>, <8 x float>* %518, align 4, !tbaa !12, !llvm.access.group !16
  %519 = fadd <8 x float> %514, %wide.load107
  %520 = fmul <8 x float> %519, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %521 = getelementptr inbounds float, float* %9, i64 %497
  %522 = bitcast float* %521 to <8 x float>*
  store <8 x float> %520, <8 x float>* %522, align 4, !tbaa !12, !llvm.access.group !16
  %523 = trunc i64 %mul.i.i.i to i32
  %524 = or i32 %523, 8
  %525 = add i32 %mul.i.i.3, %524
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds float, float* %6, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %wide.load103.1 = load <8 x float>, <8 x float>* %528, align 4, !tbaa !12, !llvm.access.group !16
  %529 = add i32 %525, -1
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds float, float* %6, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %wide.load104.1 = load <8 x float>, <8 x float>* %532, align 4, !tbaa !12, !llvm.access.group !16
  %533 = fadd <8 x float> %wide.load103.1, %wide.load104.1
  %534 = add i32 %525, 1
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds float, float* %6, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %wide.load105.1 = load <8 x float>, <8 x float>* %537, align 4, !tbaa !12, !llvm.access.group !16
  %538 = fadd <8 x float> %533, %wide.load105.1
  %539 = add nsw i32 %mul15.i.i.3, %524
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds float, float* %6, i64 %540
  %542 = bitcast float* %541 to <8 x float>*
  %wide.load106.1 = load <8 x float>, <8 x float>* %542, align 4, !tbaa !12, !llvm.access.group !16
  %543 = fadd <8 x float> %538, %wide.load106.1
  %544 = add nsw i32 %mul21.i.i.3, %524
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds float, float* %6, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %wide.load107.1 = load <8 x float>, <8 x float>* %547, align 4, !tbaa !12, !llvm.access.group !16
  %548 = fadd <8 x float> %543, %wide.load107.1
  %549 = fmul <8 x float> %548, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %550 = getelementptr inbounds float, float* %9, i64 %526
  %551 = bitcast float* %550 to <8 x float>*
  store <8 x float> %549, <8 x float>* %551, align 4, !tbaa !12, !llvm.access.group !16
  %552 = trunc i64 %mul.i.i.i to i32
  %553 = or i32 %552, 16
  %554 = add i32 %mul.i.i.3, %553
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds float, float* %6, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %wide.load103.2 = load <8 x float>, <8 x float>* %557, align 4, !tbaa !12, !llvm.access.group !16
  %558 = add i32 %554, -1
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds float, float* %6, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %wide.load104.2 = load <8 x float>, <8 x float>* %561, align 4, !tbaa !12, !llvm.access.group !16
  %562 = fadd <8 x float> %wide.load103.2, %wide.load104.2
  %563 = add i32 %554, 1
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds float, float* %6, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %wide.load105.2 = load <8 x float>, <8 x float>* %566, align 4, !tbaa !12, !llvm.access.group !16
  %567 = fadd <8 x float> %562, %wide.load105.2
  %568 = add nsw i32 %mul15.i.i.3, %553
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds float, float* %6, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %wide.load106.2 = load <8 x float>, <8 x float>* %571, align 4, !tbaa !12, !llvm.access.group !16
  %572 = fadd <8 x float> %567, %wide.load106.2
  %573 = add nsw i32 %mul21.i.i.3, %553
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds float, float* %6, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %wide.load107.2 = load <8 x float>, <8 x float>* %576, align 4, !tbaa !12, !llvm.access.group !16
  %577 = fadd <8 x float> %572, %wide.load107.2
  %578 = fmul <8 x float> %577, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %579 = getelementptr inbounds float, float* %9, i64 %555
  %580 = bitcast float* %579 to <8 x float>*
  store <8 x float> %578, <8 x float>* %580, align 4, !tbaa !12, !llvm.access.group !16
  %581 = trunc i64 %mul.i.i.i to i32
  %582 = or i32 %581, 24
  %583 = add i32 %mul.i.i.3, %582
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds float, float* %6, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %wide.load103.3 = load <8 x float>, <8 x float>* %586, align 4, !tbaa !12, !llvm.access.group !16
  %587 = add i32 %583, -1
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds float, float* %6, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %wide.load104.3 = load <8 x float>, <8 x float>* %590, align 4, !tbaa !12, !llvm.access.group !16
  %591 = fadd <8 x float> %wide.load103.3, %wide.load104.3
  %592 = add i32 %583, 1
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds float, float* %6, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %wide.load105.3 = load <8 x float>, <8 x float>* %595, align 4, !tbaa !12, !llvm.access.group !16
  %596 = fadd <8 x float> %591, %wide.load105.3
  %597 = add nsw i32 %mul15.i.i.3, %582
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds float, float* %6, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %wide.load106.3 = load <8 x float>, <8 x float>* %600, align 4, !tbaa !12, !llvm.access.group !16
  %601 = fadd <8 x float> %596, %wide.load106.3
  %602 = add nsw i32 %mul21.i.i.3, %582
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds float, float* %6, i64 %603
  %605 = bitcast float* %604 to <8 x float>*
  %wide.load107.3 = load <8 x float>, <8 x float>* %605, align 4, !tbaa !12, !llvm.access.group !16
  %606 = fadd <8 x float> %601, %wide.load107.3
  %607 = fmul <8 x float> %606, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %608 = getelementptr inbounds float, float* %9, i64 %584
  %609 = bitcast float* %608 to <8 x float>*
  store <8 x float> %607, <8 x float>* %609, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.3

pregion_for_entry.entry.i.i.3:                    ; preds = %pregion_for_entry.entry.i.i.3, %pregion_for_entry.entry.i.i.3.preheader
  %_local_id_x.i.0.3 = phi i64 [ %621, %pregion_for_entry.entry.i.i.3 ], [ 0, %pregion_for_entry.entry.i.i.3.preheader ]
  %add1.i.i.i.3 = add nuw nsw i64 %_local_id_x.i.0.3, %mul.i.i.i
  %conv2.i.i.3 = trunc i64 %add1.i.i.i.3 to i32
  %add.i.i.3 = add i32 %mul.i.i.3, %conv2.i.i.3
  %idxprom.i.i.3 = sext i32 %add.i.i.3 to i64
  %arrayidx.i.i.3 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.3
  %610 = load float, float* %arrayidx.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.3 = add i32 %add.i.i.3, -1
  %idxprom5.i.i.3 = sext i32 %add4.i.i.3 to i64
  %arrayidx6.i.i.3 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.3
  %611 = load float, float* %arrayidx6.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.3 = fadd float %610, %611
  %add10.i.i.3 = add i32 %add.i.i.3, 1
  %idxprom11.i.i.3 = sext i32 %add10.i.i.3 to i64
  %arrayidx12.i.i.3 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.3
  %612 = load float, float* %arrayidx12.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.3 = fadd float %add7.i.i.3, %612
  %add16.i.i.3 = add nsw i32 %mul15.i.i.3, %conv2.i.i.3
  %idxprom17.i.i.3 = sext i32 %add16.i.i.3 to i64
  %arrayidx18.i.i.3 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.3
  %613 = load float, float* %arrayidx18.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.3 = fadd float %add13.i.i.3, %613
  %add22.i.i.3 = add nsw i32 %mul21.i.i.3, %conv2.i.i.3
  %idxprom23.i.i.3 = sext i32 %add22.i.i.3 to i64
  %arrayidx24.i.i.3 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.3
  %614 = load float, float* %arrayidx24.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.3 = fadd float %add19.i.i.3, %614
  %mul26.i.i.3 = fmul float %add25.i.i.3, 0x3FC99999A0000000
  %arrayidx30.i.i.3 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.3
  store float %mul26.i.i.3, float* %arrayidx30.i.i.3, align 4, !tbaa !12, !llvm.access.group !16
  %615 = or i64 %_local_id_x.i.0.3, 1
  %add1.i.i.i.3.1 = add nuw nsw i64 %615, %mul.i.i.i
  %conv2.i.i.3.1 = trunc i64 %add1.i.i.i.3.1 to i32
  %add.i.i.3.1 = add i32 %mul.i.i.3, %conv2.i.i.3.1
  %idxprom.i.i.3.1 = sext i32 %add.i.i.3.1 to i64
  %arrayidx.i.i.3.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.3.1
  %616 = load float, float* %arrayidx.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.3.1 = add i32 %add.i.i.3.1, -1
  %idxprom5.i.i.3.1 = sext i32 %add4.i.i.3.1 to i64
  %arrayidx6.i.i.3.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.3.1
  %617 = load float, float* %arrayidx6.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.3.1 = fadd float %616, %617
  %add10.i.i.3.1 = add i32 %add.i.i.3.1, 1
  %idxprom11.i.i.3.1 = sext i32 %add10.i.i.3.1 to i64
  %arrayidx12.i.i.3.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.3.1
  %618 = load float, float* %arrayidx12.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.3.1 = fadd float %add7.i.i.3.1, %618
  %add16.i.i.3.1 = add nsw i32 %mul15.i.i.3, %conv2.i.i.3.1
  %idxprom17.i.i.3.1 = sext i32 %add16.i.i.3.1 to i64
  %arrayidx18.i.i.3.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.3.1
  %619 = load float, float* %arrayidx18.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.3.1 = fadd float %add13.i.i.3.1, %619
  %add22.i.i.3.1 = add nsw i32 %mul21.i.i.3, %conv2.i.i.3.1
  %idxprom23.i.i.3.1 = sext i32 %add22.i.i.3.1 to i64
  %arrayidx24.i.i.3.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.3.1
  %620 = load float, float* %arrayidx24.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.3.1 = fadd float %add19.i.i.3.1, %620
  %mul26.i.i.3.1 = fmul float %add25.i.i.3.1, 0x3FC99999A0000000
  %arrayidx30.i.i.3.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.3.1
  store float %mul26.i.i.3.1, float* %arrayidx30.i.i.3.1, align 4, !tbaa !12, !llvm.access.group !16
  %621 = add nuw nsw i64 %_local_id_x.i.0.3, 2
  %exitcond.3.not.1 = icmp eq i64 %621, 32
  br i1 %exitcond.3.not.1, label %pregion_for_end.i.i.3.loopexit, label %pregion_for_entry.entry.i.i.3, !llvm.loop !40

pregion_for_end.i.i.3.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.3
  br label %pregion_for_end.i.i.3

pregion_for_end.i.i.3:                            ; preds = %pregion_for_end.i.i.3.loopexit, %vector.body80
  %622 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.4 = or i32 %622, 4
  %mul.i.i.4 = mul nsw i32 %13, %conv.i.i.4
  %add14.i.i.4 = or i32 %622, 5
  %mul15.i.i.4 = mul nsw i32 %add14.i.i.4, %13
  %sub20.i.i.4 = add nsw i32 %conv.i.i.4, -1
  %mul21.i.i.4 = mul nsw i32 %sub20.i.i.4, %13
  %623 = mul i32 %13, %conv.i.i.4
  %624 = trunc i64 %2 to i32
  %625 = shl i32 %624, 5
  %626 = add nsw i32 %623, %625
  %627 = icmp sgt i32 %626, 2147483616
  %628 = add i32 %623, %625
  %629 = add i32 %628, -1
  %630 = add i32 %628, 30
  %631 = icmp slt i32 %630, %629
  %632 = or i1 %627, %631
  %633 = add i32 %623, %625
  %634 = or i32 %633, 1
  %635 = icmp sgt i32 %634, 2147483616
  %636 = or i1 %632, %635
  %637 = mul i32 %13, %add14.i.i.4
  %638 = add nsw i32 %637, %625
  %639 = icmp sgt i32 %638, 2147483616
  %640 = or i1 %636, %639
  %641 = mul i32 %13, %add14.i.i.2
  %642 = add nsw i32 %641, %625
  %643 = icmp sgt i32 %642, 2147483616
  %644 = or i1 %640, %643
  br i1 %644, label %pregion_for_entry.entry.i.i.4.preheader, label %vector.body110

pregion_for_entry.entry.i.i.4.preheader:          ; preds = %pregion_for_end.i.i.3
  br label %pregion_for_entry.entry.i.i.4

vector.body110:                                   ; preds = %pregion_for_end.i.i.3
  %645 = trunc i64 %mul.i.i.i to i32
  %646 = add i32 %mul.i.i.4, %645
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds float, float* %6, i64 %647
  %649 = bitcast float* %648 to <8 x float>*
  %wide.load133 = load <8 x float>, <8 x float>* %649, align 4, !tbaa !12, !llvm.access.group !16
  %650 = add i32 %646, -1
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds float, float* %6, i64 %651
  %653 = bitcast float* %652 to <8 x float>*
  %wide.load134 = load <8 x float>, <8 x float>* %653, align 4, !tbaa !12, !llvm.access.group !16
  %654 = fadd <8 x float> %wide.load133, %wide.load134
  %655 = or i32 %646, 1
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds float, float* %6, i64 %656
  %658 = bitcast float* %657 to <8 x float>*
  %wide.load135 = load <8 x float>, <8 x float>* %658, align 4, !tbaa !12, !llvm.access.group !16
  %659 = fadd <8 x float> %654, %wide.load135
  %660 = add nsw i32 %mul15.i.i.4, %645
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds float, float* %6, i64 %661
  %663 = bitcast float* %662 to <8 x float>*
  %wide.load136 = load <8 x float>, <8 x float>* %663, align 4, !tbaa !12, !llvm.access.group !16
  %664 = fadd <8 x float> %659, %wide.load136
  %665 = add nsw i32 %mul21.i.i.4, %645
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds float, float* %6, i64 %666
  %668 = bitcast float* %667 to <8 x float>*
  %wide.load137 = load <8 x float>, <8 x float>* %668, align 4, !tbaa !12, !llvm.access.group !16
  %669 = fadd <8 x float> %664, %wide.load137
  %670 = fmul <8 x float> %669, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %671 = getelementptr inbounds float, float* %9, i64 %647
  %672 = bitcast float* %671 to <8 x float>*
  store <8 x float> %670, <8 x float>* %672, align 4, !tbaa !12, !llvm.access.group !16
  %673 = trunc i64 %mul.i.i.i to i32
  %674 = or i32 %673, 8
  %675 = add i32 %mul.i.i.4, %674
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds float, float* %6, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %wide.load133.1 = load <8 x float>, <8 x float>* %678, align 4, !tbaa !12, !llvm.access.group !16
  %679 = add i32 %675, -1
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds float, float* %6, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %wide.load134.1 = load <8 x float>, <8 x float>* %682, align 4, !tbaa !12, !llvm.access.group !16
  %683 = fadd <8 x float> %wide.load133.1, %wide.load134.1
  %684 = or i32 %675, 1
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds float, float* %6, i64 %685
  %687 = bitcast float* %686 to <8 x float>*
  %wide.load135.1 = load <8 x float>, <8 x float>* %687, align 4, !tbaa !12, !llvm.access.group !16
  %688 = fadd <8 x float> %683, %wide.load135.1
  %689 = add nsw i32 %mul15.i.i.4, %674
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds float, float* %6, i64 %690
  %692 = bitcast float* %691 to <8 x float>*
  %wide.load136.1 = load <8 x float>, <8 x float>* %692, align 4, !tbaa !12, !llvm.access.group !16
  %693 = fadd <8 x float> %688, %wide.load136.1
  %694 = add nsw i32 %mul21.i.i.4, %674
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds float, float* %6, i64 %695
  %697 = bitcast float* %696 to <8 x float>*
  %wide.load137.1 = load <8 x float>, <8 x float>* %697, align 4, !tbaa !12, !llvm.access.group !16
  %698 = fadd <8 x float> %693, %wide.load137.1
  %699 = fmul <8 x float> %698, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %700 = getelementptr inbounds float, float* %9, i64 %676
  %701 = bitcast float* %700 to <8 x float>*
  store <8 x float> %699, <8 x float>* %701, align 4, !tbaa !12, !llvm.access.group !16
  %702 = trunc i64 %mul.i.i.i to i32
  %703 = or i32 %702, 16
  %704 = add i32 %mul.i.i.4, %703
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds float, float* %6, i64 %705
  %707 = bitcast float* %706 to <8 x float>*
  %wide.load133.2 = load <8 x float>, <8 x float>* %707, align 4, !tbaa !12, !llvm.access.group !16
  %708 = add i32 %704, -1
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds float, float* %6, i64 %709
  %711 = bitcast float* %710 to <8 x float>*
  %wide.load134.2 = load <8 x float>, <8 x float>* %711, align 4, !tbaa !12, !llvm.access.group !16
  %712 = fadd <8 x float> %wide.load133.2, %wide.load134.2
  %713 = or i32 %704, 1
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds float, float* %6, i64 %714
  %716 = bitcast float* %715 to <8 x float>*
  %wide.load135.2 = load <8 x float>, <8 x float>* %716, align 4, !tbaa !12, !llvm.access.group !16
  %717 = fadd <8 x float> %712, %wide.load135.2
  %718 = add nsw i32 %mul15.i.i.4, %703
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds float, float* %6, i64 %719
  %721 = bitcast float* %720 to <8 x float>*
  %wide.load136.2 = load <8 x float>, <8 x float>* %721, align 4, !tbaa !12, !llvm.access.group !16
  %722 = fadd <8 x float> %717, %wide.load136.2
  %723 = add nsw i32 %mul21.i.i.4, %703
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds float, float* %6, i64 %724
  %726 = bitcast float* %725 to <8 x float>*
  %wide.load137.2 = load <8 x float>, <8 x float>* %726, align 4, !tbaa !12, !llvm.access.group !16
  %727 = fadd <8 x float> %722, %wide.load137.2
  %728 = fmul <8 x float> %727, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %729 = getelementptr inbounds float, float* %9, i64 %705
  %730 = bitcast float* %729 to <8 x float>*
  store <8 x float> %728, <8 x float>* %730, align 4, !tbaa !12, !llvm.access.group !16
  %731 = trunc i64 %mul.i.i.i to i32
  %732 = or i32 %731, 24
  %733 = add i32 %mul.i.i.4, %732
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds float, float* %6, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %wide.load133.3 = load <8 x float>, <8 x float>* %736, align 4, !tbaa !12, !llvm.access.group !16
  %737 = add i32 %733, -1
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %6, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %wide.load134.3 = load <8 x float>, <8 x float>* %740, align 4, !tbaa !12, !llvm.access.group !16
  %741 = fadd <8 x float> %wide.load133.3, %wide.load134.3
  %742 = or i32 %733, 1
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float, float* %6, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %wide.load135.3 = load <8 x float>, <8 x float>* %745, align 4, !tbaa !12, !llvm.access.group !16
  %746 = fadd <8 x float> %741, %wide.load135.3
  %747 = add nsw i32 %mul15.i.i.4, %732
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds float, float* %6, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %wide.load136.3 = load <8 x float>, <8 x float>* %750, align 4, !tbaa !12, !llvm.access.group !16
  %751 = fadd <8 x float> %746, %wide.load136.3
  %752 = add nsw i32 %mul21.i.i.4, %732
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float, float* %6, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %wide.load137.3 = load <8 x float>, <8 x float>* %755, align 4, !tbaa !12, !llvm.access.group !16
  %756 = fadd <8 x float> %751, %wide.load137.3
  %757 = fmul <8 x float> %756, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %758 = getelementptr inbounds float, float* %9, i64 %734
  %759 = bitcast float* %758 to <8 x float>*
  store <8 x float> %757, <8 x float>* %759, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.4

pregion_for_entry.entry.i.i.4:                    ; preds = %pregion_for_entry.entry.i.i.4, %pregion_for_entry.entry.i.i.4.preheader
  %_local_id_x.i.0.4 = phi i64 [ %771, %pregion_for_entry.entry.i.i.4 ], [ 0, %pregion_for_entry.entry.i.i.4.preheader ]
  %add1.i.i.i.4 = add nuw nsw i64 %_local_id_x.i.0.4, %mul.i.i.i
  %conv2.i.i.4 = trunc i64 %add1.i.i.i.4 to i32
  %add.i.i.4 = add i32 %mul.i.i.4, %conv2.i.i.4
  %idxprom.i.i.4 = sext i32 %add.i.i.4 to i64
  %arrayidx.i.i.4 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.4
  %760 = load float, float* %arrayidx.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.4 = add i32 %add.i.i.4, -1
  %idxprom5.i.i.4 = sext i32 %add4.i.i.4 to i64
  %arrayidx6.i.i.4 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.4
  %761 = load float, float* %arrayidx6.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.4 = fadd float %760, %761
  %add10.i.i.4 = or i32 %add.i.i.4, 1
  %idxprom11.i.i.4 = sext i32 %add10.i.i.4 to i64
  %arrayidx12.i.i.4 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.4
  %762 = load float, float* %arrayidx12.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.4 = fadd float %add7.i.i.4, %762
  %add16.i.i.4 = add nsw i32 %mul15.i.i.4, %conv2.i.i.4
  %idxprom17.i.i.4 = sext i32 %add16.i.i.4 to i64
  %arrayidx18.i.i.4 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.4
  %763 = load float, float* %arrayidx18.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.4 = fadd float %add13.i.i.4, %763
  %add22.i.i.4 = add nsw i32 %mul21.i.i.4, %conv2.i.i.4
  %idxprom23.i.i.4 = sext i32 %add22.i.i.4 to i64
  %arrayidx24.i.i.4 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.4
  %764 = load float, float* %arrayidx24.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.4 = fadd float %add19.i.i.4, %764
  %mul26.i.i.4 = fmul float %add25.i.i.4, 0x3FC99999A0000000
  %arrayidx30.i.i.4 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.4
  store float %mul26.i.i.4, float* %arrayidx30.i.i.4, align 4, !tbaa !12, !llvm.access.group !16
  %765 = or i64 %_local_id_x.i.0.4, 1
  %add1.i.i.i.4.1 = add nuw nsw i64 %765, %mul.i.i.i
  %conv2.i.i.4.1 = trunc i64 %add1.i.i.i.4.1 to i32
  %add.i.i.4.1 = add i32 %mul.i.i.4, %conv2.i.i.4.1
  %idxprom.i.i.4.1 = sext i32 %add.i.i.4.1 to i64
  %arrayidx.i.i.4.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.4.1
  %766 = load float, float* %arrayidx.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.4.1 = add nsw i32 %add.i.i.4.1, -1
  %idxprom5.i.i.4.1 = sext i32 %add4.i.i.4.1 to i64
  %arrayidx6.i.i.4.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.4.1
  %767 = load float, float* %arrayidx6.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.4.1 = fadd float %766, %767
  %add10.i.i.4.1 = add i32 %add.i.i.4.1, 1
  %idxprom11.i.i.4.1 = sext i32 %add10.i.i.4.1 to i64
  %arrayidx12.i.i.4.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.4.1
  %768 = load float, float* %arrayidx12.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.4.1 = fadd float %add7.i.i.4.1, %768
  %add16.i.i.4.1 = add nsw i32 %mul15.i.i.4, %conv2.i.i.4.1
  %idxprom17.i.i.4.1 = sext i32 %add16.i.i.4.1 to i64
  %arrayidx18.i.i.4.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.4.1
  %769 = load float, float* %arrayidx18.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.4.1 = fadd float %add13.i.i.4.1, %769
  %add22.i.i.4.1 = add nsw i32 %mul21.i.i.4, %conv2.i.i.4.1
  %idxprom23.i.i.4.1 = sext i32 %add22.i.i.4.1 to i64
  %arrayidx24.i.i.4.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.4.1
  %770 = load float, float* %arrayidx24.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.4.1 = fadd float %add19.i.i.4.1, %770
  %mul26.i.i.4.1 = fmul float %add25.i.i.4.1, 0x3FC99999A0000000
  %arrayidx30.i.i.4.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.4.1
  store float %mul26.i.i.4.1, float* %arrayidx30.i.i.4.1, align 4, !tbaa !12, !llvm.access.group !16
  %771 = add nuw nsw i64 %_local_id_x.i.0.4, 2
  %exitcond.4.not.1 = icmp eq i64 %771, 32
  br i1 %exitcond.4.not.1, label %pregion_for_end.i.i.4.loopexit, label %pregion_for_entry.entry.i.i.4, !llvm.loop !41

pregion_for_end.i.i.4.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.4
  br label %pregion_for_end.i.i.4

pregion_for_end.i.i.4:                            ; preds = %pregion_for_end.i.i.4.loopexit, %vector.body110
  %772 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.5 = or i32 %772, 5
  %mul.i.i.5 = mul nsw i32 %13, %conv.i.i.5
  %add14.i.i.5 = add nuw nsw i32 %conv.i.i.5, 1
  %mul15.i.i.5 = mul nsw i32 %add14.i.i.5, %13
  %sub20.i.i.5 = add nsw i32 %conv.i.i.5, -1
  %mul21.i.i.5 = mul nsw i32 %sub20.i.i.5, %13
  %773 = mul i32 %13, %add14.i.i.4
  %774 = trunc i64 %2 to i32
  %775 = shl i32 %774, 5
  %776 = add nsw i32 %773, %775
  %777 = icmp sgt i32 %776, 2147483616
  %778 = add i32 %773, %775
  %779 = add i32 %778, -1
  %780 = add i32 %778, 30
  %781 = icmp slt i32 %780, %779
  %782 = or i1 %777, %781
  %783 = add i32 %773, %775
  %784 = add i32 %783, 1
  %785 = add i32 %783, 32
  %786 = icmp slt i32 %785, %784
  %787 = or i1 %782, %786
  %788 = or i32 %conv.i.i, 6
  %789 = mul i32 %13, %788
  %790 = add nsw i32 %789, %775
  %791 = icmp sgt i32 %790, 2147483616
  %792 = or i1 %787, %791
  %793 = mul i32 %13, %conv.i.i.4
  %794 = add nsw i32 %793, %775
  %795 = icmp sgt i32 %794, 2147483616
  %796 = or i1 %792, %795
  br i1 %796, label %pregion_for_entry.entry.i.i.5.preheader, label %vector.body140

pregion_for_entry.entry.i.i.5.preheader:          ; preds = %pregion_for_end.i.i.4
  br label %pregion_for_entry.entry.i.i.5

vector.body140:                                   ; preds = %pregion_for_end.i.i.4
  %797 = trunc i64 %mul.i.i.i to i32
  %798 = add i32 %mul.i.i.5, %797
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds float, float* %6, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %wide.load163 = load <8 x float>, <8 x float>* %801, align 4, !tbaa !12, !llvm.access.group !16
  %802 = add i32 %798, -1
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds float, float* %6, i64 %803
  %805 = bitcast float* %804 to <8 x float>*
  %wide.load164 = load <8 x float>, <8 x float>* %805, align 4, !tbaa !12, !llvm.access.group !16
  %806 = fadd <8 x float> %wide.load163, %wide.load164
  %807 = add i32 %798, 1
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds float, float* %6, i64 %808
  %810 = bitcast float* %809 to <8 x float>*
  %wide.load165 = load <8 x float>, <8 x float>* %810, align 4, !tbaa !12, !llvm.access.group !16
  %811 = fadd <8 x float> %806, %wide.load165
  %812 = add nsw i32 %mul15.i.i.5, %797
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds float, float* %6, i64 %813
  %815 = bitcast float* %814 to <8 x float>*
  %wide.load166 = load <8 x float>, <8 x float>* %815, align 4, !tbaa !12, !llvm.access.group !16
  %816 = fadd <8 x float> %811, %wide.load166
  %817 = add nsw i32 %mul21.i.i.5, %797
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds float, float* %6, i64 %818
  %820 = bitcast float* %819 to <8 x float>*
  %wide.load167 = load <8 x float>, <8 x float>* %820, align 4, !tbaa !12, !llvm.access.group !16
  %821 = fadd <8 x float> %816, %wide.load167
  %822 = fmul <8 x float> %821, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %823 = getelementptr inbounds float, float* %9, i64 %799
  %824 = bitcast float* %823 to <8 x float>*
  store <8 x float> %822, <8 x float>* %824, align 4, !tbaa !12, !llvm.access.group !16
  %825 = trunc i64 %mul.i.i.i to i32
  %826 = or i32 %825, 8
  %827 = add i32 %mul.i.i.5, %826
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds float, float* %6, i64 %828
  %830 = bitcast float* %829 to <8 x float>*
  %wide.load163.1 = load <8 x float>, <8 x float>* %830, align 4, !tbaa !12, !llvm.access.group !16
  %831 = add i32 %827, -1
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds float, float* %6, i64 %832
  %834 = bitcast float* %833 to <8 x float>*
  %wide.load164.1 = load <8 x float>, <8 x float>* %834, align 4, !tbaa !12, !llvm.access.group !16
  %835 = fadd <8 x float> %wide.load163.1, %wide.load164.1
  %836 = add i32 %827, 1
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds float, float* %6, i64 %837
  %839 = bitcast float* %838 to <8 x float>*
  %wide.load165.1 = load <8 x float>, <8 x float>* %839, align 4, !tbaa !12, !llvm.access.group !16
  %840 = fadd <8 x float> %835, %wide.load165.1
  %841 = add nsw i32 %mul15.i.i.5, %826
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds float, float* %6, i64 %842
  %844 = bitcast float* %843 to <8 x float>*
  %wide.load166.1 = load <8 x float>, <8 x float>* %844, align 4, !tbaa !12, !llvm.access.group !16
  %845 = fadd <8 x float> %840, %wide.load166.1
  %846 = add nsw i32 %mul21.i.i.5, %826
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds float, float* %6, i64 %847
  %849 = bitcast float* %848 to <8 x float>*
  %wide.load167.1 = load <8 x float>, <8 x float>* %849, align 4, !tbaa !12, !llvm.access.group !16
  %850 = fadd <8 x float> %845, %wide.load167.1
  %851 = fmul <8 x float> %850, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %852 = getelementptr inbounds float, float* %9, i64 %828
  %853 = bitcast float* %852 to <8 x float>*
  store <8 x float> %851, <8 x float>* %853, align 4, !tbaa !12, !llvm.access.group !16
  %854 = trunc i64 %mul.i.i.i to i32
  %855 = or i32 %854, 16
  %856 = add i32 %mul.i.i.5, %855
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds float, float* %6, i64 %857
  %859 = bitcast float* %858 to <8 x float>*
  %wide.load163.2 = load <8 x float>, <8 x float>* %859, align 4, !tbaa !12, !llvm.access.group !16
  %860 = add i32 %856, -1
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds float, float* %6, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %wide.load164.2 = load <8 x float>, <8 x float>* %863, align 4, !tbaa !12, !llvm.access.group !16
  %864 = fadd <8 x float> %wide.load163.2, %wide.load164.2
  %865 = add i32 %856, 1
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds float, float* %6, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %wide.load165.2 = load <8 x float>, <8 x float>* %868, align 4, !tbaa !12, !llvm.access.group !16
  %869 = fadd <8 x float> %864, %wide.load165.2
  %870 = add nsw i32 %mul15.i.i.5, %855
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds float, float* %6, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %wide.load166.2 = load <8 x float>, <8 x float>* %873, align 4, !tbaa !12, !llvm.access.group !16
  %874 = fadd <8 x float> %869, %wide.load166.2
  %875 = add nsw i32 %mul21.i.i.5, %855
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds float, float* %6, i64 %876
  %878 = bitcast float* %877 to <8 x float>*
  %wide.load167.2 = load <8 x float>, <8 x float>* %878, align 4, !tbaa !12, !llvm.access.group !16
  %879 = fadd <8 x float> %874, %wide.load167.2
  %880 = fmul <8 x float> %879, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %881 = getelementptr inbounds float, float* %9, i64 %857
  %882 = bitcast float* %881 to <8 x float>*
  store <8 x float> %880, <8 x float>* %882, align 4, !tbaa !12, !llvm.access.group !16
  %883 = trunc i64 %mul.i.i.i to i32
  %884 = or i32 %883, 24
  %885 = add i32 %mul.i.i.5, %884
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds float, float* %6, i64 %886
  %888 = bitcast float* %887 to <8 x float>*
  %wide.load163.3 = load <8 x float>, <8 x float>* %888, align 4, !tbaa !12, !llvm.access.group !16
  %889 = add i32 %885, -1
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds float, float* %6, i64 %890
  %892 = bitcast float* %891 to <8 x float>*
  %wide.load164.3 = load <8 x float>, <8 x float>* %892, align 4, !tbaa !12, !llvm.access.group !16
  %893 = fadd <8 x float> %wide.load163.3, %wide.load164.3
  %894 = add i32 %885, 1
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds float, float* %6, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %wide.load165.3 = load <8 x float>, <8 x float>* %897, align 4, !tbaa !12, !llvm.access.group !16
  %898 = fadd <8 x float> %893, %wide.load165.3
  %899 = add nsw i32 %mul15.i.i.5, %884
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds float, float* %6, i64 %900
  %902 = bitcast float* %901 to <8 x float>*
  %wide.load166.3 = load <8 x float>, <8 x float>* %902, align 4, !tbaa !12, !llvm.access.group !16
  %903 = fadd <8 x float> %898, %wide.load166.3
  %904 = add nsw i32 %mul21.i.i.5, %884
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds float, float* %6, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %wide.load167.3 = load <8 x float>, <8 x float>* %907, align 4, !tbaa !12, !llvm.access.group !16
  %908 = fadd <8 x float> %903, %wide.load167.3
  %909 = fmul <8 x float> %908, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %910 = getelementptr inbounds float, float* %9, i64 %886
  %911 = bitcast float* %910 to <8 x float>*
  store <8 x float> %909, <8 x float>* %911, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.5

pregion_for_entry.entry.i.i.5:                    ; preds = %pregion_for_entry.entry.i.i.5, %pregion_for_entry.entry.i.i.5.preheader
  %_local_id_x.i.0.5 = phi i64 [ %923, %pregion_for_entry.entry.i.i.5 ], [ 0, %pregion_for_entry.entry.i.i.5.preheader ]
  %add1.i.i.i.5 = add nuw nsw i64 %_local_id_x.i.0.5, %mul.i.i.i
  %conv2.i.i.5 = trunc i64 %add1.i.i.i.5 to i32
  %add.i.i.5 = add i32 %mul.i.i.5, %conv2.i.i.5
  %idxprom.i.i.5 = sext i32 %add.i.i.5 to i64
  %arrayidx.i.i.5 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.5
  %912 = load float, float* %arrayidx.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.5 = add i32 %add.i.i.5, -1
  %idxprom5.i.i.5 = sext i32 %add4.i.i.5 to i64
  %arrayidx6.i.i.5 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.5
  %913 = load float, float* %arrayidx6.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.5 = fadd float %912, %913
  %add10.i.i.5 = add i32 %add.i.i.5, 1
  %idxprom11.i.i.5 = sext i32 %add10.i.i.5 to i64
  %arrayidx12.i.i.5 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.5
  %914 = load float, float* %arrayidx12.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.5 = fadd float %add7.i.i.5, %914
  %add16.i.i.5 = add nsw i32 %mul15.i.i.5, %conv2.i.i.5
  %idxprom17.i.i.5 = sext i32 %add16.i.i.5 to i64
  %arrayidx18.i.i.5 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.5
  %915 = load float, float* %arrayidx18.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.5 = fadd float %add13.i.i.5, %915
  %add22.i.i.5 = add nsw i32 %mul21.i.i.5, %conv2.i.i.5
  %idxprom23.i.i.5 = sext i32 %add22.i.i.5 to i64
  %arrayidx24.i.i.5 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.5
  %916 = load float, float* %arrayidx24.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.5 = fadd float %add19.i.i.5, %916
  %mul26.i.i.5 = fmul float %add25.i.i.5, 0x3FC99999A0000000
  %arrayidx30.i.i.5 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.5
  store float %mul26.i.i.5, float* %arrayidx30.i.i.5, align 4, !tbaa !12, !llvm.access.group !16
  %917 = or i64 %_local_id_x.i.0.5, 1
  %add1.i.i.i.5.1 = add nuw nsw i64 %917, %mul.i.i.i
  %conv2.i.i.5.1 = trunc i64 %add1.i.i.i.5.1 to i32
  %add.i.i.5.1 = add i32 %mul.i.i.5, %conv2.i.i.5.1
  %idxprom.i.i.5.1 = sext i32 %add.i.i.5.1 to i64
  %arrayidx.i.i.5.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.5.1
  %918 = load float, float* %arrayidx.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.5.1 = add i32 %add.i.i.5.1, -1
  %idxprom5.i.i.5.1 = sext i32 %add4.i.i.5.1 to i64
  %arrayidx6.i.i.5.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.5.1
  %919 = load float, float* %arrayidx6.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.5.1 = fadd float %918, %919
  %add10.i.i.5.1 = add i32 %add.i.i.5.1, 1
  %idxprom11.i.i.5.1 = sext i32 %add10.i.i.5.1 to i64
  %arrayidx12.i.i.5.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.5.1
  %920 = load float, float* %arrayidx12.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.5.1 = fadd float %add7.i.i.5.1, %920
  %add16.i.i.5.1 = add nsw i32 %mul15.i.i.5, %conv2.i.i.5.1
  %idxprom17.i.i.5.1 = sext i32 %add16.i.i.5.1 to i64
  %arrayidx18.i.i.5.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.5.1
  %921 = load float, float* %arrayidx18.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.5.1 = fadd float %add13.i.i.5.1, %921
  %add22.i.i.5.1 = add nsw i32 %mul21.i.i.5, %conv2.i.i.5.1
  %idxprom23.i.i.5.1 = sext i32 %add22.i.i.5.1 to i64
  %arrayidx24.i.i.5.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.5.1
  %922 = load float, float* %arrayidx24.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.5.1 = fadd float %add19.i.i.5.1, %922
  %mul26.i.i.5.1 = fmul float %add25.i.i.5.1, 0x3FC99999A0000000
  %arrayidx30.i.i.5.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.5.1
  store float %mul26.i.i.5.1, float* %arrayidx30.i.i.5.1, align 4, !tbaa !12, !llvm.access.group !16
  %923 = add nuw nsw i64 %_local_id_x.i.0.5, 2
  %exitcond.5.not.1 = icmp eq i64 %923, 32
  br i1 %exitcond.5.not.1, label %pregion_for_end.i.i.5.loopexit, label %pregion_for_entry.entry.i.i.5, !llvm.loop !42

pregion_for_end.i.i.5.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.5
  br label %pregion_for_end.i.i.5

pregion_for_end.i.i.5:                            ; preds = %pregion_for_end.i.i.5.loopexit, %vector.body140
  %924 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.6 = or i32 %924, 6
  %mul.i.i.6 = mul nsw i32 %13, %conv.i.i.6
  %add14.i.i.6 = or i32 %924, 7
  %mul15.i.i.6 = mul nsw i32 %add14.i.i.6, %13
  %sub20.i.i.6 = add nsw i32 %conv.i.i.6, -1
  %mul21.i.i.6 = mul nsw i32 %sub20.i.i.6, %13
  %925 = mul i32 %13, %conv.i.i.6
  %926 = trunc i64 %2 to i32
  %927 = shl i32 %926, 5
  %928 = add nsw i32 %925, %927
  %929 = icmp sgt i32 %928, 2147483616
  %930 = add i32 %925, %927
  %931 = add i32 %930, -1
  %932 = add i32 %930, 30
  %933 = icmp slt i32 %932, %931
  %934 = or i1 %929, %933
  %935 = add i32 %925, %927
  %936 = or i32 %935, 1
  %937 = icmp sgt i32 %936, 2147483616
  %938 = or i1 %934, %937
  %939 = mul i32 %13, %add14.i.i.6
  %940 = add nsw i32 %939, %927
  %941 = icmp sgt i32 %940, 2147483616
  %942 = or i1 %938, %941
  %943 = mul i32 %13, %add14.i.i.4
  %944 = add nsw i32 %943, %927
  %945 = icmp sgt i32 %944, 2147483616
  %946 = or i1 %942, %945
  br i1 %946, label %pregion_for_entry.entry.i.i.6.preheader, label %vector.body170

pregion_for_entry.entry.i.i.6.preheader:          ; preds = %pregion_for_end.i.i.5
  br label %pregion_for_entry.entry.i.i.6

vector.body170:                                   ; preds = %pregion_for_end.i.i.5
  %947 = trunc i64 %mul.i.i.i to i32
  %948 = add i32 %mul.i.i.6, %947
  %949 = sext i32 %948 to i64
  %950 = getelementptr inbounds float, float* %6, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %wide.load193 = load <8 x float>, <8 x float>* %951, align 4, !tbaa !12, !llvm.access.group !16
  %952 = add i32 %948, -1
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds float, float* %6, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %wide.load194 = load <8 x float>, <8 x float>* %955, align 4, !tbaa !12, !llvm.access.group !16
  %956 = fadd <8 x float> %wide.load193, %wide.load194
  %957 = or i32 %948, 1
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds float, float* %6, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %wide.load195 = load <8 x float>, <8 x float>* %960, align 4, !tbaa !12, !llvm.access.group !16
  %961 = fadd <8 x float> %956, %wide.load195
  %962 = add nsw i32 %mul15.i.i.6, %947
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds float, float* %6, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %wide.load196 = load <8 x float>, <8 x float>* %965, align 4, !tbaa !12, !llvm.access.group !16
  %966 = fadd <8 x float> %961, %wide.load196
  %967 = add nsw i32 %mul21.i.i.6, %947
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds float, float* %6, i64 %968
  %970 = bitcast float* %969 to <8 x float>*
  %wide.load197 = load <8 x float>, <8 x float>* %970, align 4, !tbaa !12, !llvm.access.group !16
  %971 = fadd <8 x float> %966, %wide.load197
  %972 = fmul <8 x float> %971, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %973 = getelementptr inbounds float, float* %9, i64 %949
  %974 = bitcast float* %973 to <8 x float>*
  store <8 x float> %972, <8 x float>* %974, align 4, !tbaa !12, !llvm.access.group !16
  %975 = trunc i64 %mul.i.i.i to i32
  %976 = or i32 %975, 8
  %977 = add i32 %mul.i.i.6, %976
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds float, float* %6, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %wide.load193.1 = load <8 x float>, <8 x float>* %980, align 4, !tbaa !12, !llvm.access.group !16
  %981 = add i32 %977, -1
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds float, float* %6, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %wide.load194.1 = load <8 x float>, <8 x float>* %984, align 4, !tbaa !12, !llvm.access.group !16
  %985 = fadd <8 x float> %wide.load193.1, %wide.load194.1
  %986 = or i32 %977, 1
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds float, float* %6, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %wide.load195.1 = load <8 x float>, <8 x float>* %989, align 4, !tbaa !12, !llvm.access.group !16
  %990 = fadd <8 x float> %985, %wide.load195.1
  %991 = add nsw i32 %mul15.i.i.6, %976
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds float, float* %6, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %wide.load196.1 = load <8 x float>, <8 x float>* %994, align 4, !tbaa !12, !llvm.access.group !16
  %995 = fadd <8 x float> %990, %wide.load196.1
  %996 = add nsw i32 %mul21.i.i.6, %976
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds float, float* %6, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %wide.load197.1 = load <8 x float>, <8 x float>* %999, align 4, !tbaa !12, !llvm.access.group !16
  %1000 = fadd <8 x float> %995, %wide.load197.1
  %1001 = fmul <8 x float> %1000, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1002 = getelementptr inbounds float, float* %9, i64 %978
  %1003 = bitcast float* %1002 to <8 x float>*
  store <8 x float> %1001, <8 x float>* %1003, align 4, !tbaa !12, !llvm.access.group !16
  %1004 = trunc i64 %mul.i.i.i to i32
  %1005 = or i32 %1004, 16
  %1006 = add i32 %mul.i.i.6, %1005
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds float, float* %6, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %wide.load193.2 = load <8 x float>, <8 x float>* %1009, align 4, !tbaa !12, !llvm.access.group !16
  %1010 = add i32 %1006, -1
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds float, float* %6, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %wide.load194.2 = load <8 x float>, <8 x float>* %1013, align 4, !tbaa !12, !llvm.access.group !16
  %1014 = fadd <8 x float> %wide.load193.2, %wide.load194.2
  %1015 = or i32 %1006, 1
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds float, float* %6, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %wide.load195.2 = load <8 x float>, <8 x float>* %1018, align 4, !tbaa !12, !llvm.access.group !16
  %1019 = fadd <8 x float> %1014, %wide.load195.2
  %1020 = add nsw i32 %mul15.i.i.6, %1005
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds float, float* %6, i64 %1021
  %1023 = bitcast float* %1022 to <8 x float>*
  %wide.load196.2 = load <8 x float>, <8 x float>* %1023, align 4, !tbaa !12, !llvm.access.group !16
  %1024 = fadd <8 x float> %1019, %wide.load196.2
  %1025 = add nsw i32 %mul21.i.i.6, %1005
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds float, float* %6, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %wide.load197.2 = load <8 x float>, <8 x float>* %1028, align 4, !tbaa !12, !llvm.access.group !16
  %1029 = fadd <8 x float> %1024, %wide.load197.2
  %1030 = fmul <8 x float> %1029, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1031 = getelementptr inbounds float, float* %9, i64 %1007
  %1032 = bitcast float* %1031 to <8 x float>*
  store <8 x float> %1030, <8 x float>* %1032, align 4, !tbaa !12, !llvm.access.group !16
  %1033 = trunc i64 %mul.i.i.i to i32
  %1034 = or i32 %1033, 24
  %1035 = add i32 %mul.i.i.6, %1034
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds float, float* %6, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %wide.load193.3 = load <8 x float>, <8 x float>* %1038, align 4, !tbaa !12, !llvm.access.group !16
  %1039 = add i32 %1035, -1
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds float, float* %6, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %wide.load194.3 = load <8 x float>, <8 x float>* %1042, align 4, !tbaa !12, !llvm.access.group !16
  %1043 = fadd <8 x float> %wide.load193.3, %wide.load194.3
  %1044 = or i32 %1035, 1
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds float, float* %6, i64 %1045
  %1047 = bitcast float* %1046 to <8 x float>*
  %wide.load195.3 = load <8 x float>, <8 x float>* %1047, align 4, !tbaa !12, !llvm.access.group !16
  %1048 = fadd <8 x float> %1043, %wide.load195.3
  %1049 = add nsw i32 %mul15.i.i.6, %1034
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds float, float* %6, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %wide.load196.3 = load <8 x float>, <8 x float>* %1052, align 4, !tbaa !12, !llvm.access.group !16
  %1053 = fadd <8 x float> %1048, %wide.load196.3
  %1054 = add nsw i32 %mul21.i.i.6, %1034
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds float, float* %6, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %wide.load197.3 = load <8 x float>, <8 x float>* %1057, align 4, !tbaa !12, !llvm.access.group !16
  %1058 = fadd <8 x float> %1053, %wide.load197.3
  %1059 = fmul <8 x float> %1058, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1060 = getelementptr inbounds float, float* %9, i64 %1036
  %1061 = bitcast float* %1060 to <8 x float>*
  store <8 x float> %1059, <8 x float>* %1061, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.6

pregion_for_entry.entry.i.i.6:                    ; preds = %pregion_for_entry.entry.i.i.6, %pregion_for_entry.entry.i.i.6.preheader
  %_local_id_x.i.0.6 = phi i64 [ %1073, %pregion_for_entry.entry.i.i.6 ], [ 0, %pregion_for_entry.entry.i.i.6.preheader ]
  %add1.i.i.i.6 = add nuw nsw i64 %_local_id_x.i.0.6, %mul.i.i.i
  %conv2.i.i.6 = trunc i64 %add1.i.i.i.6 to i32
  %add.i.i.6 = add i32 %mul.i.i.6, %conv2.i.i.6
  %idxprom.i.i.6 = sext i32 %add.i.i.6 to i64
  %arrayidx.i.i.6 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.6
  %1062 = load float, float* %arrayidx.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.6 = add i32 %add.i.i.6, -1
  %idxprom5.i.i.6 = sext i32 %add4.i.i.6 to i64
  %arrayidx6.i.i.6 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.6
  %1063 = load float, float* %arrayidx6.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.6 = fadd float %1062, %1063
  %add10.i.i.6 = or i32 %add.i.i.6, 1
  %idxprom11.i.i.6 = sext i32 %add10.i.i.6 to i64
  %arrayidx12.i.i.6 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.6
  %1064 = load float, float* %arrayidx12.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.6 = fadd float %add7.i.i.6, %1064
  %add16.i.i.6 = add nsw i32 %mul15.i.i.6, %conv2.i.i.6
  %idxprom17.i.i.6 = sext i32 %add16.i.i.6 to i64
  %arrayidx18.i.i.6 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.6
  %1065 = load float, float* %arrayidx18.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.6 = fadd float %add13.i.i.6, %1065
  %add22.i.i.6 = add nsw i32 %mul21.i.i.6, %conv2.i.i.6
  %idxprom23.i.i.6 = sext i32 %add22.i.i.6 to i64
  %arrayidx24.i.i.6 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.6
  %1066 = load float, float* %arrayidx24.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.6 = fadd float %add19.i.i.6, %1066
  %mul26.i.i.6 = fmul float %add25.i.i.6, 0x3FC99999A0000000
  %arrayidx30.i.i.6 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.6
  store float %mul26.i.i.6, float* %arrayidx30.i.i.6, align 4, !tbaa !12, !llvm.access.group !16
  %1067 = or i64 %_local_id_x.i.0.6, 1
  %add1.i.i.i.6.1 = add nuw nsw i64 %1067, %mul.i.i.i
  %conv2.i.i.6.1 = trunc i64 %add1.i.i.i.6.1 to i32
  %add.i.i.6.1 = add i32 %mul.i.i.6, %conv2.i.i.6.1
  %idxprom.i.i.6.1 = sext i32 %add.i.i.6.1 to i64
  %arrayidx.i.i.6.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.6.1
  %1068 = load float, float* %arrayidx.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.6.1 = add nsw i32 %add.i.i.6.1, -1
  %idxprom5.i.i.6.1 = sext i32 %add4.i.i.6.1 to i64
  %arrayidx6.i.i.6.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.6.1
  %1069 = load float, float* %arrayidx6.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.6.1 = fadd float %1068, %1069
  %add10.i.i.6.1 = add i32 %add.i.i.6.1, 1
  %idxprom11.i.i.6.1 = sext i32 %add10.i.i.6.1 to i64
  %arrayidx12.i.i.6.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.6.1
  %1070 = load float, float* %arrayidx12.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.6.1 = fadd float %add7.i.i.6.1, %1070
  %add16.i.i.6.1 = add nsw i32 %mul15.i.i.6, %conv2.i.i.6.1
  %idxprom17.i.i.6.1 = sext i32 %add16.i.i.6.1 to i64
  %arrayidx18.i.i.6.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.6.1
  %1071 = load float, float* %arrayidx18.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.6.1 = fadd float %add13.i.i.6.1, %1071
  %add22.i.i.6.1 = add nsw i32 %mul21.i.i.6, %conv2.i.i.6.1
  %idxprom23.i.i.6.1 = sext i32 %add22.i.i.6.1 to i64
  %arrayidx24.i.i.6.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.6.1
  %1072 = load float, float* %arrayidx24.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.6.1 = fadd float %add19.i.i.6.1, %1072
  %mul26.i.i.6.1 = fmul float %add25.i.i.6.1, 0x3FC99999A0000000
  %arrayidx30.i.i.6.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.6.1
  store float %mul26.i.i.6.1, float* %arrayidx30.i.i.6.1, align 4, !tbaa !12, !llvm.access.group !16
  %1073 = add nuw nsw i64 %_local_id_x.i.0.6, 2
  %exitcond.6.not.1 = icmp eq i64 %1073, 32
  br i1 %exitcond.6.not.1, label %pregion_for_end.i.i.6.loopexit, label %pregion_for_entry.entry.i.i.6, !llvm.loop !43

pregion_for_end.i.i.6.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.6
  br label %pregion_for_end.i.i.6

pregion_for_end.i.i.6:                            ; preds = %pregion_for_end.i.i.6.loopexit, %vector.body170
  %1074 = trunc i64 %mul3.i.i.i to i32
  %conv.i.i.7 = or i32 %1074, 7
  %mul.i.i.7 = mul nsw i32 %13, %conv.i.i.7
  %add14.i.i.7 = add nsw i32 %conv.i.i.7, 1
  %mul15.i.i.7 = mul nsw i32 %add14.i.i.7, %13
  %sub20.i.i.7 = add nsw i32 %conv.i.i.7, -1
  %mul21.i.i.7 = mul nsw i32 %sub20.i.i.7, %13
  %1075 = mul i32 %13, %add14.i.i.6
  %1076 = trunc i64 %2 to i32
  %1077 = shl i32 %1076, 5
  %1078 = add nsw i32 %1075, %1077
  %1079 = icmp sgt i32 %1078, 2147483616
  %1080 = add i32 %1075, %1077
  %1081 = add i32 %1080, -1
  %1082 = add i32 %1080, 30
  %1083 = icmp slt i32 %1082, %1081
  %1084 = or i1 %1079, %1083
  %1085 = add i32 %1075, %1077
  %1086 = add i32 %1085, 1
  %1087 = add i32 %1085, 32
  %1088 = icmp slt i32 %1087, %1086
  %1089 = or i1 %1084, %1088
  %1090 = add i32 %conv.i.i, 8
  %1091 = mul i32 %13, %1090
  %1092 = add nsw i32 %1091, %1077
  %1093 = icmp sgt i32 %1092, 2147483616
  %1094 = or i1 %1089, %1093
  %1095 = mul i32 %13, %conv.i.i.6
  %1096 = add nsw i32 %1095, %1077
  %1097 = icmp sgt i32 %1096, 2147483616
  %1098 = or i1 %1094, %1097
  br i1 %1098, label %pregion_for_entry.entry.i.i.7.preheader, label %vector.body200

pregion_for_entry.entry.i.i.7.preheader:          ; preds = %pregion_for_end.i.i.6
  br label %pregion_for_entry.entry.i.i.7

vector.body200:                                   ; preds = %pregion_for_end.i.i.6
  %1099 = trunc i64 %mul.i.i.i to i32
  %1100 = add i32 %mul.i.i.7, %1099
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds float, float* %6, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %wide.load223 = load <8 x float>, <8 x float>* %1103, align 4, !tbaa !12, !llvm.access.group !16
  %1104 = add i32 %1100, -1
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds float, float* %6, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %wide.load224 = load <8 x float>, <8 x float>* %1107, align 4, !tbaa !12, !llvm.access.group !16
  %1108 = fadd <8 x float> %wide.load223, %wide.load224
  %1109 = add i32 %1100, 1
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds float, float* %6, i64 %1110
  %1112 = bitcast float* %1111 to <8 x float>*
  %wide.load225 = load <8 x float>, <8 x float>* %1112, align 4, !tbaa !12, !llvm.access.group !16
  %1113 = fadd <8 x float> %1108, %wide.load225
  %1114 = add nsw i32 %mul15.i.i.7, %1099
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds float, float* %6, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %wide.load226 = load <8 x float>, <8 x float>* %1117, align 4, !tbaa !12, !llvm.access.group !16
  %1118 = fadd <8 x float> %1113, %wide.load226
  %1119 = add nsw i32 %mul21.i.i.7, %1099
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds float, float* %6, i64 %1120
  %1122 = bitcast float* %1121 to <8 x float>*
  %wide.load227 = load <8 x float>, <8 x float>* %1122, align 4, !tbaa !12, !llvm.access.group !16
  %1123 = fadd <8 x float> %1118, %wide.load227
  %1124 = fmul <8 x float> %1123, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1125 = getelementptr inbounds float, float* %9, i64 %1101
  %1126 = bitcast float* %1125 to <8 x float>*
  store <8 x float> %1124, <8 x float>* %1126, align 4, !tbaa !12, !llvm.access.group !16
  %1127 = trunc i64 %mul.i.i.i to i32
  %1128 = or i32 %1127, 8
  %1129 = add i32 %mul.i.i.7, %1128
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds float, float* %6, i64 %1130
  %1132 = bitcast float* %1131 to <8 x float>*
  %wide.load223.1 = load <8 x float>, <8 x float>* %1132, align 4, !tbaa !12, !llvm.access.group !16
  %1133 = add i32 %1129, -1
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds float, float* %6, i64 %1134
  %1136 = bitcast float* %1135 to <8 x float>*
  %wide.load224.1 = load <8 x float>, <8 x float>* %1136, align 4, !tbaa !12, !llvm.access.group !16
  %1137 = fadd <8 x float> %wide.load223.1, %wide.load224.1
  %1138 = add i32 %1129, 1
  %1139 = sext i32 %1138 to i64
  %1140 = getelementptr inbounds float, float* %6, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %wide.load225.1 = load <8 x float>, <8 x float>* %1141, align 4, !tbaa !12, !llvm.access.group !16
  %1142 = fadd <8 x float> %1137, %wide.load225.1
  %1143 = add nsw i32 %mul15.i.i.7, %1128
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds float, float* %6, i64 %1144
  %1146 = bitcast float* %1145 to <8 x float>*
  %wide.load226.1 = load <8 x float>, <8 x float>* %1146, align 4, !tbaa !12, !llvm.access.group !16
  %1147 = fadd <8 x float> %1142, %wide.load226.1
  %1148 = add nsw i32 %mul21.i.i.7, %1128
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds float, float* %6, i64 %1149
  %1151 = bitcast float* %1150 to <8 x float>*
  %wide.load227.1 = load <8 x float>, <8 x float>* %1151, align 4, !tbaa !12, !llvm.access.group !16
  %1152 = fadd <8 x float> %1147, %wide.load227.1
  %1153 = fmul <8 x float> %1152, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1154 = getelementptr inbounds float, float* %9, i64 %1130
  %1155 = bitcast float* %1154 to <8 x float>*
  store <8 x float> %1153, <8 x float>* %1155, align 4, !tbaa !12, !llvm.access.group !16
  %1156 = trunc i64 %mul.i.i.i to i32
  %1157 = or i32 %1156, 16
  %1158 = add i32 %mul.i.i.7, %1157
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds float, float* %6, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %wide.load223.2 = load <8 x float>, <8 x float>* %1161, align 4, !tbaa !12, !llvm.access.group !16
  %1162 = add i32 %1158, -1
  %1163 = sext i32 %1162 to i64
  %1164 = getelementptr inbounds float, float* %6, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %wide.load224.2 = load <8 x float>, <8 x float>* %1165, align 4, !tbaa !12, !llvm.access.group !16
  %1166 = fadd <8 x float> %wide.load223.2, %wide.load224.2
  %1167 = add i32 %1158, 1
  %1168 = sext i32 %1167 to i64
  %1169 = getelementptr inbounds float, float* %6, i64 %1168
  %1170 = bitcast float* %1169 to <8 x float>*
  %wide.load225.2 = load <8 x float>, <8 x float>* %1170, align 4, !tbaa !12, !llvm.access.group !16
  %1171 = fadd <8 x float> %1166, %wide.load225.2
  %1172 = add nsw i32 %mul15.i.i.7, %1157
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds float, float* %6, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %wide.load226.2 = load <8 x float>, <8 x float>* %1175, align 4, !tbaa !12, !llvm.access.group !16
  %1176 = fadd <8 x float> %1171, %wide.load226.2
  %1177 = add nsw i32 %mul21.i.i.7, %1157
  %1178 = sext i32 %1177 to i64
  %1179 = getelementptr inbounds float, float* %6, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %wide.load227.2 = load <8 x float>, <8 x float>* %1180, align 4, !tbaa !12, !llvm.access.group !16
  %1181 = fadd <8 x float> %1176, %wide.load227.2
  %1182 = fmul <8 x float> %1181, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1183 = getelementptr inbounds float, float* %9, i64 %1159
  %1184 = bitcast float* %1183 to <8 x float>*
  store <8 x float> %1182, <8 x float>* %1184, align 4, !tbaa !12, !llvm.access.group !16
  %1185 = trunc i64 %mul.i.i.i to i32
  %1186 = or i32 %1185, 24
  %1187 = add i32 %mul.i.i.7, %1186
  %1188 = sext i32 %1187 to i64
  %1189 = getelementptr inbounds float, float* %6, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %wide.load223.3 = load <8 x float>, <8 x float>* %1190, align 4, !tbaa !12, !llvm.access.group !16
  %1191 = add i32 %1187, -1
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds float, float* %6, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %wide.load224.3 = load <8 x float>, <8 x float>* %1194, align 4, !tbaa !12, !llvm.access.group !16
  %1195 = fadd <8 x float> %wide.load223.3, %wide.load224.3
  %1196 = add i32 %1187, 1
  %1197 = sext i32 %1196 to i64
  %1198 = getelementptr inbounds float, float* %6, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %wide.load225.3 = load <8 x float>, <8 x float>* %1199, align 4, !tbaa !12, !llvm.access.group !16
  %1200 = fadd <8 x float> %1195, %wide.load225.3
  %1201 = add nsw i32 %mul15.i.i.7, %1186
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds float, float* %6, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %wide.load226.3 = load <8 x float>, <8 x float>* %1204, align 4, !tbaa !12, !llvm.access.group !16
  %1205 = fadd <8 x float> %1200, %wide.load226.3
  %1206 = add nsw i32 %mul21.i.i.7, %1186
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds float, float* %6, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %wide.load227.3 = load <8 x float>, <8 x float>* %1209, align 4, !tbaa !12, !llvm.access.group !16
  %1210 = fadd <8 x float> %1205, %wide.load227.3
  %1211 = fmul <8 x float> %1210, <float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000, float 0x3FC99999A0000000>
  %1212 = getelementptr inbounds float, float* %9, i64 %1188
  %1213 = bitcast float* %1212 to <8 x float>*
  store <8 x float> %1211, <8 x float>* %1213, align 4, !tbaa !12, !llvm.access.group !16
  br label %pregion_for_end.i.i.7

pregion_for_entry.entry.i.i.7:                    ; preds = %pregion_for_entry.entry.i.i.7, %pregion_for_entry.entry.i.i.7.preheader
  %_local_id_x.i.0.7 = phi i64 [ %1225, %pregion_for_entry.entry.i.i.7 ], [ 0, %pregion_for_entry.entry.i.i.7.preheader ]
  %add1.i.i.i.7 = add nuw nsw i64 %_local_id_x.i.0.7, %mul.i.i.i
  %conv2.i.i.7 = trunc i64 %add1.i.i.i.7 to i32
  %add.i.i.7 = add i32 %mul.i.i.7, %conv2.i.i.7
  %idxprom.i.i.7 = sext i32 %add.i.i.7 to i64
  %arrayidx.i.i.7 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.7
  %1214 = load float, float* %arrayidx.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.7 = add i32 %add.i.i.7, -1
  %idxprom5.i.i.7 = sext i32 %add4.i.i.7 to i64
  %arrayidx6.i.i.7 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.7
  %1215 = load float, float* %arrayidx6.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.7 = fadd float %1214, %1215
  %add10.i.i.7 = add i32 %add.i.i.7, 1
  %idxprom11.i.i.7 = sext i32 %add10.i.i.7 to i64
  %arrayidx12.i.i.7 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.7
  %1216 = load float, float* %arrayidx12.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.7 = fadd float %add7.i.i.7, %1216
  %add16.i.i.7 = add nsw i32 %mul15.i.i.7, %conv2.i.i.7
  %idxprom17.i.i.7 = sext i32 %add16.i.i.7 to i64
  %arrayidx18.i.i.7 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.7
  %1217 = load float, float* %arrayidx18.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.7 = fadd float %add13.i.i.7, %1217
  %add22.i.i.7 = add nsw i32 %mul21.i.i.7, %conv2.i.i.7
  %idxprom23.i.i.7 = sext i32 %add22.i.i.7 to i64
  %arrayidx24.i.i.7 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.7
  %1218 = load float, float* %arrayidx24.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.7 = fadd float %add19.i.i.7, %1218
  %mul26.i.i.7 = fmul float %add25.i.i.7, 0x3FC99999A0000000
  %arrayidx30.i.i.7 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.7
  store float %mul26.i.i.7, float* %arrayidx30.i.i.7, align 4, !tbaa !12, !llvm.access.group !16
  %1219 = or i64 %_local_id_x.i.0.7, 1
  %add1.i.i.i.7.1 = add nuw nsw i64 %1219, %mul.i.i.i
  %conv2.i.i.7.1 = trunc i64 %add1.i.i.i.7.1 to i32
  %add.i.i.7.1 = add i32 %mul.i.i.7, %conv2.i.i.7.1
  %idxprom.i.i.7.1 = sext i32 %add.i.i.7.1 to i64
  %arrayidx.i.i.7.1 = getelementptr inbounds float, float* %6, i64 %idxprom.i.i.7.1
  %1220 = load float, float* %arrayidx.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add4.i.i.7.1 = add i32 %add.i.i.7.1, -1
  %idxprom5.i.i.7.1 = sext i32 %add4.i.i.7.1 to i64
  %arrayidx6.i.i.7.1 = getelementptr inbounds float, float* %6, i64 %idxprom5.i.i.7.1
  %1221 = load float, float* %arrayidx6.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add7.i.i.7.1 = fadd float %1220, %1221
  %add10.i.i.7.1 = add i32 %add.i.i.7.1, 1
  %idxprom11.i.i.7.1 = sext i32 %add10.i.i.7.1 to i64
  %arrayidx12.i.i.7.1 = getelementptr inbounds float, float* %6, i64 %idxprom11.i.i.7.1
  %1222 = load float, float* %arrayidx12.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add13.i.i.7.1 = fadd float %add7.i.i.7.1, %1222
  %add16.i.i.7.1 = add nsw i32 %mul15.i.i.7, %conv2.i.i.7.1
  %idxprom17.i.i.7.1 = sext i32 %add16.i.i.7.1 to i64
  %arrayidx18.i.i.7.1 = getelementptr inbounds float, float* %6, i64 %idxprom17.i.i.7.1
  %1223 = load float, float* %arrayidx18.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add19.i.i.7.1 = fadd float %add13.i.i.7.1, %1223
  %add22.i.i.7.1 = add nsw i32 %mul21.i.i.7, %conv2.i.i.7.1
  %idxprom23.i.i.7.1 = sext i32 %add22.i.i.7.1 to i64
  %arrayidx24.i.i.7.1 = getelementptr inbounds float, float* %6, i64 %idxprom23.i.i.7.1
  %1224 = load float, float* %arrayidx24.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %add25.i.i.7.1 = fadd float %add19.i.i.7.1, %1224
  %mul26.i.i.7.1 = fmul float %add25.i.i.7.1, 0x3FC99999A0000000
  %arrayidx30.i.i.7.1 = getelementptr inbounds float, float* %9, i64 %idxprom.i.i.7.1
  store float %mul26.i.i.7.1, float* %arrayidx30.i.i.7.1, align 4, !tbaa !12, !llvm.access.group !16
  %1225 = add nuw nsw i64 %_local_id_x.i.0.7, 2
  %exitcond.7.not.1 = icmp eq i64 %1225, 32
  br i1 %exitcond.7.not.1, label %pregion_for_end.i.i.7.loopexit, label %pregion_for_entry.entry.i.i.7, !llvm.loop !44

pregion_for_end.i.i.7.loopexit:                   ; preds = %pregion_for_entry.entry.i.i.7
  br label %pregion_for_end.i.i.7

pregion_for_end.i.i.7:                            ; preds = %pregion_for_end.i.i.7.loopexit, %vector.body200
  ret void
}

attributes #0 = { alwaysinline nofree norecurse nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-builtins" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "stackrealign" "target-cpu"="skylake" "target-features"="+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "uniform-work-group-size"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind }

!llvm.module.flags = !{!0, !1, !2}
!opencl.ocl.version = !{!3}
!llvm.ident = !{!4}
!opencl.spir.version = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 1, i32 2}
!4 = !{!"clang version 11.0.0 (git@github.com:llvm/llvm-project.git 91e89f9a5115b0f83b8f026e1ad0e6d1f885fa9b)"}
!5 = !{i32 1, i32 1, i32 0}
!6 = !{!"none", !"none", !"none"}
!7 = !{!"DATA_TYPE*", !"DATA_TYPE*", !"int"}
!8 = !{!"float*", !"float*", !"int"}
!9 = !{!"", !"", !""}
!10 = !{!"A", !"B", !"n"}
!11 = !{i32 1}
!12 = !{!13, !13, i64 0}
!13 = !{!"float", !14, i64 0}
!14 = !{!"omnipotent char", !15, i64 0}
!15 = !{!"Simple C/C++ TBAA"}
!16 = !{!17, !18}
!17 = distinct !{}
!18 = distinct !{}
!19 = distinct !{!19, !20, !21}
!20 = !{!"llvm.loop.parallel_accesses", !17}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !20, !21}
!23 = distinct !{!23, !20, !21}
!24 = distinct !{!24, !20, !21}
!25 = distinct !{!25, !20, !21}
!26 = distinct !{!26, !20, !21}
!27 = distinct !{!27, !20, !21}
!28 = distinct !{!28, !20, !21}
!29 = distinct !{!29, !20, !21}
!30 = distinct !{!30, !20, !21}
!31 = distinct !{!31, !20, !21}
!32 = distinct !{!32, !20, !21}
!33 = distinct !{!33, !20, !21}
!34 = distinct !{!34, !20, !21}
!35 = distinct !{!35, !20, !21}
!36 = distinct !{!36, !20, !21}
!37 = distinct !{!37, !20, !21}
!38 = distinct !{!38, !20, !21}
!39 = distinct !{!39, !20, !21}
!40 = distinct !{!40, !20, !21}
!41 = distinct !{!41, !20, !21}
!42 = distinct !{!42, !20, !21}
!43 = distinct !{!43, !20, !21}
!44 = distinct !{!44, !20, !21}
